// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;
import ballerina/http;

# Represents the Queries record for the operation: GetIssuingAuthorizations
public type GetIssuingAuthorizationsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIssuingAuthorizationsQueriesExpandItemsString[] expand?;
    # Only return authorizations that were created during the given date interval.
    created_17 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return authorizations that belong to the given cardholder.
    @constraint:String {maxLength: 5000}
    string cardholder?;
    # Only return authorizations that belong to the given card.
    @constraint:String {maxLength: 5000}
    string card?;
    # Only return authorizations with the given status. One of `pending`, `closed`, or `reversed`.
    "closed"|"pending"|"reversed" status?;
};

public type id_fail_bodyExpandItemsString string;

# 
public type Line_item record {
    # The amount, in cents (or local equivalent).
    int amount;
    # The integer amount in cents (or local equivalent) representing the amount for this line item, excluding all tax and discounts.
    int? amount_excluding_tax?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # The amount of discount calculated per discount for this line item.
    Discounts_resource_discount_amount[]? discount_amounts?;
    # If true, discounts will apply to this line item. Always false for prorations.
    boolean discountable;
    # The discounts applied to the invoice line item. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.
    (string|Discount)[] discounts;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The ID of the invoice that contains this line item.
    string? invoice?;
    # The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems) associated with this line item if any.
    string|Invoiceitem invoice_item?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with `type=subscription`, `metadata` reflects the current metadata from the subscription associated with the line item, unless the invoice line was directly updated with different metadata after creation.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "line_item" 'object;
    Invoice_line_item_period period;
    # The price of the line item.
    Price? price?;
    # Whether this is a proration.
    boolean proration;
    # Additional details for proration line items
    Invoices_resource_line_items_proration_details? proration_details?;
    # The quantity of the subscription, if the line item is a subscription or a proration.
    int? quantity?;
    # The subscription that the invoice item pertains to, if any.
    string|Subscription? subscription?;
    # The subscription item that generated this line item. Left empty if the line item is not an explicit result of a subscription.
    string|Subscription_item subscription_item?;
    # The amount of tax calculated per tax rate for this line item
    Invoice_tax_amount[] tax_amounts?;
    # The tax rates which apply to the line item.
    Tax_rate[] tax_rates?;
    # A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`.
    "invoiceitem"|"subscription" 'type;
    # The amount in cents (or local equivalent) representing the unit amount for this line item, excluding all tax and discounts.
    string? unit_amount_excluding_tax?;
};

# 
public type Mandate_bacs_debit record {
    # The status of the mandate on the Bacs network. Can be one of `pending`, `revoked`, `refused`, or `accepted`.
    "accepted"|"pending"|"refused"|"revoked" network_status;
    # The unique reference identifying the mandate on the Bacs network.
    @constraint:String {maxLength: 5000}
    string reference;
    # When the mandate is revoked on the Bacs network this field displays the reason for the revocation.
    "account_closed"|"bank_account_restricted"|"bank_ownership_changed"|"could_not_process"|"debit_not_authorized"? revocation_reason?;
    # The URL that will contain the mandate that the customer has signed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Checkout_cashapp_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type shipping_option_params record {
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
    method_params shipping_rate_data?;
};

# 
public type Invoices_resource_from_invoice record {
    # The relation between this invoice and the cloned invoice
    @constraint:String {maxLength: 5000}
    string action;
    # The invoice that was cloned.
    string|Invoice invoice;
};

@constraint:String {maxLength: 5000}
public type GetPricesQueriesLookupkeysItemsString string;

# Fleet-specific information for authorizations using Fleet cards.
public type fleet_specs record {
    fleet_cardholder_prompt_data_specs cardholder_prompt_data?;
    "fuel_and_non_fuel_purchase"|"fuel_purchase"|"non_fuel_purchase" purchase_type?;
    fleet_reported_breakdown_specs reported_breakdown?;
    "full_service"|"non_fuel_transaction"|"self_service" service_type?;
};

public type person_verification_document_specs record {
    @constraint:String {maxLength: 500}
    string back?;
    @constraint:String {maxLength: 500}
    string front?;
};

# Represents the Queries record for the operation: GetLinkAccountSessionsSession
public type GetLinkAccountSessionsSessionQueries record {
    # Specifies which fields in the response should be expanded.
    GetLinkAccountSessionsSessionQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetLinkedAccountsAccount
public type GetLinkedAccountsAccountQueries record {
    # Specifies which fields in the response should be expanded.
    GetLinkedAccountsAccountQueriesExpandItemsString[] expand?;
};

# Balance information and default balance settings for this customer.
public type cash_balance_param record {
    balance_settings_param settings?;
};

public type invoice_settings_params record {
    param issuer?;
};

# 
public type Gelato_verification_report_options record {
    Gelato_report_document_options document?;
    Gelato_report_id_number_options id_number?;
};

# 
public type Payment_links_resource_custom_fields_text record {
    # The maximum character length constraint for the customer's input.
    int? maximum_length?;
    # The minimum character length requirement for the customer's input.
    int? minimum_length?;
};

# Represents the Queries record for the operation: GetRefunds
public type GetRefundsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetRefundsQueriesExpandItemsString[] expand?;
    # Only return refunds for the charge specified by this charge ID.
    string charge?;
    # Only return refunds that were created during the given date interval.
    created_32 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return refunds for the PaymentIntent specified by this ID.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

# Represents a per-transaction override of a reader configuration
public type Terminal_reader_reader_resource_refund_payment_config record {
    # Enable customer initiated cancellation when refunding this payment.
    boolean enable_customer_cancellation?;
};

# Represents the Queries record for the operation: GetPaymentMethodDomains
public type GetPaymentMethodDomainsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # The domain name that this payment method domain object represents.
    @constraint:String {maxLength: 5000}
    string domain_name?;
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodDomainsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Whether this payment method domain is enabled. If the domain is not enabled, payment methods will not appear in Elements
    boolean enabled?;
};

# When creating a subscription or subscription schedule, the specified configuration data will be used. There must be at least one line item with a recurring price for a subscription or subscription schedule to be created. A subscription schedule is created if `subscription_data[effective_date]` is present and in the future, otherwise a subscription is created.
public type subscription_data_create_params record {
    @constraint:String {maxLength: 500}
    string description?;
    "current_period_end"|int|"" effective_date?;
    record {|string...;|} metadata?;
    int|"" trial_period_days?;
};

# Represents the Queries record for the operation: GetReportingReportRunsReportRun
public type GetReportingReportRunsReportRunQueries record {
    # Specifies which fields in the response should be expanded.
    GetReportingReportRunsReportRunQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetTaxIds
public type GetTaxIdsQueries record {
    # The account or customer the tax ID belongs to. Defaults to `owner[type]=self`.
    owner_params owner?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTaxIdsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetMandatesMandateQueriesExpandItemsString string;

public type refunds_bodyExpandItemsString string;

public type rendering_pdf_param record {
    "a4"|"auto"|"letter" page_size?;
};

# Details of the PaymentMethod collected by Payment Element
public type Confirmation_tokens_resource_payment_method_preview record {
    Payment_method_acss_debit acss_debit?;
    Payment_method_affirm affirm?;
    Payment_method_afterpay_clearpay afterpay_clearpay?;
    Payment_flows_private_payment_methods_alipay alipay?;
    # This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to “unspecified”.
    "always"|"limited"|"unspecified" allow_redisplay?;
    Payment_method_amazon_pay amazon_pay?;
    Payment_method_au_becs_debit au_becs_debit?;
    Payment_method_bacs_debit bacs_debit?;
    Payment_method_bancontact bancontact?;
    Billing_details billing_details;
    Payment_method_blik blik?;
    Payment_method_boleto boleto?;
    Payment_method_card card?;
    Payment_method_card_present card_present?;
    Payment_method_cashapp cashapp?;
    Payment_method_customer_balance customer_balance?;
    Payment_method_eps eps?;
    Payment_method_fpx fpx?;
    Payment_method_giropay giropay?;
    Payment_method_grabpay grabpay?;
    Payment_method_ideal ideal?;
    Payment_method_interac_present interac_present?;
    Payment_method_klarna klarna?;
    Payment_method_konbini konbini?;
    Payment_method_link link?;
    Payment_method_mobilepay mobilepay?;
    Payment_method_multibanco multibanco?;
    Payment_method_oxxo oxxo?;
    Payment_method_p24 p24?;
    Payment_method_paynow paynow?;
    Payment_method_paypal paypal?;
    Payment_method_pix pix?;
    Payment_method_promptpay promptpay?;
    Payment_method_revolut_pay revolut_pay?;
    Payment_method_sepa_debit sepa_debit?;
    Payment_method_sofort sofort?;
    Payment_method_swish swish?;
    Payment_method_twint twint?;
    # The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"card_present"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"interac_present"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type;
    Payment_method_us_bank_account us_bank_account?;
    Payment_method_wechat_pay wechat_pay?;
    Payment_method_zip zip?;
};

# 
public type TreasuryTransactionsResourceTransactionList record {
    # Details about each object.
    Treasury\.transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Issuing_cardholder_address record {
    Address address;
};

# 
public type Invoice_setting_quote_setting record {
    # Number of days within which a customer must pay invoices generated by this quote. This value will be `null` for quotes where `collection_method=charge_automatically`.
    int? days_until_due?;
    Connect_account_reference issuer;
};

public type province_standard record {
    @constraint:String {maxLength: 5000}
    string province;
};

# Represents the Queries record for the operation: GetSourcesSource
public type GetSourcesSourceQueries record {
    # Specifies which fields in the response should be expanded.
    GetSourcesSourceQueriesExpandItemsString[] expand?;
    # The client secret of the source. Required if a publishable key is used to retrieve the source.
    @constraint:String {maxLength: 5000}
    string client_secret?;
};

# Represents the Queries record for the operation: GetTreasuryTransactionEntries
public type GetTreasuryTransactionEntriesQueries record {
    effective_at effective_at?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryTransactionEntriesQueriesExpandItemsString[] expand?;
    # Only return TransactionEntries that were created during the given date interval.
    created_45 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # The results are in reverse chronological order by `created` or `effective_at`. The default is `created`.
    "created"|"effective_at" order_by?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return TransactionEntries associated with this Transaction.
    @constraint:String {maxLength: 5000}
    string 'transaction?;
};

public type account_refresh_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Country_spec_verification_field_detailsAdditionalItemsString string;

# Represents the Queries record for the operation: GetInvoicesSearch
public type GetInvoicesSearchQueries record {
    # Specifies which fields in the response should be expanded.
    GetInvoicesSearchQueriesExpandItemsString[] expand?;
    # The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for invoices](https://stripe.com/docs/search#query-fields-for-invoices).
    @constraint:String {maxLength: 5000}
    string query;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.
    @constraint:String {maxLength: 5000}
    string page?;
};

# 
public type Promotion_codes_resource_restrictions record {
    # Promotion code restrictions defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|Promotion_code_currency_option...;|} currency_options?;
    # A Boolean indicating if the Promotion Code should only be redeemed for Customers without any successful payments or invoices
    boolean first_time_transaction;
    # Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).
    int? minimum_amount?;
    # Three-letter [ISO code](https://stripe.com/docs/currencies) for minimum_amount
    string? minimum_amount_currency?;
};

# 
public type Source_mandate_notification_sepa_debit_data record {
    # SEPA creditor ID.
    @constraint:String {maxLength: 5000}
    string creditor_identifier?;
    # Last 4 digits of the account number associated with the debit.
    @constraint:String {maxLength: 5000}
    string last4?;
    # Mandate reference associated with the debit.
    @constraint:String {maxLength: 5000}
    string mandate_reference?;
};

# A list of items the customer is being quoted for.
public type QuotesResourceListLineItems_1 record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# The line items that will appear on the next invoice after this quote is accepted. This does not include pending invoice items that exist on the customer but may still be included in the next invoice.
public type QuotesResourceListLineItems_2 record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type quote_accept_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPaymentMethodDomainsPaymentMethodDomainQueriesExpandItemsString string;

public type address_specs record {
    @constraint:String {maxLength: 100}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 200}
    string line1?;
    @constraint:String {maxLength: 200}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

public type individual_relationship_specs record {
    boolean director?;
    boolean executive?;
    boolean owner?;
    decimal|"" percent_ownership?;
    @constraint:String {maxLength: 5000}
    string title?;
};

public type invoice_send_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_send_bodyExpandItemsString[] expand?;
|};

public type subscription_schedules_bodyExpandItemsString string;

# 
public type Portal_subscription_update record {
    # The types of subscription updates that are supported for items listed in the `products` attribute. When empty, subscriptions are not updateable.
    ("price"|"promotion_code"|"quantity")[] default_allowed_updates;
    # Whether the feature is enabled.
    boolean enabled;
    # The list of up to 10 products that support subscription updates.
    Portal_subscription_update_product[]? products?;
    # Determines how to handle prorations resulting from subscription updates. Valid values are `none`, `create_prorations`, and `always_invoice`. Defaults to a value of `none` if you don't set it during creation.
    "always_invoice"|"create_prorations"|"none" proration_behavior;
};

# Optional hash to set the return code.
public type returned_details_params record {
    "account_closed"|"account_frozen"|"bank_account_restricted"|"bank_ownership_changed"|"declined"|"incorrect_account_holder_name"|"invalid_account_number"|"invalid_currency"|"no_account"|"other" code?;
};

public type status_transition_timestamp_specs record {
    record {int gt?; int gte?; int lt?; int lte?;}|int posted_at?;
};

# 
public type Balance_amount record {
    # Balance amount.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    Balance_amount_by_source_type source_types?;
};

# Represents the Queries record for the operation: GetIssuingPhysicalBundlesPhysicalBundle
public type GetIssuingPhysicalBundlesPhysicalBundleQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingPhysicalBundlesPhysicalBundleQueriesExpandItemsString[] expand?;
};

public type authorization_approve_bodyExpandItemsString string;

# 
public type Subscriptions_resource_subscription_invoice_settings record {
    # The account tax IDs associated with the subscription. Will be set on invoices generated by the subscription.
    (string|Tax_id|Deleted_tax_id)[]? account_tax_ids?;
    Connect_account_reference issuer;
};

public type issuing_cards_bodyExpandItemsString string;

# 
public type Payment_method_pix record {
};

public type transaction_refund_body record {|
    # Specifies which fields in the response should be expanded.
    transaction_refund_bodyExpandItemsString[] expand?;
    # The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int refund_amount?;
|};

# Represents the Queries record for the operation: GetTaxRatesTaxRate
public type GetTaxRatesTaxRateQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxRatesTaxRateQueriesExpandItemsString[] expand?;
};

# Toggle settings for enabling/disabling the ABA address feature
public type Treasury_financial_accounts_resource_aba_toggle_settings record {
    # Whether the FinancialAccount should have the Feature.
    boolean requested;
    # Whether the Feature is operational.
    "active"|"pending"|"restricted" status;
    # Additional details; includes at least one entry when the status is not `active`.
    Treasury_financial_accounts_resource_toggles_setting_status_details[] status_details;
};

@constraint:String {maxLength: 5000}
public type GetRadarValueListsValueListQueriesExpandItemsString string;

public type Issuing\.physical_bundle record {
    Issuing_physical_bundle_features features;
    string id;
    boolean livemode;
    string name;
    "issuing.physical_bundle" 'object;
    "active"|"inactive"|"review" status;
    "custom"|"standard" 'type;
};

# Represents the Queries record for the operation: GetBalance
public type GetBalanceQueries record {
    # Specifies which fields in the response should be expanded.
    GetBalanceQueriesExpandItemsString[] expand?;
};

public type address record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

# 
public type Billing_meter_resource_billing_meter_status_transitions record {
    # The time the meter was deactivated, if any. Measured in seconds since Unix epoch.
    int? deactivated_at?;
};

public type subscriptions_subscription_exposed_id_body_3 record {|
    cancellation_details_param cancellation_details?;
    # Specifies which fields in the response should be expanded.
    subscriptions_subscription_exposed_id_body_3ExpandItemsString[] expand?;
    # Will generate a final invoice that invoices for any un-invoiced metered usage and new/pending proration invoice items. Defaults to `true`.
    boolean invoice_now?;
    # Will generate a proration invoice item that credits remaining unused time until the subscription period end. Defaults to `false`.
    boolean prorate?;
|};

public type subscriptions_subscription_exposed_id_body_2 record {|
    # A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.
    add_invoice_item_entry[] add_invoice_items?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
    decimal|"" application_fee_percent?;
    automatic_tax_config_4 automatic_tax?;
    # Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time (in UTC). For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    "now"|"unchanged" billing_cycle_anchor?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.
    int|"" cancel_at?;
    # Boolean indicating whether this subscription should cancel at the end of the current period.
    boolean cancel_at_period_end?;
    cancellation_details_param cancellation_details?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.
    int days_until_due?;
    # ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    string|"" default_source?;
    # The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. Pass an empty string to remove previously-defined tax rates.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    string|"" description?;
    # The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    subscriptions_subscription_exposed_id_body_2ExpandItemsString[] expand?;
    invoice_settings_param_1 invoice_settings?;
    # A list of up to 20 subscription items, each with an attached price.
    subscription_item_update_params[] items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted.
    boolean off_session?;
    # The account on behalf of which to charge, for each of the subscription's invoices.
    string|"" on_behalf_of?;
    # If specified, payment collection for this subscription will be paused. Note that the subscription status will be unchanged and will not be updated to `paused`. Learn more about [pausing collection](/billing/subscriptions/pause-payment).
    record {"keep_as_draft"|"mark_uncollectible"|"void" behavior; int resumes_at?;}|"" pause_collection?;
    # Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    # 
    # Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.
    # 
    # Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).
    # 
    # Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
    "allow_incomplete"|"default_incomplete"|"error_if_incomplete"|"pending_if_incomplete" payment_behavior?;
    payment_settings payment_settings?;
    # Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.
    record {"day"|"month"|"week"|"year" interval; int interval_count?;}|"" pending_invoice_item_interval?;
    # The promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    # If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#upcoming_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.
    int proration_date?;
    # If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges. This will be unset if you POST an empty value.
    record {decimal amount_percent?; string destination;}|"" transfer_data?;
    # Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`.
    "now"|int trial_end?;
    # Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    boolean trial_from_plan?;
    trial_settings_config_1 trial_settings?;
|};

public type subscriptions_subscription_exposed_id_body_1 record {|
    # Specifies which fields in the response should be expanded.
    subscriptions_subscription_exposed_id_body_1ExpandItemsString[] expand?;
    # Can be set to `true` if `at_period_end` is not set to `true`. Will generate a final invoice that invoices for any un-invoiced metered usage and new/pending proration invoice items.
    boolean invoice_now?;
    # Can be set to `true` if `at_period_end` is not set to `true`. Will generate a proration invoice item that credits remaining unused time until the subscription period end.
    boolean prorate?;
|};

@constraint:String {maxLength: 5000}
public type Financial_reporting_finance_report_run_run_parametersColumnsItemsString string;

# The set of functionalities that the platform can restrict on the FinancialAccount.
public type platform_restrictions record {
    "restricted"|"unrestricted" inbound_flows?;
    "restricted"|"unrestricted" outbound_flows?;
};

public type Terminal\.connection_token record {
    string location?;
    "terminal.connection_token" 'object;
    string secret;
};

# 
public type Payment_method_options_interac_present record {
};

# 
public type Issuing_authorization_fleet_reported_breakdown record {
    # Breakdown of fuel portion of the purchase.
    Issuing_authorization_fleet_fuel_price_data? fuel?;
    # Breakdown of non-fuel portion of the purchase.
    Issuing_authorization_fleet_non_fuel_price_data? non_fuel?;
    # Information about tax included in this transaction.
    Issuing_authorization_fleet_tax_data? tax?;
};

# 
public type ProductList record {
    # Details about each object.
    Product[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/products`}
    string url;
};

# Represents the Queries record for the operation: GetAccountsAccountPersonsPerson
public type GetAccountsAccountPersonsPersonQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountPersonsPersonQueriesExpandItemsString[] expand?;
};

public type id_post_body record {|
    # Specifies which fields in the response should be expanded.
    id_post_bodyExpandItemsString[] expand?;
|};

public type terminal_locations_body record {|
    create_location_address_param address;
    # The ID of a configuration that will be used to customize all readers in this location.
    @constraint:String {maxLength: 1000}
    string configuration_overrides?;
    # A name for the location.
    @constraint:String {maxLength: 1000}
    string display_name;
    # Specifies which fields in the response should be expanded.
    terminal_locations_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

@constraint:String {maxLength: 5000}
public type GetTokensTokenQueriesExpandItemsString string;

# 
public type RadarListListItemList record {
    Radar\.value_list_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/radar/value_list_items`}
    string url;
};

@constraint:String {maxLength: 5000}
public type Account_capability_future_requirementsCurrentlydueItemsString string;

public type payment_intents_intent_bodyPaymentmethodtypesItemsString string;

public type after_completion_redirect_params record {
    @constraint:String {maxLength: 2048}
    string url;
};

public type standard record {
    "small_seller"|"standard" place_of_supply_scheme;
};

# A list of refunds that have been applied to the charge.
public type RefundList_1 record {
    # Details about each object.
    Refund[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type subscription_schedules_body record {|
    # The identifier of the customer to create the subscription schedule for.
    @constraint:String {maxLength: 5000}
    string customer?;
    default_settings_params default_settings?;
    # Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running. `cancel` will end the subscription schedule and cancel the underlying subscription.
    "cancel"|"none"|"release"|"renew" end_behavior?;
    # Specifies which fields in the response should be expanded.
    subscription_schedules_bodyExpandItemsString[] expand?;
    # Migrate an existing subscription to be managed by a subscription schedule. If this parameter is set, a subscription schedule will be created using the subscription's item(s), set to auto-renew using the subscription's interval. When using this parameter, other parameters (such as phase values) cannot be set. To create a subscription schedule with other modifications, we recommend making two separate API calls.
    @constraint:String {maxLength: 5000}
    string from_subscription?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # List representing phases of the subscription schedule. Each phase can be customized to have different durations, plans, and coupons. If there are multiple phases, the `end_date` of one phase will always equal the `start_date` of the next phase.
    phase_configuration_params_3[] phases?;
    # When the subscription schedule starts. We recommend using `now` so that it starts the subscription immediately. You can also use a Unix timestamp to backdate the subscription so that it starts on a past date, or set a future date for the subscription to start on.
    int|"now" start_date?;
|};

public type linked_account_options_param_1PermissionsItemsString "balances"|"ownership"|"payment_method"|"transactions";

# Represents the Queries record for the operation: GetConfirmationTokensConfirmationToken
public type GetConfirmationTokensConfirmationTokenQueries record {
    # Specifies which fields in the response should be expanded.
    GetConfirmationTokensConfirmationTokenQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_authorization_network_data record {
    # Identifier assigned to the acquirer by the card network. Sometimes this value is not provided by the network; in this case, the value will be `null`.
    string? acquiring_institution_id?;
    # The System Trace Audit Number (STAN) is a 6-digit identifier assigned by the acquirer. Prefer `network_data.transaction_id` if present, unless you have special requirements.
    string? system_trace_audit_number?;
    # Unique identifier for the authorization assigned by the card network used to match subsequent messages, disputes, and transactions.
    string? transaction_id?;
};

# 
public type Tax_deducted_at_source record {
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "tax_deducted_at_source" 'object;
    # The end of the invoicing period. This TDS applies to Stripe fees collected during this invoicing period.
    int period_end;
    # The start of the invoicing period. This TDS applies to Stripe fees collected during this invoicing period.
    int period_start;
    # The TAN that was supplied to Stripe when TDS was assessed
    @constraint:String {maxLength: 5000}
    string tax_deduction_account_number;
};

# 
public type Checkout_grab_pay_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type reversals_id_body record {|
    # Specifies which fields in the response should be expanded.
    reversals_id_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# Details about why this subscription was cancelled
public type cancellation_details_param record {
    string|"" comment?;
    ""|"customer_service"|"low_quality"|"missing_features"|"other"|"switched_service"|"too_complex"|"too_expensive"|"unused" feedback?;
};

# 
public type Notification_event_request record {
    # ID of the API request that caused the event. If null, the event was automatic (e.g., Stripe's automatic subscription handling). Request logs are available in the [dashboard](https://dashboard.stripe.com/logs), but currently not in the API.
    string? id?;
    # The idempotency key transmitted during the request, if any. *Note: This property is populated only for events on or after May 23, 2017*.
    string? idempotency_key?;
};

# 
public type Invoice_payment_method_options_customer_balance record {
    Invoice_payment_method_options_customer_balance_bank_transfer bank_transfer?;
    # The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.
    "bank_transfer"? funding_type?;
};

# 
public type Payment_method_details_fpx record {
    # The customer's bank. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`, or `bank_of_china`.
    "affin_bank"|"agrobank"|"alliance_bank"|"ambank"|"bank_islam"|"bank_muamalat"|"bank_of_china"|"bank_rakyat"|"bsn"|"cimb"|"deutsche_bank"|"hong_leong_bank"|"hsbc"|"kfh"|"maybank2e"|"maybank2u"|"ocbc"|"pb_enterprise"|"public_bank"|"rhb"|"standard_chartered"|"uob" bank;
    # Unique transaction id generated by FPX for every request from the merchant
    string? transaction_id?;
};

# 
public type Subscription_billing_thresholds record {
    # Monetary threshold that triggers the subscription to create an invoice
    int? amount_gte?;
    # Indicates if the `billing_cycle_anchor` should be reset when a threshold is reached. If true, `billing_cycle_anchor` will be updated to the date/time the threshold was last reached; otherwise, the value will remain unchanged. This value may not be `true` if the subscription contains items with plans that have `aggregate_usage=last_ever`.
    boolean? reset_billing_cycle_anchor?;
};

public type Tax\.transaction_line_item record {
    int amount;
    int amount_tax;
    string id;
    boolean livemode;
    record {|string...;|}? metadata?;
    "tax.transaction_line_item" 'object;
    string? product?;
    int quantity;
    string reference;
    Tax_product_resource_tax_transaction_line_item_resource_reversal? reversal?;
    "exclusive"|"inclusive" tax_behavior;
    string tax_code;
    "reversal"|"transaction" 'type;
};

@constraint:String {maxLength: 5000}
public type GetSetupIntentsQueriesExpandItemsString string;

public type authorization_controls_paramAllowedmerchantcountriesItemsString string;

# 
public type PortalPublicResourceConfigurationList record {
    Billing_portal\.configuration[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/billing_portal/configurations`}
    string url;
};

public type tax_calculations_body record {|
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # The ID of an existing customer to use for this calculation. If provided, the customer's address and tax IDs are copied to `customer_details`.
    @constraint:String {maxLength: 5000}
    string customer?;
    customer_details customer_details?;
    # Specifies which fields in the response should be expanded.
    tax_calculations_bodyExpandItemsString[] expand?;
    # A list of items the customer is purchasing.
    calculation_line_item[] line_items;
    ship_from_details ship_from_details?;
    shipping_cost_1 shipping_cost?;
    # Timestamp of date at which the tax rules and rates in effect applies for the calculation. Measured in seconds since the Unix epoch. Can be up to 48 hours in the past, and up to 48 hours in the future.
    int tax_date?;
|};

@constraint:String {maxLength: 5000}
public type Account_capability_future_requirementsEventuallydueItemsString string;

# 
public type Account_unification_account_controller record {
    Account_unification_account_controller_fees fees?;
    # `true` if the Connect application retrieving the resource controls the account and can therefore exercise [platform controls](https://stripe.com/docs/connect/platform-controls-for-standard-accounts). Otherwise, this field is null.
    boolean is_controller?;
    Account_unification_account_controller_losses losses?;
    # A value indicating responsibility for collecting requirements on this account. Only returned when the Connect application retrieving the resource controls the account.
    "application"|"stripe" requirement_collection?;
    Account_unification_account_controller_stripe_dashboard stripe_dashboard?;
    # The controller type. Can be `application`, if a Connect application controls the account, or `account`, if the account controls itself.
    "account"|"application" 'type;
};

@constraint:String {maxLength: 5000}
public type GetExchangeRatesRateIdQueriesExpandItemsString string;

public type customer_update_updating_param record {
    ("address"|"email"|"name"|"phone"|"shipping"|"tax_id")[]|"" allowed_updates?;
    boolean enabled?;
};

public type custom_field_option_param record {
    @constraint:String {maxLength: 100}
    string label;
    @constraint:String {maxLength: 100}
    string value;
};

public type quote_finalize_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Country_specSupportedtransfercountriesItemsString string;

# 
public type Setup_intent_next_action record {
    Payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code cashapp_handle_redirect_or_display_qr_code?;
    Setup_intent_next_action_redirect_to_url redirect_to_url?;
    # Type of the next action to perform, one of `redirect_to_url`, `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.
    @constraint:String {maxLength: 5000}
    string 'type;
    # When confirming a SetupIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.
    record {} use_stripe_sdk?;
    Setup_intent_next_action_verify_with_microdeposits verify_with_microdeposits?;
};

# 
public type Payment_pages_checkout_session_invoice_settings record {
    # The account tax IDs associated with the invoice.
    (string|Tax_id|Deleted_tax_id)[]? account_tax_ids?;
    # Custom fields displayed on the invoice.
    Invoice_setting_custom_field[]? custom_fields?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Footer displayed on the invoice.
    string? footer?;
    # The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.
    Connect_account_reference? issuer?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # Options for invoice PDF rendering.
    Invoice_setting_rendering_options? rendering_options?;
};

@constraint:String {maxLength: 5000}
public type GetCheckoutSessionsQueriesExpandItemsString string;

public type external_accounts_id_bodyExpandItemsString string;

# 
public type Payment_pages_checkout_session_custom_fields record {
    Payment_pages_checkout_session_custom_fields_dropdown dropdown?;
    # String of your choice that your integration can use to reconcile this field. Must be unique to this field, alphanumeric, and up to 200 characters.
    @constraint:String {maxLength: 5000}
    string 'key;
    Payment_pages_checkout_session_custom_fields_label label;
    Payment_pages_checkout_session_custom_fields_numeric numeric?;
    # Whether the customer is required to complete the field before completing the Checkout Session. Defaults to `false`.
    boolean optional;
    Payment_pages_checkout_session_custom_fields_text text?;
    # The type of the field.
    "dropdown"|"numeric"|"text" 'type;
};

# Represents the Queries record for the operation: GetIssuingDisputesDispute
public type GetIssuingDisputesDisputeQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingDisputesDisputeQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetSigmaScheduledQueryRuns
public type GetSigmaScheduledQueryRunsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSigmaScheduledQueryRunsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Bank_connections_resource_ownership_refresh record {
    # The time at which the last refresh attempt was initiated. Measured in seconds since the Unix epoch.
    int last_attempted_at;
    # Time at which the next ownership refresh can be initiated. This value will be `null` when `status` is `pending`. Measured in seconds since the Unix epoch.
    int? next_refresh_available_at?;
    # The status of the last refresh attempt.
    "failed"|"pending"|"succeeded" status;
};

# Metadata about the forwarded request.
public type Forwarded_request_context record {
    # The time it took in milliseconds for the destination endpoint to respond.
    int destination_duration;
    # The IP address of the destination.
    @constraint:String {maxLength: 5000}
    string destination_ip_address;
};

public type account_links_bodyExpandItemsString string;

# Shipping information for this ConfirmationToken.
public type recipient_shipping_with_optional_fields_address_1 record {
    optional_fields_address address;
    @constraint:String {maxLength: 5000}
    string name;
    string|"" phone?;
};

# Represents the Queries record for the operation: GetAccountsAccountExternalAccountsId
public type GetAccountsAccountExternalAccountsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountExternalAccountsIdQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetTreasuryReceivedDebitsId
public type GetTreasuryReceivedDebitsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryReceivedDebitsIdQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetCheckoutSessionsSession
public type GetCheckoutSessionsSessionQueries record {
    # Specifies which fields in the response should be expanded.
    GetCheckoutSessionsSessionQueriesExpandItemsString[] expand?;
};

# 
public type Payment_method_grabpay record {
};

# Represents the Queries record for the operation: GetChargesCharge
public type GetChargesChargeQueries record {
    # Specifies which fields in the response should be expanded.
    GetChargesChargeQueriesExpandItemsString[] expand?;
};

# 
public type Outbound_payments_payment_method_details_financial_account record {
    # Token of the FinancialAccount.
    @constraint:String {maxLength: 5000}
    string id;
    # The rails used to send funds.
    "stripe" network;
};

public type authorization_approve_body record {|
    # If the authorization's `pending_request.is_amount_controllable` property is `true`, you may provide this value to control how much to hold for the authorization. Must be positive (use [`decline`](https://stripe.com/docs/api/issuing/authorizations/decline) to decline an authorization request).
    int amount?;
    # Specifies which fields in the response should be expanded.
    authorization_approve_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# 
public type Financial_reporting_finance_report_run_run_parameters record {
    # The set of output columns requested for inclusion in the report run.
    Financial_reporting_finance_report_run_run_parametersColumnsItemsString[] columns?;
    # Connected account ID by which to filter the report run.
    @constraint:String {maxLength: 5000}
    string connected_account?;
    # Currency of objects to be included in the report run.
    string currency?;
    # Ending timestamp of data to be included in the report run. Can be any UTC timestamp between 1 second after the user specified `interval_start` and 1 second before this report's last `data_available_end` value.
    int interval_end?;
    # Starting timestamp of data to be included in the report run. Can be any UTC timestamp between 1 second after this report's `data_available_start` and 1 second before the user specified `interval_end` value.
    int interval_start?;
    # Payout ID by which to filter the report run.
    @constraint:String {maxLength: 5000}
    string payout?;
    # Category of balance transactions to be included in the report run.
    @constraint:String {maxLength: 5000}
    string reporting_category?;
    # Defaults to `Etc/UTC`. The output timezone for all timestamps in the report. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones). Has no effect on `interval_start` or `interval_end`.
    @constraint:String {maxLength: 5000}
    string timezone?;
};

# 
public type Invoices_payment_method_options record {
    # If paying by `acss_debit`, this sub-hash contains details about the Canadian pre-authorized debit payment method options to pass to the invoice’s PaymentIntent.
    Invoice_payment_method_options_acss_debit? acss_debit?;
    # If paying by `bancontact`, this sub-hash contains details about the Bancontact payment method options to pass to the invoice’s PaymentIntent.
    Invoice_payment_method_options_bancontact? bancontact?;
    # If paying by `card`, this sub-hash contains details about the Card payment method options to pass to the invoice’s PaymentIntent.
    Invoice_payment_method_options_card? card?;
    # If paying by `customer_balance`, this sub-hash contains details about the Bank transfer payment method options to pass to the invoice’s PaymentIntent.
    Invoice_payment_method_options_customer_balance? customer_balance?;
    # If paying by `konbini`, this sub-hash contains details about the Konbini payment method options to pass to the invoice’s PaymentIntent.
    Invoice_payment_method_options_konbini? konbini?;
    # If paying by `sepa_debit`, this sub-hash contains details about the SEPA Direct Debit payment method options to pass to the invoice’s PaymentIntent.
    Invoice_payment_method_options_sepa_debit? sepa_debit?;
    # If paying by `us_bank_account`, this sub-hash contains details about the ACH direct debit payment method options to pass to the invoice’s PaymentIntent.
    Invoice_payment_method_options_us_bank_account? us_bank_account?;
};

public type refund_cancel_bodyExpandItemsString string;

# 
public type Invoice_payment_method_options_konbini record {
};

# Display additional text for your customers using custom text.
public type custom_text_param record {
    record {string message;}|"" after_submit?;
    record {string message;}|"" shipping_address?;
    record {string message;}|"" submit?;
    record {string message;}|"" terms_of_service_acceptance?;
};

# The credit note line item object
public type Credit_note_line_item record {
    # The integer amount in cents (or local equivalent) representing the gross amount being credited for this line item, excluding (exclusive) tax and discounts.
    int amount;
    # The integer amount in cents (or local equivalent) representing the amount being credited for this line item, excluding all tax and discounts.
    int? amount_excluding_tax?;
    # Description of the item being credited.
    string? description?;
    # The integer amount in cents (or local equivalent) representing the discount being credited for this line item.
    int discount_amount;
    # The amount of discount calculated per discount for this line item
    Discounts_resource_discount_amount[] discount_amounts;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # ID of the invoice line item being credited
    @constraint:String {maxLength: 5000}
    string invoice_line_item?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "credit_note_line_item" 'object;
    # The number of units of product being credited.
    int? quantity?;
    # The amount of tax calculated per tax rate for this line item
    Credit_note_tax_amount[] tax_amounts;
    # The tax rates which apply to the line item.
    Tax_rate[] tax_rates;
    # The type of the credit note line item, one of `invoice_line_item` or `custom_line_item`. When the type is `invoice_line_item` there is an additional `invoice_line_item` property on the resource the value of which is the id of the credited line item on the invoice.
    "custom_line_item"|"invoice_line_item" 'type;
    # The cost of each unit of product being credited.
    int? unit_amount?;
    # Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.
    string? unit_amount_decimal?;
    # The amount in cents (or local equivalent) representing the unit amount being credited for this line item, excluding all tax and discounts.
    string? unit_amount_excluding_tax?;
};

public type files_bodyExpandItemsString string;

public type customer_sources_bodyExpandItemsString string;

# 
public type Issuing_authorization_three_d_secure record {
    # The outcome of the 3D Secure authentication request.
    "attempt_acknowledged"|"authenticated"|"failed"|"required" result;
};

# 
public type External_account_requirements record {
    # Fields that need to be collected to keep the external account enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.
    External_account_requirementsCurrentlydueItemsString[]? currently_due?;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[]? errors?;
    # Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the external account.
    External_account_requirementsPastdueItemsString[]? past_due?;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.
    External_account_requirementsPendingverificationItemsString[]? pending_verification?;
};

@constraint:String {maxLength: 5000}
public type GetShippingRatesShippingRateTokenQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetClimateOrders
public type GetClimateOrdersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetClimateOrdersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type billing_meter_events_body record {|
    # The name of the meter event. Corresponds with the `event_name` field on a meter.
    @constraint:String {maxLength: 100}
    string event_name;
    # Specifies which fields in the response should be expanded.
    billing_meter_events_bodyExpandItemsString[] expand?;
    # A unique identifier for the event. If not provided, one will be generated. We recommend using a globally unique identifier for this. We'll enforce uniqueness within a rolling 24 hour period.
    @constraint:String {maxLength: 100}
    string identifier?;
    # The payload of the event. This must contain the fields corresponding to a meter's `customer_mapping.event_payload_key` (default is `stripe_customer_id`) and `value_settings.event_payload_key` (default is `value`). Read more about the [payload](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#payload-key-overrides).
    record {|string...;|} payload;
    # The time of the event. Measured in seconds since the Unix epoch. Must be within the past 35 calendar days or up to 5 minutes in the future. Defaults to current timestamp if not specified.
    int timestamp?;
|};

@constraint:String {maxLength: 5000}
public type GetCustomersQueriesExpandItemsString string;

public type webhook_endpoints_bodyExpandItemsString string;

# The relationship that this person has with the account's legal entity.
public type relationship_specs record {
    boolean director?;
    boolean executive?;
    boolean legal_guardian?;
    boolean owner?;
    decimal|"" percent_ownership?;
    boolean representative?;
    @constraint:String {maxLength: 5000}
    string title?;
};

public type flow_data_subscription_update_confirm_param record {
    subscription_update_confirm_discount_params[] discounts?;
    subscription_update_confirm_item_params[] items;
    @constraint:String {maxLength: 5000}
    string subscription;
};

# 
public type Portal_subscription_update_product record {
    # The list of price IDs which, when subscribed to, a subscription can be updated.
    Portal_subscription_update_productPricesItemsString[] prices;
    # The product ID.
    @constraint:String {maxLength: 5000}
    string product;
};

# Represents the Queries record for the operation: GetCheckoutSessions
public type GetCheckoutSessionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Only return the Checkout Sessions for the Customer details specified.
    customer_details_params customer_details?;
    # Specifies which fields in the response should be expanded.
    GetCheckoutSessionsQueriesExpandItemsString[] expand?;
    # Only return Checkout Sessions that were created during the given date interval.
    created_5 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return the Checkout Session for the PaymentIntent specified.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return the Checkout Session for the subscription specified.
    @constraint:String {maxLength: 5000}
    string subscription?;
    # Only return the Checkout Sessions for the Payment Link specified.
    @constraint:String {maxLength: 5000}
    string payment_link?;
    # Only return the Checkout Sessions for the Customer specified.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Only return the Checkout Sessions matching the given status.
    "complete"|"expired"|"open" status?;
};

# An object containing device type specific settings for Verifone P400 readers
public type verifone_p400 record {
    string|"" splashscreen?;
};

# 
public type Payment_intent_next_action record {
    Payment_intent_next_action_alipay_handle_redirect alipay_handle_redirect?;
    Payment_intent_next_action_boleto boleto_display_details?;
    Payment_intent_next_action_card_await_notification card_await_notification?;
    Payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code cashapp_handle_redirect_or_display_qr_code?;
    Payment_intent_next_action_display_bank_transfer_instructions display_bank_transfer_instructions?;
    Payment_intent_next_action_konbini konbini_display_details?;
    Payment_intent_next_action_display_multibanco_details multibanco_display_details?;
    Payment_intent_next_action_display_oxxo_details oxxo_display_details?;
    Payment_intent_next_action_paynow_display_qr_code paynow_display_qr_code?;
    Payment_intent_next_action_pix_display_qr_code pix_display_qr_code?;
    Payment_intent_next_action_promptpay_display_qr_code promptpay_display_qr_code?;
    Payment_intent_next_action_redirect_to_url redirect_to_url?;
    Payment_intent_next_action_swish_handle_redirect_or_display_qr_code swish_handle_redirect_or_display_qr_code?;
    # Type of the next action to perform, one of `redirect_to_url`, `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.
    @constraint:String {maxLength: 5000}
    string 'type;
    # When confirming a PaymentIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.
    record {} use_stripe_sdk?;
    Payment_intent_next_action_verify_with_microdeposits verify_with_microdeposits?;
    Payment_intent_next_action_wechat_pay_display_qr_code wechat_pay_display_qr_code?;
    Payment_intent_next_action_wechat_pay_redirect_to_android_app wechat_pay_redirect_to_android_app?;
    Payment_intent_next_action_wechat_pay_redirect_to_ios_app wechat_pay_redirect_to_ios_app?;
};

# Controls tax ID collection during checkout.
public type tax_id_collection_params record {
    boolean enabled;
};

public type payment_methods_bodyExpandItemsString string;

# 
public type Payment_method_details_sepa_debit record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Branch code of bank associated with the bank account.
    string? branch_code?;
    # Two-letter ISO code representing the country the bank account is located in.
    string? country?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four characters of the IBAN.
    string? last4?;
    # Find the ID of the mandate used for this payment under the [payment_method_details.sepa_debit.mandate](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-sepa_debit-mandate) property on the Charge. Use this mandate ID to [retrieve the Mandate](https://stripe.com/docs/api/mandates/retrieve).
    string? mandate?;
};

public type card_issuing_param record {
    terms_acceptance_param user_terms_acceptance?;
};

# Represents the Queries record for the operation: GetPaymentIntentsIntent
public type GetPaymentIntentsIntentQueries record {
    # Specifies which fields in the response should be expanded.
    GetPaymentIntentsIntentQueriesExpandItemsString[] expand?;
    # The client secret of the PaymentIntent. We require it if you use a publishable key to retrieve the source.
    @constraint:String {maxLength: 5000}
    string client_secret?;
};

# Represents a reader action to refund a payment
public type Terminal_reader_reader_resource_refund_payment_action record {
    # The amount being refunded.
    int amount?;
    # Charge that is being refunded.
    string|Charge charge?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata?;
    # Payment intent that is being refunded.
    string|Payment_intent payment_intent?;
    # The reason for the refund.
    "duplicate"|"fraudulent"|"requested_by_customer" reason?;
    # Unique identifier for the refund object.
    string|Refund refund?;
    # Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.
    boolean refund_application_fee?;
    Terminal_reader_reader_resource_refund_payment_config refund_payment_config?;
    # Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.
    boolean reverse_transfer?;
};

# 
public type Mandate_paypal record {
    # The PayPal Billing Agreement ID (BAID). This is an ID generated by PayPal which represents the mandate between the merchant and the customer.
    string? billing_agreement_id?;
    # PayPal account PayerID. This identifier uniquely identifies the PayPal customer.
    string? payer_id?;
};

# 
public type Bank_connections_resource_link_account_session_filters record {
    # Restricts the Session to subcategories of accounts that can be linked. Valid subcategories are: `checking`, `savings`, `mortgage`, `line_of_credit`, `credit_card`.
    ("checking"|"credit_card"|"line_of_credit"|"mortgage"|"savings")[]? account_subcategories?;
    # List of countries from which to filter accounts.
    Bank_connections_resource_link_account_session_filtersCountriesItemsString[]? countries?;
};

public type lines_line_item_id_bodyExpandItemsString string;

# 
public type Payment_method_details_revolut_pay record {
};

public type balance_settings_param record {
    "automatic"|"manual"|"merchant_default" reconciliation_mode?;
};

# Represents the Queries record for the operation: GetCustomersCustomerCashBalanceTransactions
public type GetCustomersCustomerCashBalanceTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerCashBalanceTransactionsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingCardsQueriesExpandItemsString string;

# The Kana variation of the person's address (Japan only).
public type japan_address_kana_specs_1 record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
    @constraint:String {maxLength: 5000}
    string town?;
};

@constraint:String {maxLength: 5000}
public type Issuing_authorization_treasuryReceiveddebitsItemsString string;

# 
public type Payment_links_resource_invoice_settings record {
    # The account tax IDs associated with the invoice.
    (string|Tax_id|Deleted_tax_id)[]? account_tax_ids?;
    # A list of up to 4 custom fields to be displayed on the invoice.
    Invoice_setting_custom_field[]? custom_fields?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Footer to be displayed on the invoice.
    string? footer?;
    # The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.
    Connect_account_reference? issuer?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # Options for invoice PDF rendering.
    Invoice_setting_rendering_options? rendering_options?;
};

public type account_external_accounts_body record {|
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; "checking"|"futsu"|"savings"|"toza" account_type?; string country; string currency?; record {record {bank_account_ownership_verificationFilesItemsString[] files?;} bank_account_ownership_verification?;} documents?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    # When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.
    boolean default_for_currency?;
    # Specifies which fields in the response should be expanded.
    account_external_accounts_bodyExpandItemsString[] expand?;
    # Please refer to full [documentation](https://stripe.com/docs/api) instead.
    @constraint:String {maxLength: 5000}
    string external_account?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

# 
public type Checkout_afterpay_clearpay_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type cartes_bancaires_network_options_param record {
    "0"|"1"|"2"|"3"|"4"|"A" cb_avalgo;
    @constraint:String {maxLength: 4}
    string cb_exemption?;
    int cb_score?;
};

public type personalization_design_reject_body record {|
    # Specifies which fields in the response should be expanded.
    personalization_design_reject_bodyExpandItemsString[] expand?;
    rejection_reasons_param rejection_reasons;
|};

# 
public type Setup_intent_payment_method_options record {
    Setup_intent_payment_method_options_acss_debit|Setup_intent_type_specific_payment_method_options_client acss_debit?;
    Setup_intent_payment_method_options_amazon_pay|Setup_intent_type_specific_payment_method_options_client amazon_pay?;
    Setup_intent_payment_method_options_card|Setup_intent_type_specific_payment_method_options_client card?;
    Setup_intent_payment_method_options_card_present|Setup_intent_type_specific_payment_method_options_client card_present?;
    Setup_intent_payment_method_options_link|Setup_intent_type_specific_payment_method_options_client link?;
    Setup_intent_payment_method_options_paypal|Setup_intent_type_specific_payment_method_options_client paypal?;
    Setup_intent_payment_method_options_sepa_debit|Setup_intent_type_specific_payment_method_options_client sepa_debit?;
    Setup_intent_payment_method_options_us_bank_account|Setup_intent_type_specific_payment_method_options_client us_bank_account?;
};

# Represents the Queries record for the operation: GetTaxRegistrations
public type GetTaxRegistrationsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTaxRegistrationsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # The status of the Tax Registration.
    "active"|"all"|"expired"|"scheduled" status?;
};

# Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.
public type dispute_evidence_params record {
    @constraint:String {maxLength: 20000}
    string access_activity_log?;
    @constraint:String {maxLength: 5000}
    string billing_address?;
    string cancellation_policy?;
    @constraint:String {maxLength: 20000}
    string cancellation_policy_disclosure?;
    @constraint:String {maxLength: 20000}
    string cancellation_rebuttal?;
    string customer_communication?;
    @constraint:String {maxLength: 5000}
    string customer_email_address?;
    @constraint:String {maxLength: 5000}
    string customer_name?;
    @constraint:String {maxLength: 5000}
    string customer_purchase_ip?;
    string customer_signature?;
    string duplicate_charge_documentation?;
    @constraint:String {maxLength: 20000}
    string duplicate_charge_explanation?;
    @constraint:String {maxLength: 5000}
    string duplicate_charge_id?;
    @constraint:String {maxLength: 20000}
    string product_description?;
    string receipt?;
    string refund_policy?;
    @constraint:String {maxLength: 20000}
    string refund_policy_disclosure?;
    @constraint:String {maxLength: 20000}
    string refund_refusal_explanation?;
    @constraint:String {maxLength: 5000}
    string service_date?;
    string service_documentation?;
    @constraint:String {maxLength: 5000}
    string shipping_address?;
    @constraint:String {maxLength: 5000}
    string shipping_carrier?;
    @constraint:String {maxLength: 5000}
    string shipping_date?;
    string shipping_documentation?;
    @constraint:String {maxLength: 5000}
    string shipping_tracking_number?;
    string uncategorized_file?;
    @constraint:String {maxLength: 20000}
    string uncategorized_text?;
};

# 
public type Invoice_installments_card record {
    # Whether Installments are enabled for this Invoice.
    boolean? enabled?;
};

@constraint:String {maxLength: 5000}
public type GetTaxTransactionsTransactionLineItemsQueriesExpandItemsString string;

public type us_domestic_wire_tracking_details_params record {
    @constraint:String {maxLength: 5000}
    string imad?;
    @constraint:String {maxLength: 5000}
    string omad?;
};

# 
public type TerminalConfigurationConfigurationList record {
    Terminal\.configuration[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/terminal/configurations`}
    string url;
};

# 
public type Issuing_dispute_other_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
    # Description of the merchandise or service that was purchased.
    string? product_description?;
    # Whether the product was a merchandise or service.
    "merchandise"|"service"? product_type?;
};

# 
public type Checkout_paynow_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Represents the Queries record for the operation: GetTreasuryReceivedCreditsId
public type GetTreasuryReceivedCreditsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryReceivedCreditsIdQueriesExpandItemsString[] expand?;
};

public type delivery_estimate record {
    delivery_estimate_bound maximum?;
    delivery_estimate_bound minimum?;
};

public type Treasury\.inbound_transfer record {
    int amount;
    boolean cancelable;
    int created;
    string currency;
    string? description?;
    Treasury_inbound_transfers_resource_failure_details? failure_details?;
    string financial_account;
    string? hosted_regulatory_receipt_url?;
    string id;
    Treasury_inbound_transfers_resource_inbound_transfer_resource_linked_flows linked_flows;
    boolean livemode;
    record {|string...;|} metadata;
    "treasury.inbound_transfer" 'object;
    string origin_payment_method;
    Inbound_transfers? origin_payment_method_details?;
    boolean? returned?;
    string statement_descriptor;
    "canceled"|"failed"|"processing"|"succeeded" status;
    Treasury_inbound_transfers_resource_inbound_transfer_resource_status_transitions status_transitions;
    string|Treasury\.transaction? 'transaction?;
};

# 
public type Tax_product_resource_tax_settings_status_details record {
    Tax_product_resource_tax_settings_status_details_resource_active active?;
    Tax_product_resource_tax_settings_status_details_resource_pending pending?;
};

public type intent_cancel_body_1ExpandItemsString string;

# 
public type Portal_invoice_list record {
    # Whether the feature is enabled.
    boolean enabled;
};

public type subscriptions_bodyExpandItemsString string;

# The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https://stripe.com/docs/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https://stripe.com/docs/revenue-recognition/methodology/subscriptions-and-invoicing) for details.
public type period record {
    int end;
    int 'start;
};

# 
public type Treasury_transactions_resource_abstract_transaction_resource_status_transitions record {
    # Timestamp describing when the Transaction changed status to `posted`.
    int? posted_at?;
    # Timestamp describing when the Transaction changed status to `void`.
    int? void_at?;
};

# 
public type Subscriptions_resource_payment_settings record {
    # Payment-method-specific configuration to provide to invoices created by the subscription.
    Subscriptions_resource_payment_method_options? payment_method_options?;
    # The list of payment method types to provide to every invoice created by the subscription. If not set, Stripe attempts to automatically determine the types to use by looking at the invoice’s default payment method, the subscription’s default payment method, the customer’s default payment method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).
    ("ach_credit_transfer"|"ach_debit"|"acss_debit"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"konbini"|"link"|"p24"|"paynow"|"paypal"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"us_bank_account"|"wechat_pay")[]? payment_method_types?;
    # Either `off`, or `on_subscription`. With `on_subscription` Stripe updates `subscription.default_payment_method` when a subscription payment succeeds.
    "off"|"on_subscription"? save_default_payment_method?;
};

@constraint:String {maxLength: 5000}
public type GetEventsQueriesTypesItemsString string;

# Represents the Queries record for the operation: GetIssuingAuthorizationsAuthorization
public type GetIssuingAuthorizationsAuthorizationQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingAuthorizationsAuthorizationQueriesExpandItemsString[] expand?;
};

# 
public type Subscription_pending_invoice_item_interval record {
    # Specifies invoicing frequency. Either `day`, `week`, `month` or `year`.
    "day"|"month"|"week"|"year" interval;
    # The number of intervals between invoices. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).
    int interval_count;
};

# 
public type Connect_embedded_base_features record {
};

# 
public type Payment_method_options_alipay record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

public type outbound_transfers_outbound_transfer_body record {|
    # Specifies which fields in the response should be expanded.
    outbound_transfers_outbound_transfer_bodyExpandItemsString[] expand?;
    tracking_details_params tracking_details;
|};

@constraint:String {maxLength: 5000}
public type GetFileLinksLinkQueriesExpandItemsString string;

# 
public type Payment_method_details_giropay record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Bank Identifier Code of the bank associated with the bank account.
    string? bic?;
    # Owner's verified full name. Values are verified or provided by Giropay directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    # Giropay rarely provides this information so the attribute is usually empty.
    string? verified_name?;
};

@constraint:String {maxLength: 5000}
public type GetProductsProductFeaturesIdQueriesExpandItemsString string;

# The request body and headers to be sent to the destination endpoint.
public type request_param record {
    @constraint:String {maxLength: 5000}
    string body?;
    header_param[] headers?;
};

# Represents the Queries record for the operation: GetSubscriptionSchedulesSchedule
public type GetSubscriptionSchedulesScheduleQueries record {
    # Specifies which fields in the response should be expanded.
    GetSubscriptionSchedulesScheduleQueriesExpandItemsString[] expand?;
};

public type custom_field_label_param record {
    @constraint:String {maxLength: 50}
    string custom;
    "custom" 'type;
};

@constraint:String {maxLength: 5000}
public type GetCreditNotesPreviewLinesQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetApplicationFeesIdRefunds
public type GetApplicationFeesIdRefundsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetApplicationFeesIdRefundsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type payment_intents_bodyExpandItemsString string;

public type transaction_refresh_params record {
    @constraint:String {maxLength: 5000}
    string after;
};

public type terminal_connection_tokens_body record {|
    # Specifies which fields in the response should be expanded.
    terminal_connection_tokens_bodyExpandItemsString[] expand?;
    # The id of the location that this connection token is scoped to. If specified the connection token will only be usable with readers assigned to that location, otherwise the connection token will be usable with all readers. Note that location scoping only applies to internet-connected readers. For more details, see [the docs on scoping connection tokens](https://docs.stripe.com/terminal/fleet/locations-and-zones?dashboard-or-api=api#connection-tokens).
    @constraint:String {maxLength: 5000}
    string location?;
|};

public type annual_revenue_specs record {
    int amount;
    string currency;
    @constraint:String {maxLength: 5000}
    string fiscal_year_end;
};

public type Treasury\.credit_reversal record {
    int amount;
    int created;
    string currency;
    string financial_account;
    string? hosted_regulatory_receipt_url?;
    string id;
    boolean livemode;
    record {|string...;|} metadata;
    "ach"|"stripe" network;
    "treasury.credit_reversal" 'object;
    string received_credit;
    "canceled"|"posted"|"processing" status;
    Treasury_received_credits_resource_status_transitions status_transitions;
    string|Treasury\.transaction? 'transaction?;
};

# Represents the Queries record for the operation: GetTreasuryOutboundPayments
public type GetTreasuryOutboundPaymentsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryOutboundPaymentsQueriesExpandItemsString[] expand?;
    # Only return OutboundPayments that were created during the given date interval.
    created_44 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return OutboundPayments sent to this customer.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Only return OutboundPayments that have the given status: `processing`, `failed`, `posted`, `returned`, or `canceled`.
    "canceled"|"failed"|"posted"|"processing"|"returned" status?;
};

# 
public type Payment_intent_next_action_konbini_stores record {
    # FamilyMart instruction details.
    Payment_intent_next_action_konbini_familymart? familymart?;
    # Lawson instruction details.
    Payment_intent_next_action_konbini_lawson? lawson?;
    # Ministop instruction details.
    Payment_intent_next_action_konbini_ministop? ministop?;
    # Seicomart instruction details.
    Payment_intent_next_action_konbini_seicomart? seicomart?;
};

# Tax details about the customer.
public type tax_param record {
    string|"" ip_address?;
    "deferred"|"immediately" validate_location?;
};

# Payment-method-specific configuration for this PaymentIntent.
public type payment_method_options_param_15 record {
    record {record {string|"" custom_mandate_url?; string interval_description?; "combined"|"interval"|"sporadic" payment_schedule?; "business"|"personal" transaction_type?;} mandate_options?; ""|"none"|"off_session"|"on_session" setup_future_usage?; "automatic"|"instant"|"microdeposits" verification_method?;}|"" acss_debit?;
    record {""|"manual" capture_method?; string preferred_locale?; "none" setup_future_usage?;}|"" affirm?;
    record {""|"manual" capture_method?; string reference?; "none" setup_future_usage?;}|"" afterpay_clearpay?;
    record {""|"none"|"off_session" setup_future_usage?;}|"" alipay?;
    record {""|"manual" capture_method?; ""|"none"|"off_session" setup_future_usage?;}|"" amazon_pay?;
    record {""|"none"|"off_session"|"on_session" setup_future_usage?;}|"" au_becs_debit?;
    record {""|"none"|"off_session"|"on_session" setup_future_usage?;}|"" bacs_debit?;
    record {"de"|"en"|"fr"|"nl" preferred_language?; ""|"none"|"off_session" setup_future_usage?;}|"" bancontact?;
    record {string code?; ""|"none" setup_future_usage?;}|"" blik?;
    record {int expires_after_days?; ""|"none"|"off_session"|"on_session" setup_future_usage?;}|"" boleto?;
    record {""|"manual" capture_method?; string cvc_token?; record {boolean enabled?; record {int count; "month" interval; "fixed_count" 'type;}|"" plan?;} installments?; record {int amount; "fixed"|"maximum" amount_type; string description?; int end_date?; "day"|"month"|"sporadic"|"week"|"year" interval; int interval_count?; string reference; int start_date; ("india")[] supported_types?;} mandate_options?; "amex"|"cartes_bancaires"|"diners"|"discover"|"eftpos_au"|"interac"|"jcb"|"mastercard"|"unionpay"|"unknown"|"visa" network?; "if_available"|"never" request_extended_authorization?; "if_available"|"never" request_incremental_authorization?; "if_available"|"never" request_multicapture?; "if_available"|"never" request_overcapture?; "any"|"automatic"|"challenge" request_three_d_secure?; boolean require_cvc_recollection?; ""|"none"|"off_session"|"on_session" setup_future_usage?; string|"" statement_descriptor_suffix_kana?; string|"" statement_descriptor_suffix_kanji?; record {"A"|"C"|"I"|"N"|"R"|"U"|"Y" ares_trans_status?; string cryptogram; "01"|"02"|"05"|"06"|"07" electronic_commerce_indicator?; "low_risk"|"none" exemption_indicator?; record {record {"0"|"1"|"2"|"3"|"4"|"A" cb_avalgo; string cb_exemption?; int cb_score?;} cartes_bancaires?;} network_options?; string requestor_challenge_indicator?; string transaction_id; "1.0.2"|"2.1.0"|"2.2.0" version;} three_d_secure?;}|"" card?;
    record {boolean request_extended_authorization?; boolean request_incremental_authorization_support?; record {"domestic"|"international" requested_priority?;} routing?;}|"" card_present?;
    record {""|"manual" capture_method?; ""|"none"|"off_session"|"on_session" setup_future_usage?;}|"" cashapp?;
    record {record {record {string country;} eu_bank_transfer?; ("aba"|"iban"|"sepa"|"sort_code"|"spei"|"swift"|"zengin")[] requested_address_types?; "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer" 'type;} bank_transfer?; "bank_transfer" funding_type?; "none" setup_future_usage?;}|"" customer_balance?;
    record {"none" setup_future_usage?;}|"" eps?;
    record {"none" setup_future_usage?;}|"" fpx?;
    record {"none" setup_future_usage?;}|"" giropay?;
    record {"none" setup_future_usage?;}|"" grabpay?;
    record {""|"none"|"off_session" setup_future_usage?;}|"" ideal?;
    record {}|"" interac_present?;
    record {""|"manual" capture_method?; "cs-CZ"|"da-DK"|"de-AT"|"de-CH"|"de-DE"|"el-GR"|"en-AT"|"en-AU"|"en-BE"|"en-CA"|"en-CH"|"en-CZ"|"en-DE"|"en-DK"|"en-ES"|"en-FI"|"en-FR"|"en-GB"|"en-GR"|"en-IE"|"en-IT"|"en-NL"|"en-NO"|"en-NZ"|"en-PL"|"en-PT"|"en-RO"|"en-SE"|"en-US"|"es-ES"|"es-US"|"fi-FI"|"fr-BE"|"fr-CA"|"fr-CH"|"fr-FR"|"it-CH"|"it-IT"|"nb-NO"|"nl-BE"|"nl-NL"|"pl-PL"|"pt-PT"|"ro-RO"|"sv-FI"|"sv-SE" preferred_locale?; "none" setup_future_usage?;}|"" klarna?;
    record {string|"" confirmation_number?; int|"" expires_after_days?; int|"" expires_at?; string|"" product_description?; "none" setup_future_usage?;}|"" konbini?;
    record {""|"manual" capture_method?; ""|"none"|"off_session" setup_future_usage?;}|"" link?;
    record {""|"manual" capture_method?; "none" setup_future_usage?;}|"" mobilepay?;
    record {"none" setup_future_usage?;}|"" multibanco?;
    record {int expires_after_days?; "none" setup_future_usage?;}|"" oxxo?;
    record {"none" setup_future_usage?; boolean tos_shown_and_accepted?;}|"" p24?;
    record {"none" setup_future_usage?;}|"" paynow?;
    record {""|"manual" capture_method?; "cs-CZ"|"da-DK"|"de-AT"|"de-DE"|"de-LU"|"el-GR"|"en-GB"|"en-US"|"es-ES"|"fi-FI"|"fr-BE"|"fr-FR"|"fr-LU"|"hu-HU"|"it-IT"|"nl-BE"|"nl-NL"|"pl-PL"|"pt-PT"|"sk-SK"|"sv-SE" preferred_locale?; string reference?; string risk_correlation_id?; ""|"none"|"off_session" setup_future_usage?;}|"" paypal?;
    record {int expires_after_seconds?; int expires_at?; "none" setup_future_usage?;}|"" pix?;
    record {"none" setup_future_usage?;}|"" promptpay?;
    record {""|"manual" capture_method?; ""|"none"|"off_session" setup_future_usage?;}|"" revolut_pay?;
    record {record {} mandate_options?; ""|"none"|"off_session"|"on_session" setup_future_usage?;}|"" sepa_debit?;
    record {""|"de"|"en"|"es"|"fr"|"it"|"nl"|"pl" preferred_language?; ""|"none"|"off_session" setup_future_usage?;}|"" sofort?;
    record {string|"" reference?; "none" setup_future_usage?;}|"" swish?;
    record {"none" setup_future_usage?;}|"" twint?;
    record {record {record {(filtersAccountsubcategoriesItemsString)[] account_subcategories?;} filters?; (financial_connectionsPermissionsItemsString)[] permissions?; ("balances"|"ownership"|"transactions")[] prefetch?; string return_url?;} financial_connections?; record {""|"paper" collection_method?;} mandate_options?; record {("ach"|"us_domestic_wire")[] requested?;} networks?; ""|"fastest"|"standard" preferred_settlement_speed?; ""|"none"|"off_session"|"on_session" setup_future_usage?; "automatic"|"instant"|"microdeposits" verification_method?;}|"" us_bank_account?;
    record {string app_id?; "android"|"ios"|"web" 'client; "none" setup_future_usage?;}|"" wechat_pay?;
    record {"none" setup_future_usage?;}|"" zip?;
};

# Settings related to Outbound Payments features on a Financial Account
public type Treasury_financial_accounts_resource_outbound_payments record {
    Treasury_financial_accounts_resource_ach_toggle_settings ach?;
    Treasury_financial_accounts_resource_toggle_settings us_domestic_wire?;
};

# Payment method-specific configuration for this SetupIntent.
public type payment_method_options_param_16 record {
    setup_intent_payment_method_options_param acss_debit?;
    record {} amazon_pay?;
    setup_intent_param card?;
    record {} card_present?;
    record {} link?;
    payment_method_options_param_16 paypal?;
    setup_intent_payment_method_options_param_2 sepa_debit?;
    setup_intent_payment_method_options_param_3 us_bank_account?;
};

public type subscription_trial_end_1 "now"|int;

public type payment_method_options_param_11 record {
    @constraint:String {maxLength: 5000}
    string reference?;
};

public type Treasury\.outbound_transfer record {
    int amount;
    boolean cancelable;
    int created;
    string currency;
    string? description?;
    string? destination_payment_method?;
    Outbound_transfers_payment_method_details destination_payment_method_details;
    int expected_arrival_date;
    string financial_account;
    string? hosted_regulatory_receipt_url?;
    string id;
    boolean livemode;
    record {|string...;|} metadata;
    "treasury.outbound_transfer" 'object;
    Treasury_outbound_transfers_resource_returned_details? returned_details?;
    string statement_descriptor;
    "canceled"|"failed"|"posted"|"processing"|"returned" status;
    Treasury_outbound_transfers_resource_status_transitions status_transitions;
    Treasury_outbound_transfers_resource_outbound_transfer_resource_tracking_details? tracking_details?;
    string|Treasury\.transaction 'transaction;
};

public type payment_method_options_param_12 record {
    linked_account_options_param financial_connections?;
    "none"|"off_session"|"on_session" setup_future_usage?;
    "automatic"|"instant" verification_method?;
};

public type session_expire_bodyExpandItemsString string;

public type payment_method_options_param_13 record {
    @constraint:String {maxLength: 5000}
    string app_id?;
    "android"|"ios"|"web" 'client;
    "none" setup_future_usage?;
};

# Payment method-specific configuration for this PaymentIntent.
public type payment_method_options_param_14 record {
    record {record {string|"" custom_mandate_url?; string interval_description?; "combined"|"interval"|"sporadic" payment_schedule?; "business"|"personal" transaction_type?;} mandate_options?; ""|"none"|"off_session"|"on_session" setup_future_usage?; "automatic"|"instant"|"microdeposits" verification_method?;}|"" acss_debit?;
    record {""|"manual" capture_method?; string preferred_locale?; "none" setup_future_usage?;}|"" affirm?;
    record {""|"manual" capture_method?; string reference?; "none" setup_future_usage?;}|"" afterpay_clearpay?;
    record {""|"none"|"off_session" setup_future_usage?;}|"" alipay?;
    record {""|"manual" capture_method?; ""|"none"|"off_session" setup_future_usage?;}|"" amazon_pay?;
    record {""|"none"|"off_session"|"on_session" setup_future_usage?;}|"" au_becs_debit?;
    record {""|"none"|"off_session"|"on_session" setup_future_usage?;}|"" bacs_debit?;
    record {"de"|"en"|"fr"|"nl" preferred_language?; ""|"none"|"off_session" setup_future_usage?;}|"" bancontact?;
    record {string code?; ""|"none" setup_future_usage?;}|"" blik?;
    record {int expires_after_days?; ""|"none"|"off_session"|"on_session" setup_future_usage?;}|"" boleto?;
    record {""|"manual" capture_method?; string cvc_token?; record {boolean enabled?; record {int count; "month" interval; "fixed_count" 'type;}|"" plan?;} installments?; record {int amount; "fixed"|"maximum" amount_type; string description?; int end_date?; "day"|"month"|"sporadic"|"week"|"year" interval; int interval_count?; string reference; int start_date; ("india")[] supported_types?;} mandate_options?; "amex"|"cartes_bancaires"|"diners"|"discover"|"eftpos_au"|"interac"|"jcb"|"mastercard"|"unionpay"|"unknown"|"visa" network?; "if_available"|"never" request_extended_authorization?; "if_available"|"never" request_incremental_authorization?; "if_available"|"never" request_multicapture?; "if_available"|"never" request_overcapture?; "any"|"automatic"|"challenge" request_three_d_secure?; boolean require_cvc_recollection?; ""|"none"|"off_session"|"on_session" setup_future_usage?; string|"" statement_descriptor_suffix_kana?; string|"" statement_descriptor_suffix_kanji?; record {"A"|"C"|"I"|"N"|"R"|"U"|"Y" ares_trans_status?; string cryptogram; "01"|"02"|"05"|"06"|"07" electronic_commerce_indicator?; "low_risk"|"none" exemption_indicator?; record {record {"0"|"1"|"2"|"3"|"4"|"A" cb_avalgo; string cb_exemption?; int cb_score?;} cartes_bancaires?;} network_options?; string requestor_challenge_indicator?; string transaction_id; "1.0.2"|"2.1.0"|"2.2.0" version;} three_d_secure?;}|"" card?;
    record {boolean request_extended_authorization?; boolean request_incremental_authorization_support?; record {"domestic"|"international" requested_priority?;} routing?;}|"" card_present?;
    record {""|"manual" capture_method?; ""|"none"|"off_session"|"on_session" setup_future_usage?;}|"" cashapp?;
    record {record {record {string country;} eu_bank_transfer?; ("aba"|"iban"|"sepa"|"sort_code"|"spei"|"swift"|"zengin")[] requested_address_types?; "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer" 'type;} bank_transfer?; "bank_transfer" funding_type?; "none" setup_future_usage?;}|"" customer_balance?;
    record {"none" setup_future_usage?;}|"" eps?;
    record {"none" setup_future_usage?;}|"" fpx?;
    record {"none" setup_future_usage?;}|"" giropay?;
    record {"none" setup_future_usage?;}|"" grabpay?;
    record {""|"none"|"off_session" setup_future_usage?;}|"" ideal?;
    record {}|"" interac_present?;
    record {""|"manual" capture_method?; "cs-CZ"|"da-DK"|"de-AT"|"de-CH"|"de-DE"|"el-GR"|"en-AT"|"en-AU"|"en-BE"|"en-CA"|"en-CH"|"en-CZ"|"en-DE"|"en-DK"|"en-ES"|"en-FI"|"en-FR"|"en-GB"|"en-GR"|"en-IE"|"en-IT"|"en-NL"|"en-NO"|"en-NZ"|"en-PL"|"en-PT"|"en-RO"|"en-SE"|"en-US"|"es-ES"|"es-US"|"fi-FI"|"fr-BE"|"fr-CA"|"fr-CH"|"fr-FR"|"it-CH"|"it-IT"|"nb-NO"|"nl-BE"|"nl-NL"|"pl-PL"|"pt-PT"|"ro-RO"|"sv-FI"|"sv-SE" preferred_locale?; "none" setup_future_usage?;}|"" klarna?;
    record {string|"" confirmation_number?; int|"" expires_after_days?; int|"" expires_at?; string|"" product_description?; "none" setup_future_usage?;}|"" konbini?;
    record {""|"manual" capture_method?; ""|"none"|"off_session" setup_future_usage?;}|"" link?;
    record {""|"manual" capture_method?; "none" setup_future_usage?;}|"" mobilepay?;
    record {"none" setup_future_usage?;}|"" multibanco?;
    record {int expires_after_days?; "none" setup_future_usage?;}|"" oxxo?;
    record {"none" setup_future_usage?; boolean tos_shown_and_accepted?;}|"" p24?;
    record {"none" setup_future_usage?;}|"" paynow?;
    record {""|"manual" capture_method?; "cs-CZ"|"da-DK"|"de-AT"|"de-DE"|"de-LU"|"el-GR"|"en-GB"|"en-US"|"es-ES"|"fi-FI"|"fr-BE"|"fr-FR"|"fr-LU"|"hu-HU"|"it-IT"|"nl-BE"|"nl-NL"|"pl-PL"|"pt-PT"|"sk-SK"|"sv-SE" preferred_locale?; string reference?; string risk_correlation_id?; ""|"none"|"off_session" setup_future_usage?;}|"" paypal?;
    record {int expires_after_seconds?; int expires_at?; "none" setup_future_usage?;}|"" pix?;
    record {"none" setup_future_usage?;}|"" promptpay?;
    record {""|"manual" capture_method?; ""|"none"|"off_session" setup_future_usage?;}|"" revolut_pay?;
    record {record {} mandate_options?; ""|"none"|"off_session"|"on_session" setup_future_usage?;}|"" sepa_debit?;
    record {""|"de"|"en"|"es"|"fr"|"it"|"nl"|"pl" preferred_language?; ""|"none"|"off_session" setup_future_usage?;}|"" sofort?;
    record {string|"" reference?; "none" setup_future_usage?;}|"" swish?;
    record {"none" setup_future_usage?;}|"" twint?;
    record {record {record {(filtersAccountsubcategoriesItemsString)[] account_subcategories?;} filters?; (financial_connectionsPermissionsItemsString)[] permissions?; ("balances"|"ownership"|"transactions")[] prefetch?; string return_url?;} financial_connections?; record {""|"paper" collection_method?;} mandate_options?; record {("ach"|"us_domestic_wire")[] requested?;} networks?; ""|"fastest"|"standard" preferred_settlement_speed?; ""|"none"|"off_session"|"on_session" setup_future_usage?; "automatic"|"instant"|"microdeposits" verification_method?;}|"" us_bank_account?;
    record {string app_id?; "android"|"ios"|"web" 'client; "none" setup_future_usage?;}|"" wechat_pay?;
    record {"none" setup_future_usage?;}|"" zip?;
};

public type tokens_body record {|
    connect_js_account_token_specs account?;
    token_create_bank_account bank_account?;
    # The card this token will represent. If you also pass in a customer, the card must be the ID of a card belonging to the customer. Otherwise, if you do not pass in a customer, this is a dictionary containing a user's credit card details, with the options described below.
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string currency?; string cvc?; string exp_month; string exp_year; string name?; record {"cartes_bancaires"|"mastercard"|"visa" preferred?;} networks?; string number;}|string card?;
    # Create a token for the customer, which is owned by the application's account. You can only use this with an [OAuth access token](https://stripe.com/docs/connect/standard-accounts) or [Stripe-Account header](https://stripe.com/docs/connect/authentication). Learn more about [cloning saved payment methods](https://stripe.com/docs/connect/cloning-saved-payment-methods).
    @constraint:String {maxLength: 5000}
    string customer?;
    cvc_params cvc_update?;
    # Specifies which fields in the response should be expanded.
    tokens_bodyExpandItemsString[] expand?;
    person_token_specs person?;
    pii_token_specs pii?;
|};

public type payment_method_options_param_10 record {
    int expires_after_seconds?;
};

# 
public type Payment_method_options_p24 record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# The schedule creation or modification params to apply as a preview. Cannot be used with `subscription` or `subscription_` prefixed fields.
public type schedule_details_params record {
    "cancel"|"release" end_behavior?;
    phase_configuration_params[] phases?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

# Represents the Queries record for the operation: GetQuotes
public type GetQuotesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetQuotesQueriesExpandItemsString[] expand?;
    # Provides a list of quotes that are associated with the specified test clock. The response will not include quotes with test clocks if this and the customer parameter is not set.
    @constraint:String {maxLength: 5000}
    string test_clock?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # The ID of the customer whose quotes will be retrieved.
    @constraint:String {maxLength: 5000}
    string customer?;
    # The status of the quote.
    "accepted"|"canceled"|"draft"|"open" status?;
};

public type disputes_dispute_body_1ExpandItemsString string;

public type disputes_dispute_body record {|
    dispute_evidence_params evidence?;
    # Specifies which fields in the response should be expanded.
    disputes_dispute_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default).
    boolean submit?;
|};

# 
public type Portal_flows_flow_subscription_cancel record {
    # Specify a retention strategy to be used in the cancellation flow.
    Portal_flows_retention? retention?;
    # The ID of the subscription to be canceled.
    @constraint:String {maxLength: 5000}
    string subscription;
};

public type id_cancel_bodyExpandItemsString string;

public type one_time_price_data_with_product_data record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product?;
    product_data product_data?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

# 
public type Payment_intent_next_action_wechat_pay_display_qr_code record {
    # The data being used to generate QR code
    @constraint:String {maxLength: 5000}
    string data;
    # The URL to the hosted WeChat Pay instructions page, which allows customers to view the WeChat Pay QR code.
    @constraint:String {maxLength: 5000}
    string hosted_instructions_url;
    # The base64 image data for a pre-generated QR code
    @constraint:String {maxLength: 5000}
    string image_data_url;
    # The image_url_png string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_png;
    # The image_url_svg string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_svg;
};

@constraint:String {maxLength: 5000}
public type Account_capability_requirementsCurrentlydueItemsString string;

@constraint:String {maxLength: 5000}
public type GetInvoicesInvoiceQueriesExpandItemsString string;

public type SubscriptionDiscountsItemsnull string|Discount;

# 
public type Tax_product_resource_tax_settings_head_office record {
    Address address;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryFinancialAccountsFinancialAccountQueriesExpandItemsString string;

# 
public type Gelato_email_report_error record {
    # A short machine-readable string giving the reason for the verification failure.
    "email_unverified_other"|"email_verification_declined"? code?;
    # A human-readable message giving the reason for the failure. These messages can be shown to your users.
    string? reason?;
};

# 
public type Checkout_card_installments_options record {
    # Indicates if installments are enabled
    boolean enabled?;
};

# A set of options for the session’s verification checks.
public type session_options_param record {
    record {("driving_license"|"id_card"|"passport")[] allowed_types?; boolean require_id_number?; boolean require_live_capture?; boolean require_matching_selfie?;}|"" document?;
};

public type account_login_links_body record {|
    # Specifies which fields in the response should be expanded.
    account_login_links_bodyExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountPeoplePersonQueriesExpandItemsString string;

public type setup_intents_bodyExpandItemsString string;

# Point in Time
public type Gelato_data_document_report_date_of_birth record {
    # Numerical day between 1 and 31.
    int? day?;
    # Numerical month between 1 and 12.
    int? month?;
    # The four-digit year.
    int? year?;
};

public type refund_expire_body record {|
    # Specifies which fields in the response should be expanded.
    refund_expire_bodyExpandItemsString[] expand?;
|};

# Represents the Queries record for the operation: GetCustomersCustomerSubscriptionsSubscriptionExposedId
public type GetCustomersCustomerSubscriptionsSubscriptionExposedIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerSubscriptionsSubscriptionExposedIdQueriesExpandItemsString[] expand?;
};

# Contains Features that add FinancialAddresses to the FinancialAccount.
public type financial_addresses_1 record {
    aba_access aba?;
};

public type shipping_option_params_1 record {
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
};

public type account_links_body record {|
    # The identifier of the account to create an account link for.
    @constraint:String {maxLength: 5000}
    string account;
    # The collect parameter is deprecated. Use `collection_options` instead.
    "currently_due"|"eventually_due" collect?;
    collection_options_params collection_options?;
    # Specifies which fields in the response should be expanded.
    account_links_bodyExpandItemsString[] expand?;
    # The URL the user will be redirected to if the account link is expired, has been previously-visited, or is otherwise invalid. The URL you specify should attempt to generate a new account link with the same parameters used to create the original account link, then redirect the user to the new account link's URL so they can continue with Connect Onboarding. If a new account link cannot be generated or the redirect fails you should display a useful error to the user.
    string refresh_url?;
    # The URL that the user will be redirected to upon leaving or completing the linked flow.
    string return_url?;
    # The type of account link the user is requesting. Possible values are `account_onboarding` or `account_update`.
    "account_onboarding"|"account_update" 'type;
|};

@constraint:String {maxLength: 5000}
public type Account_future_requirementsPendingverificationItemsString string;

@constraint:String {maxLength: 5000}
public type GetTaxCalculationsCalculationLineItemsQueriesExpandItemsString string;

public type identity_verification_sessions_body record {|
    # A string to reference this user. This can be a customer ID, a session ID, or similar, and can be used to reconcile this verification with your internal systems.
    @constraint:String {maxLength: 5000}
    string client_reference_id?;
    # Specifies which fields in the response should be expanded.
    identity_verification_sessions_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    session_options_param options?;
    provided_details_param provided_details?;
    # The URL that the user will be redirected to upon completing the verification flow.
    string return_url?;
    # The type of [verification check](https://stripe.com/docs/identity/verification-checks) to be performed. You must provide a `type` if not passing `verification_flow`.
    "document"|"id_number" 'type?;
    # The ID of a Verification Flow from the Dashboard. See https://docs.stripe.com/identity/verification-flows.
    @constraint:String {maxLength: 5000}
    string verification_flow?;
|};

public type authentication_exemption_specs record {
    "acquirer"|"issuer" claimed_by;
    "low_value_transaction"|"transaction_risk_analysis"|"unknown" 'type;
};

# Represents the Queries record for the operation: GetSubscriptionsSearch
public type GetSubscriptionsSearchQueries record {
    # Specifies which fields in the response should be expanded.
    GetSubscriptionsSearchQueriesExpandItemsString[] expand?;
    # The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for subscriptions](https://stripe.com/docs/search#query-fields-for-subscriptions).
    @constraint:String {maxLength: 5000}
    string query;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.
    @constraint:String {maxLength: 5000}
    string page?;
};

# Additional parameters for `bank_transfer` funding types
public type bank_transfer_params record {
    eu_bank_account_params eu_bank_transfer?;
    ("iban"|"sort_code"|"spei"|"zengin")[] requested_address_types?;
    "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer" 'type;
};

# 
public type Connect_embedded_account_features_claim record {
    # Whether to allow platforms to control bank account collection for their connected accounts. This feature can only be false for custom accounts (or accounts where the platform is compliance owner). Otherwise, bank account collection is determined by compliance requirements.
    boolean external_account_collection;
};

# 
public type Issuing_transaction_fleet_reported_breakdown record {
    # Breakdown of fuel portion of the purchase.
    Issuing_transaction_fleet_fuel_price_data? fuel?;
    # Breakdown of non-fuel portion of the purchase.
    Issuing_transaction_fleet_non_fuel_price_data? non_fuel?;
    # Information about tax included in this transaction.
    Issuing_transaction_fleet_tax_data? tax?;
};

# 
public type Payment_method_sofort record {
    # Two-letter ISO code representing the country the bank account is located in.
    string? country?;
};

public type balance_transactions_transaction_body record {|
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 350}
    string description?;
    # Specifies which fields in the response should be expanded.
    balance_transactions_transaction_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

public type personalization_design_reject_bodyExpandItemsString string;

# Login Links are single-use URLs for a connected account to access the Express Dashboard. The connected account's [account.controller.stripe_dashboard.type](/api/accounts/object#account_object-controller-stripe_dashboard-type) must be `express` to have access to the Express Dashboard.
public type Login_link record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # String representing the object's type. Objects of the same type share the same value.
    "login_link" 'object;
    # The URL for the login link.
    @constraint:String {maxLength: 5000}
    string url;
};

public type subscription_cancellation_reason_updating_param record {
    boolean enabled;
    ("customer_service"|"low_quality"|"missing_features"|"other"|"switched_service"|"too_complex"|"too_expensive"|"unused")[]|"" options?;
};

# 
public type Payment_pages_checkout_session_consent_collection record {
    # If set to `hidden`, it will hide legal text related to the reuse of a payment method.
    Payment_pages_checkout_session_payment_method_reuse_agreement? payment_method_reuse_agreement?;
    # If set to `auto`, enables the collection of customer consent for promotional communications. The Checkout
    # Session will determine whether to display an option to opt into promotional communication
    # from the merchant depending on the customer's locale. Only available to US merchants.
    "auto"|"none"? promotions?;
    # If set to `required`, it requires customers to accept the terms of service before being able to pay.
    "none"|"required"? terms_of_service?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingSettlementsSettlementQueriesExpandItemsString string;

public type ach_tracking_details_params record {
    @constraint:String {maxLength: 5000}
    string trace_id;
};

public type relationship_specs_1 record {
    boolean director?;
    boolean executive?;
    boolean legal_guardian?;
    boolean owner?;
    decimal|"" percent_ownership?;
    boolean representative?;
    @constraint:String {maxLength: 5000}
    string title?;
};

public type tax_registrations_bodyExpandItemsString string;

public type payment_intents_intent_bodyExpandItemsString string;

# 
public type Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_incremental_authorization_incremental_authorization record {
    # Indicates whether or not the incremental authorization feature is supported.
    "available"|"unavailable" status;
};

@constraint:String {maxLength: 5000}
public type GetLinkedAccountsQueriesExpandItemsString string;

# The rendering-related settings that control how the invoice is displayed on customer-facing surfaces such as PDF and Hosted Invoice Page.
public type rendering_param record {
    ""|"exclude_tax"|"include_inclusive_tax" amount_tax_display?;
    rendering_pdf_param pdf?;
};

# 
public type TreasuryTransactionsResourceTransactionEntryList record {
    # Details about each object.
    Treasury\.transaction_entry[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/treasury/transaction_entries`}
    string url;
};

public type InvoiceitemDiscountsItemsnull string|Discount;

# Zengin Records contain Japan bank account details per the Zengin format.
public type Funding_instructions_bank_transfer_zengin_record record {
    # The account holder name
    string? account_holder_name?;
    # The account number
    string? account_number?;
    # The bank account type. In Japan, this can only be `futsu` or `toza`.
    string? account_type?;
    # The bank code of the account
    string? bank_code?;
    # The bank name of the account
    string? bank_name?;
    # The branch code of the account
    string? branch_code?;
    # The branch name of the account
    string? branch_name?;
};

# 
public type Payment_intent_payment_method_options_au_becs_debit record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# Represents a line item to be displayed on the reader
public type Terminal_reader_reader_resource_line_item record {
    # The amount of the line item. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Description of the line item.
    @constraint:String {maxLength: 5000}
    string description;
    # The quantity of the line item.
    int quantity;
};

# Represents the Queries record for the operation: GetFinancialConnectionsAccountsAccount
public type GetFinancialConnectionsAccountsAccountQueries record {
    # Specifies which fields in the response should be expanded.
    GetFinancialConnectionsAccountsAccountQueriesExpandItemsString[] expand?;
};

public type readers_reader_body record {|
    # Specifies which fields in the response should be expanded.
    readers_reader_bodyExpandItemsString[] expand?;
    # The new label of the reader.
    string|"" label?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# Represents the Queries record for the operation: GetForwardingRequests
public type GetForwardingRequestsQueries record {
    # A pagination cursor to fetch the previous page of the list. The value must be a ForwardingRequest ID.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetForwardingRequestsQueriesExpandItemsString[] expand?;
    # Similar to other List endpoints, filters results based on created timestamp. You can pass gt, gte, lt, and lte timestamp values.
    created_param created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A pagination cursor to fetch the next page of the list. The value must be a ForwardingRequest ID.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetSubscriptionSchedulesQueriesExpandItemsString string;

# 
public type Payment_method_oxxo record {
};

public type simplified record {
    "simplified" 'type;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerPaymentMethodsQueriesExpandItemsString string;

public type outbound_transfer_fail_body record {|
    # Specifies which fields in the response should be expanded.
    outbound_transfer_fail_bodyExpandItemsString[] expand?;
|};

public type Entitlements\.feature record {
    boolean active;
    string id;
    boolean livemode;
    string lookup_key;
    record {|string...;|} metadata;
    string name;
    "entitlements.feature" 'object;
};

@constraint:String {maxLength: 5000}
public type Country_specSupportedpaymentmethodsItemsString string;

# 
public type Payment_method_details_affirm record {
};

public type transaction_refund_bodyExpandItemsString string;

public type authorization_controls_param_v2BlockedcategoriesItemsString "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards";

# 
public type Payment_links_resource_custom_fields_dropdown_option record {
    # The label for the option, displayed to the customer. Up to 100 characters.
    @constraint:String {maxLength: 5000}
    string label;
    # The value for this option, not displayed to the customer, used by your integration to reconcile the option selected by the customer. Must be unique to this option, alphanumeric, and up to 100 characters.
    @constraint:String {maxLength: 5000}
    string value;
};

# A subset of parameters to be passed to SetupIntent creation for Checkout Sessions in `setup` mode.
public type setup_intent_data_param record {
    @constraint:String {maxLength: 1000}
    string description?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
};

# 
public type Payment_links_resource_custom_text_position record {
    # Text may be up to 1200 characters in length.
    @constraint:String {maxLength: 500}
    string message;
};

# Includes Features related to initiating money movement out of the FinancialAccount to someone else's bucket of money.
public type outbound_payments_1 record {
    access_with_ach_details ach?;
    access us_domestic_wire?;
};

# 
public type Payment_intent_card_processing record {
    Payment_intent_processing_customer_notification customer_notification?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingTransactionsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetFiles
public type GetFilesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetFilesQueriesExpandItemsString[] expand?;
    # Filter queries by the file purpose. If you don't provide a purpose, the queries return unfiltered files.
    "account_requirement"|"additional_verification"|"business_icon"|"business_logo"|"customer_signature"|"dispute_evidence"|"document_provider_identity_document"|"finance_report_run"|"identity_document"|"identity_document_downloadable"|"pci_document"|"selfie"|"sigma_scheduled_query"|"tax_document_user_upload"|"terminal_reader_splashscreen" purpose?;
    # Only return files that were created during the given date interval.
    created_12 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Coupon_applies_to record {
    # A list of product IDs this coupon applies to
    Coupon_applies_toProductsItemsString[] products;
};

public type charge_refund_body record {|
    # A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) representing how much of this charge to refund. Can refund only up to the remaining, unrefunded amount of the charge.
    int amount?;
    # Specifies which fields in the response should be expanded.
    charge_refund_bodyExpandItemsString[] expand?;
    # For payment methods without native refund support (e.g., Konbini, PromptPay), use this email from the customer to receive refund instructions.
    string instructions_email?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The identifier of the PaymentIntent to refund.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # String indicating the reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`. If you believe the charge to be fraudulent, specifying `fraudulent` as the reason will add the associated card and email to your [block lists](https://stripe.com/docs/radar/lists), and will also help us improve our fraud detection algorithms.
    "duplicate"|"fraudulent"|"requested_by_customer" reason?;
    # Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.
    boolean refund_application_fee?;
    # Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount).<br><br>A transfer can be reversed only by the application that created the charge.
    boolean reverse_transfer?;
|};

public type Treasury\.transaction_entry record {
    Treasury_transactions_resource_balance_impact balance_impact;
    int created;
    string currency;
    int effective_at;
    string financial_account;
    string? flow?;
    Treasury_transactions_resource_flow_details? flow_details?;
    "credit_reversal"|"debit_reversal"|"inbound_transfer"|"issuing_authorization"|"other"|"outbound_payment"|"outbound_transfer"|"received_credit"|"received_debit" flow_type;
    string id;
    boolean livemode;
    "treasury.transaction_entry" 'object;
    string|Treasury\.transaction 'transaction;
    "credit_reversal"|"credit_reversal_posting"|"debit_reversal"|"inbound_transfer"|"inbound_transfer_return"|"issuing_authorization_hold"|"issuing_authorization_release"|"other"|"outbound_payment"|"outbound_payment_cancellation"|"outbound_payment_failure"|"outbound_payment_posting"|"outbound_payment_return"|"outbound_transfer"|"outbound_transfer_cancellation"|"outbound_transfer_failure"|"outbound_transfer_posting"|"outbound_transfer_return"|"received_credit"|"received_debit" 'type;
};

# The full address of the location.
public type create_location_address_param record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

# 
public type Account_decline_charge_on record {
    # Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.
    boolean avs_failure;
    # Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.
    boolean cvc_failure;
};

# 
public type Quotes_resource_status_transitions record {
    # The time that the quote was accepted. Measured in seconds since Unix epoch.
    int? accepted_at?;
    # The time that the quote was canceled. Measured in seconds since Unix epoch.
    int? canceled_at?;
    # The time that the quote was finalized. Measured in seconds since Unix epoch.
    int? finalized_at?;
};

# 
public type Setup_intent_payment_method_options_card_present record {
};

public type tier record {
    int flat_amount?;
    string flat_amount_decimal?;
    int unit_amount?;
    string unit_amount_decimal?;
    "inf"|int up_to;
};

# 
public type Invoices_payment_settings record {
    # ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the invoice's default_payment_method or default_source, if set.
    string? default_mandate?;
    # Payment-method-specific configuration to provide to the invoice’s PaymentIntent.
    Invoices_payment_method_options? payment_method_options?;
    # The list of payment method types (e.g. card) to provide to the invoice’s PaymentIntent. If not set, Stripe attempts to automatically determine the types to use by looking at the invoice’s default payment method, the subscription’s default payment method, the customer’s default payment method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).
    ("ach_credit_transfer"|"ach_debit"|"acss_debit"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"konbini"|"link"|"p24"|"paynow"|"paypal"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"us_bank_account"|"wechat_pay")[]? payment_method_types?;
};

# 
public type Bank_connections_resource_transaction_refresh record {
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The time at which the last refresh attempt was initiated. Measured in seconds since the Unix epoch.
    int last_attempted_at;
    # Time at which the next transaction refresh can be initiated. This value will be `null` when `status` is `pending`. Measured in seconds since the Unix epoch.
    int? next_refresh_available_at?;
    # The status of the last refresh attempt.
    "failed"|"pending"|"succeeded" status;
};

public type customer_tax_ids_bodyExpandItemsString string;

public type Source_type_acss_debit record {
    string? bank_address_city?;
    string? bank_address_line_1?;
    string? bank_address_line_2?;
    string? bank_address_postal_code?;
    string? bank_name?;
    string? category?;
    string? country?;
    string? fingerprint?;
    string? last4?;
    string? routing_number?;
};

public type quotes_body record {|
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. There cannot be any line items with recurring prices when using this field.
    int|"" application_fee_amount?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field.
    decimal|"" application_fee_percent?;
    automatic_tax_param_5 automatic_tax?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or at invoice finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The customer for which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.
    @constraint:String {maxLength: 5000}
    string customer?;
    # The tax rates that will apply to any line item that does not have `tax_rates` set.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # A description that will be displayed on the quote PDF. If no value is passed, the default description configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.
    string|"" description?;
    # The discounts applied to the quote. You can only set up to one discount.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    quotes_bodyExpandItemsString[] expand?;
    # A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch. If no value is passed, the default expiration date configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.
    int expires_at?;
    # A footer that will be displayed on the quote PDF. If no value is passed, the default footer configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.
    string|"" footer?;
    from_quote_params from_quote?;
    # A header that will be displayed on the quote PDF. If no value is passed, the default header configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.
    string|"" header?;
    quote_param invoice_settings?;
    # A list of line items the customer is being quoted for. Each line item includes information about the product, the quantity, and the resulting cost.
    line_item_create_params[] line_items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The account on behalf of which to charge.
    string|"" on_behalf_of?;
    subscription_data_create_params subscription_data?;
    # ID of the test clock to attach to the quote.
    @constraint:String {maxLength: 5000}
    string test_clock?;
    # The data with which to automatically create a Transfer for each of the invoices.
    record {int amount?; decimal amount_percent?; string destination;}|"" transfer_data?;
|};

# 
public type Payment_pages_checkout_session_custom_text record {
    # Custom text that should be displayed after the payment confirmation button.
    Payment_pages_checkout_session_custom_text_position? after_submit?;
    # Custom text that should be displayed alongside shipping address collection.
    Payment_pages_checkout_session_custom_text_position? shipping_address?;
    # Custom text that should be displayed alongside the payment confirmation button.
    Payment_pages_checkout_session_custom_text_position? submit?;
    # Custom text that should be displayed in place of the default terms of service agreement text.
    Payment_pages_checkout_session_custom_text_position? terms_of_service_acceptance?;
};

# 
public type PriceList record {
    # Details about each object.
    Price[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/prices`}
    string url;
};

# 
public type Treasury_shared_resource_billing_details record {
    Address address;
    # Email address.
    string? email?;
    # Full name.
    string? name?;
};

public type Invoice_setting_subscription_schedule_phase_settingAccounttaxidsItemsnull string|Tax_id|Deleted_tax_id;

# 
public type Issuing_authorization_fuel_data record {
    # [Conexxus Payment System Product Code](https://www.conexxus.org/conexxus-payment-system-product-codes) identifying the primary fuel product purchased.
    string? industry_product_code?;
    # The quantity of `unit`s of fuel that was dispensed, represented as a decimal string with at most 12 decimal places.
    string? quantity_decimal?;
    # The type of fuel that was purchased.
    "diesel"|"other"|"unleaded_plus"|"unleaded_regular"|"unleaded_super"? 'type?;
    # The units for `quantity_decimal`.
    "charging_minute"|"imperial_gallon"|"kilogram"|"kilowatt_hour"|"liter"|"other"|"pound"|"us_gallon"? unit?;
    # The cost in cents per each unit of fuel, represented as a decimal string with at most 12 decimal places.
    string? unit_cost_decimal?;
};

# 
public type TransferReversalList record {
    # Details about each object.
    Transfer_reversal[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type refunds_refund_bodyExpandItemsString string;

# 
public type Account_unification_account_controller_fees record {
    # A value indicating the responsible payer of a bundle of Stripe fees for pricing-control eligible products on this account. Learn more about [fee behavior on connected accounts](https://docs.stripe.com/connect/direct-charges-fee-payer-behavior).
    "account"|"application"|"application_custom"|"application_express" payer;
};

# Defines how a subscription behaves when a free trial ends.
public type Subscriptions_trials_resource_end_behavior record {
    # Indicates how the subscription should change when the trial ends if the user did not provide a payment method.
    "cancel"|"create_invoice"|"pause" missing_payment_method;
};

# Shipping information for this PaymentIntent.
public type optional_fields_shipping_1 record {
    optional_fields_address address;
    @constraint:String {maxLength: 5000}
    string carrier?;
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string tracking_number?;
};

public type accountholder_params record {
    @constraint:String {maxLength: 5000}
    string account?;
    @constraint:String {maxLength: 5000}
    string customer?;
};

# 
public type Portal_login_page record {
    # If `true`, a shareable `url` will be generated that will take your customers to a hosted login page for the customer portal.
    # 
    # If `false`, the previously generated `url`, if any, will be deactivated.
    boolean enabled;
    # A shareable URL to the hosted portal login page. Your customers will be able to log in with their [email](https://stripe.com/docs/api/customers/object#customer_object-email) and receive a link to their customer portal.
    string? url?;
};

# 
public type Discounts_resource_discount_amount record {
    # The amount, in cents (or local equivalent), of the discount.
    int amount;
    # The discount that was applied to get this discount amount.
    string|Discount|Deleted_discount discount;
};

public type fleet_specs_1 record {
    fleet_cardholder_prompt_data_specs cardholder_prompt_data?;
    "fuel_and_non_fuel_purchase"|"fuel_purchase"|"non_fuel_purchase" purchase_type?;
    fleet_reported_breakdown_specs reported_breakdown?;
    "full_service"|"non_fuel_transaction"|"self_service" service_type?;
};

# 
public type RadarReviewList record {
    Review[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type invoiceitems_bodyTaxratesItemsString string;

@constraint:String {maxLength: 5000}
public type Tax_product_resource_tax_settings_status_details_resource_pendingMissingfieldsItemsString string;

# 
public type Card_mandate_payment_method_details record {
};

# 
public type Subscription_schedule_current_phase record {
    # The end of this phase of the subscription schedule.
    int end_date;
    # The start of this phase of the subscription schedule.
    int start_date;
};

public type terms_acceptance_param record {
    int date?;
    string ip?;
    string|"" user_agent?;
};

public type disputes_dispute_body_1 record {|
    # The dispute amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount?;
    evidence_param evidence?;
    # Specifies which fields in the response should be expanded.
    disputes_dispute_body_1ExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

@constraint:String {maxLength: 5000}
public type ProductImagesItemsString string;

# Details about the customer you want to invoice or overrides for an existing customer. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
public type customer_details_param record {
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string phone?;}|"" shipping?;
    tax_param_1 tax?;
    ""|"exempt"|"none"|"reverse" tax_exempt?;
    data_params[] tax_ids?;
};

# Represents the Queries record for the operation: GetFileLinksLink
public type GetFileLinksLinkQueries record {
    # Specifies which fields in the response should be expanded.
    GetFileLinksLinkQueriesExpandItemsString[] expand?;
};

public type Climate\.product record {
    int created;
    record {|Climate_removals_products_price...;|} current_prices_per_metric_ton;
    int? delivery_year?;
    string id;
    boolean livemode;
    string metric_tons_available;
    string name;
    "climate.product" 'object;
    Climate\.supplier[] suppliers;
};

public type accounts_bodyExpandItemsString string;

# 
public type Gelato_selfie_report_error record {
    # A short machine-readable string giving the reason for the verification failure.
    "selfie_document_missing_photo"|"selfie_face_mismatch"|"selfie_manipulated"|"selfie_unverified_other"? code?;
    # A human-readable message giving the reason for the failure. These messages can be shown to your users.
    string? reason?;
};

# 
public type Networks record {
    # All available networks for the card.
    NetworksAvailableItemsString[] available;
    # The preferred network for co-branded cards. Can be `cartes_bancaires`, `mastercard`, `visa` or `invalid_preference` if requested network is not valid for the card.
    string? preferred?;
};

# Represents the Queries record for the operation: GetClimateProductsProduct
public type GetClimateProductsProductQueries record {
    # Specifies which fields in the response should be expanded.
    GetClimateProductsProductQueriesExpandItemsString[] expand?;
};

# 
public type Portal_payment_method_update record {
    # Whether the feature is enabled.
    boolean enabled;
};

public type authorization_finalize_amount_body record {|
    # Specifies which fields in the response should be expanded.
    authorization_finalize_amount_bodyExpandItemsString[] expand?;
    # The final authorization amount that will be captured by the merchant. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int final_amount;
    fleet_specs fleet?;
    fuel_specs fuel?;
|};

# Payment method-specific configuration for this OutboundPayment.
public type payment_method_options_2 record {
    record {"ach"|"us_domestic_wire" network?;}|"" us_bank_account?;
};

# Hash describing payment method configuration details.
public type payment_method_options_3 record {
    record {"ach"|"us_domestic_wire" network?;}|"" us_bank_account?;
};

public type payment_method_options_1 record {
    record {record {"business"|"personal" transaction_type?;} mandate_options?; "automatic"|"instant"|"microdeposits" verification_method?;}|"" acss_debit?;
    record {"de"|"en"|"fr"|"nl" preferred_language?;}|"" bancontact?;
    record {record {boolean enabled?; record {int count; "month" interval; "fixed_count" 'type;}|"" plan?;} installments?; "any"|"automatic"|"challenge" request_three_d_secure?;}|"" card?;
    record {record {record {string country;} eu_bank_transfer?; string 'type?;} bank_transfer?; string funding_type?;}|"" customer_balance?;
    record {}|"" konbini?;
    record {}|"" sepa_debit?;
    record {record {record {("checking"|"savings")[] account_subcategories?;} filters?; (financial_connectionsPermissionsItemsString)[] permissions?; ("balances"|"ownership"|"transactions")[] prefetch?;} financial_connections?; "automatic"|"instant"|"microdeposits" verification_method?;}|"" us_bank_account?;
};

public type source_verify_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetClimateOrdersOrder
public type GetClimateOrdersOrderQueries record {
    # Specifies which fields in the response should be expanded.
    GetClimateOrdersOrderQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetSubscriptionItemsItemQueriesExpandItemsString string;

# 
public type Checkout_amazon_pay_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# 
public type Payment_method_options_ideal record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# 
public type Source_transaction_ach_credit_transfer_data record {
    # Customer data associated with the transfer.
    @constraint:String {maxLength: 5000}
    string customer_data?;
    # Bank account fingerprint associated with the transfer.
    @constraint:String {maxLength: 5000}
    string fingerprint?;
    # Last 4 digits of the account number associated with the transfer.
    @constraint:String {maxLength: 5000}
    string last4?;
    # Routing number associated with the transfer.
    @constraint:String {maxLength: 5000}
    string routing_number?;
};

# 
public type Payment_method_promptpay record {
};

# The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions.
public type delivery_estimate_1 record {
    delivery_estimate_bound maximum?;
    delivery_estimate_bound minimum?;
};

# Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required.
public type one_time_price_data record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type cards_id_body record {|
    # The name of the person or business that owns the bank account.
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    # The type of entity that holds the account. This can be either `individual` or `company`.
    "company"|"individual" account_holder_type?;
    # City/District/Suburb/Town/Village.
    @constraint:String {maxLength: 5000}
    string address_city?;
    # Billing address country, if provided when creating card.
    @constraint:String {maxLength: 5000}
    string address_country?;
    # Address line 1 (Street address/PO Box/Company name).
    @constraint:String {maxLength: 5000}
    string address_line1?;
    # Address line 2 (Apartment/Suite/Unit/Building).
    @constraint:String {maxLength: 5000}
    string address_line2?;
    # State/County/Province/Region.
    @constraint:String {maxLength: 5000}
    string address_state?;
    # ZIP or postal code.
    @constraint:String {maxLength: 5000}
    string address_zip?;
    # Two digit number representing the card’s expiration month.
    @constraint:String {maxLength: 5000}
    string exp_month?;
    # Four digit number representing the card’s expiration year.
    @constraint:String {maxLength: 5000}
    string exp_year?;
    # Specifies which fields in the response should be expanded.
    cards_id_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Cardholder name.
    @constraint:String {maxLength: 5000}
    string name?;
    owner owner?;
|};

public type subscription_items_body record {|
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds.
    record {int usage_gte;}|"" billing_thresholds?;
    # The coupons to redeem into discounts for the subscription item.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    subscription_items_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    # 
    # Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.
    # 
    # Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).
    # 
    # Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
    "allow_incomplete"|"default_incomplete"|"error_if_incomplete"|"pending_if_incomplete" payment_behavior?;
    # The ID of the price object.
    @constraint:String {maxLength: 5000}
    string price?;
    recurring_price_data_1 price_data?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    # If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.
    int proration_date?;
    # The quantity you'd like to apply to the subscription item you're creating.
    int quantity?;
    # The identifier of the subscription to modify.
    @constraint:String {maxLength: 5000}
    string subscription;
    # A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates.
    TaxratesItemsString[]|"" tax_rates?;
|};

public type subscriptions_subscription_exposed_id_body_1ExpandItemsString string;

# Filters to restrict the kinds of accounts to collect.
public type filters_params record {
    ("checking"|"credit_card"|"line_of_credit"|"mortgage"|"savings")[] account_subcategories?;
    filters_paramsCountriesItemsString[] countries?;
};

public type Reporting\.report_typeDefaultcolumnsItemsString string;

# Represents the Queries record for the operation: GetRadarValueListsValueList
public type GetRadarValueListsValueListQueries record {
    # Specifies which fields in the response should be expanded.
    GetRadarValueListsValueListQueriesExpandItemsString[] expand?;
};

public type current_period_end record {int gt?; int gte?; int lt?; int lte?;}|int;

public type subscription_update_updating_param record {
    ("price"|"promotion_code"|"quantity")[]|"" default_allowed_updates?;
    boolean enabled?;
    record {ProductsItemsObjectPricesItemsString[] prices; string product;}[]|"" products?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

# 
public type Deleted_product record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "product" 'object;
};

# 
public type Issuing_dispute_service_not_as_described_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Date when order was canceled.
    int? canceled_at?;
    # Reason for canceling the order.
    string? cancellation_reason?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
    # Date when the product was received.
    int? received_at?;
};

# 
public type Setup_intent_payment_method_options_card record {
    # Configuration options for setting up an eMandate for cards issued in India.
    Setup_intent_payment_method_options_card_mandate_options? mandate_options?;
    # Selected network to process this SetupIntent on. Depends on the available networks of the card attached to the setup intent. Can be only set confirm-time.
    "amex"|"cartes_bancaires"|"diners"|"discover"|"eftpos_au"|"interac"|"jcb"|"mastercard"|"unionpay"|"unknown"|"visa"? network?;
    # We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. If not provided, this value defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    "any"|"automatic"|"challenge"? request_three_d_secure?;
};

# 
public type Treasury_inbound_transfers_resource_inbound_transfer_resource_linked_flows record {
    # If funds for this flow were returned after the flow went to the `succeeded` state, this field contains a reference to the ReceivedDebit return.
    string? received_debit?;
};

# Represents the Queries record for the operation: GetQuotesQuoteLineItems
public type GetQuotesQuoteLineItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetQuotesQuoteLineItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type Source_type_au_becs_debit record {
    string? bsb_number?;
    string? fingerprint?;
    string? last4?;
};

@constraint:String {maxLength: 5000}
public type GetForwardingRequestsIdQueriesExpandItemsString string;

# 
public type PaymentPagesCheckoutSessionList record {
    Checkout\.session[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Country_spec_verification_field_details record {
    # Additional fields which are only required for some users.
    Country_spec_verification_field_detailsAdditionalItemsString[] additional;
    # Fields which every account must eventually provide.
    Country_spec_verification_field_detailsMinimumItemsString[] minimum;
};

# 
public type Payment_intent_next_action_verify_with_microdeposits record {
    # The timestamp when the microdeposits are expected to land.
    int arrival_date;
    # The URL for the hosted verification page, which allows customers to verify their bank account.
    @constraint:String {maxLength: 5000}
    string hosted_verification_url;
    # The type of the microdeposit sent to the customer. Used to distinguish between different verification methods.
    "amounts"|"descriptor_code"? microdeposit_type?;
};

public type order_cancel_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetFinancialConnectionsTransactionsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetFinancialConnectionsTransactionsTransactionQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetReportingReportTypesReportType
public type GetReportingReportTypesReportTypeQueries record {
    # Specifies which fields in the response should be expanded.
    GetReportingReportTypesReportTypeQueriesExpandItemsString[] expand?;
};

# 
public type Terminal_configuration_configuration_resource_offline_config record {
    # Determines whether to allow transactions to be collected while reader is offline. Defaults to false.
    boolean? enabled?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryTransactionsQueriesExpandItemsString string;

public type Treasury\.financial_account_features record {
    Treasury_financial_accounts_resource_toggle_settings card_issuing?;
    Treasury_financial_accounts_resource_toggle_settings deposit_insurance?;
    Treasury_financial_accounts_resource_financial_addresses_features financial_addresses?;
    Treasury_financial_accounts_resource_inbound_transfers inbound_transfers?;
    Treasury_financial_accounts_resource_toggle_settings intra_stripe_flows?;
    "treasury.financial_account_features" 'object;
    Treasury_financial_accounts_resource_outbound_payments outbound_payments?;
    Treasury_financial_accounts_resource_outbound_transfers outbound_transfers?;
};

# These bank accounts are payment methods on `Customer` objects.
# 
# On the other hand [External Accounts](/api#external_accounts) are transfer
# destinations on `Account` objects for connected accounts.
# They can be bank accounts or debit cards as well, and are documented in the links above.
# 
# Related guide: [Bank debits and transfers](/payments/bank-debits-transfers)
public type Bank_account record {
    # The ID of the account that the bank account is associated with.
    string|Account? account?;
    # The name of the person or business that owns the bank account.
    string? account_holder_name?;
    # The type of entity that holds the account. This can be either `individual` or `company`.
    string? account_holder_type?;
    # The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.
    string? account_type?;
    # A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.
    ("instant"|"standard")[]? available_payout_methods?;
    # Name of the bank associated with the routing number (e.g., `WELLS FARGO`).
    string? bank_name?;
    # Two-letter ISO code representing the country the bank account is located in.
    @constraint:String {maxLength: 5000}
    string country;
    # Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.
    string currency;
    # The ID of the customer that the bank account is associated with.
    string|Customer|Deleted_customer? customer?;
    # Whether this bank account is the default external account for its currency.
    boolean? default_for_currency?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Information about the [upcoming new requirements for the bank account](https://stripe.com/docs/connect/custom-accounts/future-requirements), including what information needs to be collected, and by when.
    External_account_requirements? future_requirements?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The last four digits of the bank account number.
    @constraint:String {maxLength: 5000}
    string last4;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "bank_account" 'object;
    # Information about the requirements for the bank account, including what information needs to be collected.
    External_account_requirements? requirements?;
    # The routing transit number for the bank account.
    string? routing_number?;
    # For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a payout sent to this bank account fails, we'll set the status to `errored` and will not continue to send [scheduled payouts](https://stripe.com/docs/payouts#payout-schedule) until the bank details are updated.
    # 
    # For external accounts, possible values are `new`, `errored` and `verification_failed`. If a payout fails, the status is set to `errored` and scheduled payouts are stopped until account details are updated. In the US and India, if we can't [verify the owner of the bank account](https://support.stripe.com/questions/bank-account-ownership-verification), we'll set the status to `verification_failed`. Other validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply.
    @constraint:String {maxLength: 5000}
    string status;
};

# 
public type Payment_intent_payment_method_options_mandate_options_acss_debit record {
    # A URL for custom mandate text
    @constraint:String {maxLength: 5000}
    string custom_mandate_url?;
    # Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.
    string? interval_description?;
    # Payment schedule for the mandate.
    "combined"|"interval"|"sporadic"? payment_schedule?;
    # Transaction type of the mandate.
    "business"|"personal"? transaction_type?;
};

# 
public type Issuing_cardholder_individual_dob record {
    # The day of birth, between 1 and 31.
    int? day?;
    # The month of birth, between 1 and 12.
    int? month?;
    # The four-digit year of birth.
    int? year?;
};

# 
public type Setup_intent_payment_method_options_mandate_options_acss_debit record {
    # A URL for custom mandate text
    @constraint:String {maxLength: 5000}
    string custom_mandate_url?;
    # List of Stripe products where this mandate can be selected automatically.
    ("invoice"|"subscription")[] default_for?;
    # Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.
    string? interval_description?;
    # Payment schedule for the mandate.
    "combined"|"interval"|"sporadic"? payment_schedule?;
    # Transaction type of the mandate.
    "business"|"personal"? transaction_type?;
};

# 
public type Subscription_transfer_data record {
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the destination account. By default, the entire amount is transferred to the destination.
    decimal? amount_percent?;
    # The account where funds from the payment will be transferred to upon payment success.
    string|Account destination;
};

public type custom_field_text_param record {
    @constraint:String {maxLength: 255}
    string default_value?;
    int maximum_length?;
    int minimum_length?;
};

# 
public type Checkout_customer_balance_bank_transfer_payment_method_options record {
    Payment_method_options_customer_balance_eu_bank_account eu_bank_transfer?;
    # List of address types that should be returned in the financial_addresses response. If not specified, all valid types will be returned.
    # 
    # Permitted values include: `sort_code`, `zengin`, `iban`, or `spei`.
    ("aba"|"iban"|"sepa"|"sort_code"|"spei"|"swift"|"zengin")[] requested_address_types?;
    # The bank transfer type that this PaymentIntent is allowed to use for funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
    "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer"? 'type?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerSubscriptionsSubscriptionExposedIdQueriesExpandItemsString string;

# 
public type Recurring record {
    # Specifies a usage aggregation strategy for prices of `usage_type=metered`. Defaults to `sum`.
    "last_during_period"|"last_ever"|"max"|"sum"? aggregate_usage?;
    # The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.
    "day"|"month"|"week"|"year" interval;
    # The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.
    int interval_count;
    # The meter tracking the usage of a metered price
    string? meter?;
    # Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.
    "licensed"|"metered" usage_type;
};

public type sources_id_body record {|
    # The name of the person or business that owns the bank account.
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    # The type of entity that holds the account. This can be either `individual` or `company`.
    "company"|"individual" account_holder_type?;
    # City/District/Suburb/Town/Village.
    @constraint:String {maxLength: 5000}
    string address_city?;
    # Billing address country, if provided when creating card.
    @constraint:String {maxLength: 5000}
    string address_country?;
    # Address line 1 (Street address/PO Box/Company name).
    @constraint:String {maxLength: 5000}
    string address_line1?;
    # Address line 2 (Apartment/Suite/Unit/Building).
    @constraint:String {maxLength: 5000}
    string address_line2?;
    # State/County/Province/Region.
    @constraint:String {maxLength: 5000}
    string address_state?;
    # ZIP or postal code.
    @constraint:String {maxLength: 5000}
    string address_zip?;
    # Two digit number representing the card’s expiration month.
    @constraint:String {maxLength: 5000}
    string exp_month?;
    # Four digit number representing the card’s expiration year.
    @constraint:String {maxLength: 5000}
    string exp_year?;
    # Specifies which fields in the response should be expanded.
    sources_id_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Cardholder name.
    @constraint:String {maxLength: 5000}
    string name?;
    owner owner?;
|};

# 
public type Gelato_session_id_number_options record {
};

public type id_void_body record {|
    # Specifies which fields in the response should be expanded.
    id_void_bodyExpandItemsString[] expand?;
|};

# Represents the Queries record for the operation: GetTreasuryDebitReversalsDebitReversal
public type GetTreasuryDebitReversalsDebitReversalQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryDebitReversalsDebitReversalQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetSetupIntentsIntentQueriesExpandItemsString string;

# 
public type IssuingCardList record {
    Issuing\.card[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/cards`}
    string url;
};

public type Radar\.early_fraud_warning record {
    boolean actionable;
    string|Charge charge;
    int created;
    string fraud_type;
    string id;
    boolean livemode;
    "radar.early_fraud_warning" 'object;
    string|Payment_intent payment_intent?;
};

public type custom_field_param_1 record {
    custom_field_dropdown_param_1 dropdown?;
    @constraint:String {maxLength: 200}
    string 'key;
    custom_field_label_param label;
    custom_field_numeric_param_1 numeric?;
    boolean optional?;
    custom_field_text_param_1 text?;
    "dropdown"|"numeric"|"text" 'type;
};

public type Apps\.secret record {
    int created;
    boolean deleted?;
    int? expires_at?;
    string id;
    boolean livemode;
    string name;
    "apps.secret" 'object;
    string? payload?;
    Secret_service_resource_scope scope;
};

# 
public type Radar_review_resource_location record {
    # The city where the payment originated.
    string? city?;
    # Two-letter ISO code representing the country where the payment originated.
    string? country?;
    # The geographic latitude where the payment originated.
    decimal? latitude?;
    # The geographic longitude where the payment originated.
    decimal? longitude?;
    # The state/county/province/region where the payment originated.
    string? region?;
};

# Represents the Queries record for the operation: GetSubscriptionSchedules
public type GetSubscriptionSchedulesQueries record {
    # Only return subscription schedules that completed during the given date interval.
    completed_at completed_at?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSubscriptionSchedulesQueriesExpandItemsString[] expand?;
    # Only return subscription schedules that were created canceled the given date interval.
    canceled_at canceled_at?;
    # Only return subscription schedules that were created during the given date interval.
    created_38 created?;
    # Only return subscription schedules that have not started yet.
    boolean scheduled?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return subscription schedules that were released during the given date interval.
    released_at released_at?;
    # Only return subscription schedules for the given customer.
    @constraint:String {maxLength: 5000}
    string customer?;
};

public type Checkout\.session record {
    Payment_pages_checkout_session_after_expiration? after_expiration?;
    boolean? allow_promotion_codes?;
    int? amount_subtotal?;
    int? amount_total?;
    Payment_pages_checkout_session_automatic_tax automatic_tax;
    "auto"|"required"? billing_address_collection?;
    string? cancel_url?;
    string? client_reference_id?;
    string? client_secret?;
    Payment_pages_checkout_session_consent? consent?;
    Payment_pages_checkout_session_consent_collection? consent_collection?;
    int created;
    string? currency?;
    Payment_pages_checkout_session_currency_conversion? currency_conversion?;
    Payment_pages_checkout_session_custom_fields[] custom_fields;
    Payment_pages_checkout_session_custom_text custom_text;
    string|Customer|Deleted_customer? customer?;
    "always"|"if_required"? customer_creation?;
    Payment_pages_checkout_session_customer_details? customer_details?;
    string? customer_email?;
    int expires_at;
    string id;
    string|Invoice? invoice?;
    Payment_pages_checkout_session_invoice_creation? invoice_creation?;
    PaymentPagesCheckoutSessionListLineItems_1 line_items?;
    boolean livemode;
    "auto"|"bg"|"cs"|"da"|"de"|"el"|"en"|"en-GB"|"es"|"es-419"|"et"|"fi"|"fil"|"fr"|"fr-CA"|"hr"|"hu"|"id"|"it"|"ja"|"ko"|"lt"|"lv"|"ms"|"mt"|"nb"|"nl"|"pl"|"pt"|"pt-BR"|"ro"|"ru"|"sk"|"sl"|"sv"|"th"|"tr"|"vi"|"zh"|"zh-HK"|"zh-TW"? locale?;
    record {|string...;|}? metadata?;
    "payment"|"setup"|"subscription" mode;
    "checkout.session" 'object;
    string|Payment_intent? payment_intent?;
    string|Payment_link? payment_link?;
    "always"|"if_required"? payment_method_collection?;
    Payment_method_config_biz_payment_method_configuration_details? payment_method_configuration_details?;
    Checkout_session_payment_method_options? payment_method_options?;
    Checkout\\\\\\\.sessionPaymentmethodtypesItemsString[] payment_method_types;
    "no_payment_required"|"paid"|"unpaid" payment_status;
    Payment_pages_checkout_session_phone_number_collection phone_number_collection?;
    string? recovered_from?;
    "always"|"if_required"|"never" redirect_on_completion?;
    string return_url?;
    Payment_pages_checkout_session_saved_payment_method_options? saved_payment_method_options?;
    string|Setup_intent? setup_intent?;
    Payment_pages_checkout_session_shipping_address_collection? shipping_address_collection?;
    Payment_pages_checkout_session_shipping_cost? shipping_cost?;
    Shipping? shipping_details?;
    Payment_pages_checkout_session_shipping_option[] shipping_options;
    "complete"|"expired"|"open"? status?;
    "auto"|"book"|"donate"|"pay"? submit_type?;
    string|Subscription? subscription?;
    string? success_url?;
    Payment_pages_checkout_session_tax_id_collection tax_id_collection?;
    Payment_pages_checkout_session_total_details? total_details?;
    "embedded"|"hosted"? ui_mode?;
    string? url?;
};

# Represents the Queries record for the operation: GetFinancialConnectionsTransactionsTransaction
public type GetFinancialConnectionsTransactionsTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetFinancialConnectionsTransactionsTransactionQueriesExpandItemsString[] expand?;
};

public type id_return_body_1ExpandItemsString string;

# 
public type Source_code_verification_flow record {
    # The number of attempts remaining to authenticate the source object with a verification code.
    int attempts_remaining;
    # The status of the code verification, either `pending` (awaiting verification, `attempts_remaining` should be greater than 0), `succeeded` (successful verification) or `failed` (failed verification, cannot be verified anymore as `attempts_remaining` should be 0).
    @constraint:String {maxLength: 5000}
    string status;
};

# 
public type Payment_method_details_card_wallet_link record {
};

@constraint:String {maxLength: 5000}
public type GetPlansQueriesExpandItemsString string;

# 
public type SubscriptionsItemsSubscriptionItemList record {
    Subscription_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/subscription_items`}
    string url;
};

# Represents the Queries record for the operation: GetPaymentIntentsSearch
public type GetPaymentIntentsSearchQueries record {
    # Specifies which fields in the response should be expanded.
    GetPaymentIntentsSearchQueriesExpandItemsString[] expand?;
    # The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for payment intents](https://stripe.com/docs/search#query-fields-for-payment-intents).
    @constraint:String {maxLength: 5000}
    string query;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.
    @constraint:String {maxLength: 5000}
    string page?;
};

public type checkout_sessions_bodyExpandItemsString string;

public type controller_losses_specs record {
    "application"|"stripe" payments?;
};

# 
public type Payment_intent_payment_method_options_us_bank_account record {
    Linked_account_options_us_bank_account financial_connections?;
    Payment_method_options_us_bank_account_mandate_options mandate_options?;
    # Preferred transaction settlement speed
    "fastest"|"standard" preferred_settlement_speed?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

public type promotion_codes_promotion_code_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetAccountsAccountExternalAccountsQueriesExpandItemsString string;

public type invoice_finalize_body record {|
    # Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice. If `false`, the invoice's state doesn't automatically advance without an explicit action.
    boolean auto_advance?;
    # Specifies which fields in the response should be expanded.
    invoice_finalize_bodyExpandItemsString[] expand?;
|};

# A dispute occurs when a customer questions your charge with their card issuer.
# When this happens, you have the opportunity to respond to the dispute with
# evidence that shows that the charge is legitimate.
# 
# Related guide: [Disputes and fraud](https://stripe.com/docs/disputes)
public type Dispute record {
    # Disputed amount. Usually the amount of the charge, but it can differ (usually because of currency fluctuation or because only part of the order is disputed).
    int amount;
    # List of zero, one, or two balance transactions that show funds withdrawn and reinstated to your Stripe account as a result of this dispute.
    Balance_transaction[] balance_transactions;
    # ID of the charge that's disputed.
    string|Charge charge;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    Dispute_evidence evidence;
    Dispute_evidence_details evidence_details;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # If true, it's still possible to refund the disputed payment. After the payment has been fully refunded, no further funds are withdrawn from your Stripe account as a result of this dispute.
    boolean is_charge_refundable;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "dispute" 'object;
    # ID of the PaymentIntent that's disputed.
    string|Payment_intent? payment_intent?;
    Dispute_payment_method_details payment_method_details?;
    # Reason given by cardholder for dispute. Possible values are `bank_cannot_process`, `check_returned`, `credit_not_processed`, `customer_initiated`, `debit_not_authorized`, `duplicate`, `fraudulent`, `general`, `incorrect_account_details`, `insufficient_funds`, `product_not_received`, `product_unacceptable`, `subscription_canceled`, or `unrecognized`. Learn more about [dispute reasons](https://stripe.com/docs/disputes/categories).
    @constraint:String {maxLength: 5000}
    string reason;
    # Current status of dispute. Possible values are `warning_needs_response`, `warning_under_review`, `warning_closed`, `needs_response`, `under_review`, `won`, or `lost`.
    "lost"|"needs_response"|"under_review"|"warning_closed"|"warning_needs_response"|"warning_under_review"|"won" status;
};

@constraint:String {maxLength: 5000}
public type Person_requirementsPastdueItemsString string;

public type account_disconnect_body_1 record {|
    # Specifies which fields in the response should be expanded.
    account_disconnect_body_1ExpandItemsString[] expand?;
|};

public type intent_verify_microdeposits_bodyExpandItemsString string;

public type dispute_submit_body record {|
    # Specifies which fields in the response should be expanded.
    dispute_submit_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

public type id_succeed_bodyExpandItemsString string;

# Point in Time
public type Gelato_data_id_number_report_date record {
    # Numerical day between 1 and 31.
    int? day?;
    # Numerical month between 1 and 12.
    int? month?;
    # The four-digit year.
    int? year?;
};

public type subscription_item_create_params record {
    record {int usage_gte;}|"" billing_thresholds?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    record {|string...;|} metadata?;
    @constraint:String {maxLength: 5000}
    string price?;
    recurring_price_data price_data?;
    int quantity?;
    TaxratesItemsString[]|"" tax_rates?;
};

public type Checkout\\\\\\\.sessionPaymentmethodtypesItemsString string;

public type discounts_1 record {string coupon?; string discount?; string promotion_code?;}[]|"";

# 
public type Payment_method_details_wechat_pay record {
    # Uniquely identifies this particular WeChat Pay account. You can use this attribute to check whether two WeChat accounts are the same.
    string? fingerprint?;
    # Transaction ID of this particular WeChat Pay transaction.
    string? transaction_id?;
};

# A list of TransactionEntries that are part of this Transaction. This cannot be expanded in any list endpoints.
public type TreasuryTransactionsResourceTransactionEntryList_1 record {
    # Details about each object.
    Treasury\.transaction_entry[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/treasury/transaction_entries`}
    string url;
};

# 
public type Payment_links_resource_custom_fields_label record {
    # Custom text for the label, displayed to the customer. Up to 50 characters.
    string? custom?;
    # The type of the label.
    "custom" 'type;
};

public type payment_method_domains_body record {|
    # The domain name that this payment method domain object represents.
    @constraint:String {maxLength: 5000}
    string domain_name;
    # Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.
    boolean enabled?;
    # Specifies which fields in the response should be expanded.
    payment_method_domains_bodyExpandItemsString[] expand?;
|};

public type subscription_billing_cycle_anchor_1 "now"|"unchanged"|int;

# Represents the Queries record for the operation: GetProductsSearch
public type GetProductsSearchQueries record {
    # Specifies which fields in the response should be expanded.
    GetProductsSearchQueriesExpandItemsString[] expand?;
    # The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for products](https://stripe.com/docs/search#query-fields-for-products).
    @constraint:String {maxLength: 5000}
    string query;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.
    @constraint:String {maxLength: 5000}
    string page?;
};

# 
public type Treasury_inbound_transfers_resource_failure_details record {
    # Reason for the failure.
    "account_closed"|"account_frozen"|"bank_account_restricted"|"bank_ownership_changed"|"debit_not_authorized"|"incorrect_account_holder_address"|"incorrect_account_holder_name"|"incorrect_account_holder_tax_id"|"insufficient_funds"|"invalid_account_number"|"invalid_currency"|"no_account"|"other" code;
};

public type date_of_birth_specs record {
    int day;
    int month;
    int year;
};

# Clone an existing quote. The new quote will be created in `status=draft`. When using this parameter, you cannot specify any other parameters except for `expires_at`.
public type from_quote_params record {
    boolean is_revision?;
    @constraint:String {maxLength: 5000}
    string quote;
};

public type created_40 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type refunds_refund_body_1ExpandItemsString string;

# 
public type Payment_pages_checkout_session_custom_fields_label record {
    # Custom text for the label, displayed to the customer. Up to 50 characters.
    string? custom?;
    # The type of the label.
    "custom" 'type;
};

public type created_44 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_43 record {int gt?; int gte?; int lt?; int lte?;}|int;

@constraint:String {maxLength: 5000}
public type Account_capability_future_requirementsPendingverificationItemsString string;

# 
public type Payment_method_details_ideal record {
    # The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.
    "abn_amro"|"asn_bank"|"bunq"|"handelsbanken"|"ing"|"knab"|"moneyou"|"n26"|"nn"|"rabobank"|"regiobank"|"revolut"|"sns_bank"|"triodos_bank"|"van_lanschot"|"yoursafe"? bank?;
    # The Bank Identifier Code of the customer's bank.
    "ABNANL2A"|"ASNBNL21"|"BITSNL2A"|"BUNQNL2A"|"FVLBNL22"|"HANDNL2A"|"INGBNL2A"|"KNABNL2H"|"MOYONL21"|"NNBANL2G"|"NTSBDEB1"|"RABONL2U"|"RBRBNL21"|"REVOIE23"|"REVOLT21"|"SNSBNL2A"|"TRIONL2U"? bic?;
    # The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.
    string|Payment_method? generated_sepa_debit?;
    # The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.
    string|Mandate? generated_sepa_debit_mandate?;
    # Last four characters of the IBAN.
    string? iban_last4?;
    # Owner's verified full name. Values are verified or provided by iDEAL directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
};

public type created_42 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type EntitlementsResourceFeatureList record {
    Entitlements\.feature[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/entitlements/features`}
    string url;
};

public type created_41 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_46 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Issuing_cardholder_user_terms_acceptance record {
    # The Unix timestamp marking when the cardholder accepted the Authorized User Terms.
    int? date?;
    # The IP address from which the cardholder accepted the Authorized User Terms.
    string? ip?;
    # The user agent of the browser from which the cardholder accepted the Authorized User Terms.
    string? user_agent?;
};

# A payment link is a shareable URL that will take your customers to a hosted payment page. A payment link can be shared and used multiple times.
# 
# When a customer opens a payment link it will open a new [checkout session](https://stripe.com/docs/api/checkout/sessions) to render the payment page. You can use [checkout session events](https://stripe.com/docs/api/events/types#event_types-checkout.session.completed) to track payments through payment links.
# 
# Related guide: [Payment Links API](https://stripe.com/docs/payment-links)
public type Payment_link record {
    # Whether the payment link's `url` is active. If `false`, customers visiting the URL will be shown a page saying that the link has been deactivated.
    boolean active;
    Payment_links_resource_after_completion after_completion;
    # Whether user redeemable promotion codes are enabled.
    boolean allow_promotion_codes;
    # The ID of the Connect application that created the Payment Link.
    string|Application|Deleted_application? application?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account.
    int? application_fee_amount?;
    # This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account.
    decimal? application_fee_percent?;
    Payment_links_resource_automatic_tax automatic_tax;
    # Configuration for collecting the customer's billing address. Defaults to `auto`.
    "auto"|"required" billing_address_collection;
    # When set, provides configuration to gather active consent from customers.
    Payment_links_resource_consent_collection? consent_collection?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Collect additional information from your customer using custom fields. Up to 3 fields are supported.
    Payment_links_resource_custom_fields[] custom_fields;
    Payment_links_resource_custom_text custom_text;
    # Configuration for Customer creation during checkout.
    "always"|"if_required" customer_creation;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The custom message to be displayed to a customer when a payment link is no longer active.
    string? inactive_message?;
    # Configuration for creating invoice for payment mode payment links.
    Payment_links_resource_invoice_creation? invoice_creation?;
    PaymentLinksResourceListLineItems_1 line_items?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "payment_link" 'object;
    # The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.
    string|Account? on_behalf_of?;
    # Indicates the parameters to be passed to PaymentIntent creation during checkout.
    Payment_links_resource_payment_intent_data? payment_intent_data?;
    # Configuration for collecting a payment method during checkout. Defaults to `always`.
    "always"|"if_required" payment_method_collection;
    # The list of payment method types that customers can use. When `null`, Stripe will dynamically show relevant payment methods you've enabled in your [payment method settings](https://dashboard.stripe.com/settings/payment_methods).
    ("affirm"|"afterpay_clearpay"|"alipay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip")[]? payment_method_types?;
    Payment_links_resource_phone_number_collection phone_number_collection;
    # Settings that restrict the usage of a payment link.
    Payment_links_resource_restrictions? restrictions?;
    # Configuration for collecting the customer's shipping address.
    Payment_links_resource_shipping_address_collection? shipping_address_collection?;
    # The shipping rate options applied to the session.
    Payment_links_resource_shipping_option[] shipping_options;
    # Indicates the type of transaction being performed which customizes relevant text on the page, such as the submit button.
    "auto"|"book"|"donate"|"pay" submit_type;
    # When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.
    Payment_links_resource_subscription_data? subscription_data?;
    Payment_links_resource_tax_id_collection tax_id_collection;
    # The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to.
    Payment_links_resource_transfer_data? transfer_data?;
    # The public URL that can be shared with customers.
    @constraint:String {maxLength: 5000}
    string url;
};

public type created_45 record {int gt?; int gte?; int lt?; int lte?;}|int;

@constraint:String {maxLength: 5000}
public type GetAccountsAccountPersonsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetIssuingDisputes
public type GetIssuingDisputesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIssuingDisputesQueriesExpandItemsString[] expand?;
    # Only return Issuing disputes that were created during the given date interval.
    created_20 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Select the Issuing dispute for the given transaction.
    @constraint:String {maxLength: 5000}
    string 'transaction?;
    # Select Issuing disputes with the given status.
    "expired"|"lost"|"submitted"|"unsubmitted"|"won" status?;
};

# 
public type Portal_flows_retention record {
    # Configuration when `retention.type=coupon_offer`.
    Portal_flows_coupon_offer? coupon_offer?;
    # Type of retention strategy that will be used.
    "coupon_offer" 'type;
};

# Represents the Queries record for the operation: GetCustomersCustomerBalanceTransactions
public type GetCustomersCustomerBalanceTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerBalanceTransactionsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type account_persons_body record {|
    person_additional_tos_acceptances_specs additional_tos_acceptances?;
    legal_entity_and_kyc_address_specs_1 address?;
    japan_address_kana_specs_1 address_kana?;
    japan_address_kanji_specs_1 address_kanji?;
    # The person's date of birth.
    record {int day; int month; int year;}|"" dob?;
    person_documents_specs documents?;
    # The person's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    account_persons_bodyExpandItemsString[] expand?;
    # The person's first name.
    @constraint:String {maxLength: 5000}
    string first_name?;
    # The Kana variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    # The Kanji variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    # A list of alternate names or aliases that the person is known by.
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    # The person's gender (International regulations require either "male" or "female").
    string gender?;
    # The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number?;
    # The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    # The person's last name.
    @constraint:String {maxLength: 5000}
    string last_name?;
    # The Kana variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    # The Kanji variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    # The person's maiden name.
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or "XX" if unavailable.
    @constraint:String {maxLength: 5000}
    string nationality?;
    # A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.
    @constraint:String {maxLength: 5000}
    string person_token?;
    # The person's phone number.
    string phone?;
    # Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
    @constraint:String {maxLength: 5000}
    string political_exposure?;
    address_specs_1 registered_address?;
    relationship_specs relationship?;
    # The last four digits of the person's Social Security number (U.S. only).
    string ssn_last_4?;
    person_verification_specs_1 verification?;
|};

public type transfers_transfer_body record {|
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    transfers_transfer_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# Represents the Queries record for the operation: GetIssuingPersonalizationDesigns
public type GetIssuingPersonalizationDesignsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIssuingPersonalizationDesignsQueriesExpandItemsString[] expand?;
    # Only return personalization designs with the given preferences.
    preferences_list_param preferences?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return personalization designs with the given lookup keys.
    GetIssuingPersonalizationDesignsQueriesLookupkeysItemsString[] lookup_keys?;
    # Only return personalization designs with the given status.
    "active"|"inactive"|"rejected"|"review" status?;
};

# 
public type Line_items_tax_amount record {
    # Amount of tax applied for this rate.
    int amount;
    Tax_rate rate;
    # The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.
    "customer_exempt"|"not_collecting"|"not_subject_to_tax"|"not_supported"|"portion_product_exempt"|"portion_reduced_rated"|"portion_standard_rated"|"product_exempt"|"product_exempt_holiday"|"proportionally_rated"|"reduced_rated"|"reverse_charge"|"standard_rated"|"taxable_basis_reduced"|"zero_rated"? taxability_reason?;
    # The amount on which tax is calculated, in cents (or local equivalent).
    int? taxable_amount?;
};

# 
public type Treasury_outbound_payments_resource_outbound_payment_resource_end_user_details record {
    # IP address of the user initiating the OutboundPayment. Set if `present` is set to `true`. IP address collection is required for risk and compliance reasons. This will be used to help determine if the OutboundPayment is authorized or should be blocked.
    string? ip_address?;
    # `true` if the OutboundPayment creation request is being made on behalf of an end user by a platform. Otherwise, `false`.
    boolean present;
};

# Publicly sharable reference for the end beneficiary of carbon removal. Assumed to be the Stripe account if not set.
public type beneficiary_params record {
    @constraint:String {maxLength: 5000}
    string public_name;
};

# Initiating payment method details for the object.
public type source_params record {
    "us_bank_account" 'type;
    us_bank_account_source_params us_bank_account?;
};

public type Climate\.supplier record {
    string id;
    string info_url;
    boolean livemode;
    Climate_removals_location[] locations;
    string name;
    "climate.supplier" 'object;
    "biomass_carbon_removal_and_storage"|"direct_air_capture"|"enhanced_weathering" removal_pathway;
};

public type created_33 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_32 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_31 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_30 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_37 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_36 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_35 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type quotes_bodyExpandItemsString string;

public type created_34 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type id_reactivate_bodyExpandItemsString string;

public type created_39 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_38 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Issuing_transaction_fleet_fuel_price_data record {
    # Gross fuel amount that should equal Fuel Volume multipled by Fuel Unit Cost, inclusive of taxes.
    string? gross_amount_decimal?;
};

# 
public type Payment_method_details_swish record {
    # Uniquely identifies the payer's Swish account. You can use this attribute to check whether two Swish transactions were paid for by the same payer
    string? fingerprint?;
    # Payer bank reference number for the payment
    string? payment_reference?;
    # The last four digits of the Swish account phone number
    string? verified_phone_last4?;
};

@constraint:String {maxLength: 5000}
public type GetLinkedAccountsAccountOwnersQueriesExpandItemsString string;

# 
public type Quotes_resource_subscription_data_subscription_data record {
    # The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    string? description?;
    # When creating a new subscription, the date of which the subscription schedule will start after the quote is accepted. This date is ignored if it is in the past when the quote is accepted. Measured in seconds since the Unix epoch.
    int? effective_date?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will set metadata on the subscription or subscription schedule when the quote is accepted. If a recurring price is included in `line_items`, this field will be passed to the resulting subscription's `metadata` field. If `subscription_data.effective_date` is used, this field will be passed to the resulting subscription schedule's `phases.metadata` field. Unlike object-level metadata, this field is declarative. Updates will clear prior values.
    record {|string...;|}? metadata?;
    # Integer representing the number of trial period days before the customer is charged for the first time.
    int? trial_period_days?;
};

# Represents the Queries record for the operation: GetIdentityVerificationSessions
public type GetIdentityVerificationSessionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIdentityVerificationSessionsQueriesExpandItemsString[] expand?;
    # Only return VerificationSessions that were created during the given date interval.
    created_14 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A string to reference this user. This can be a customer ID, a session ID, or similar, and can be used to reconcile this verification with your internal systems.
    @constraint:String {maxLength: 5000}
    string client_reference_id?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return VerificationSessions with this status. [Learn more about the lifecycle of sessions](https://stripe.com/docs/identity/how-sessions-work).
    "canceled"|"processing"|"requires_input"|"verified" status?;
};

# 
public type ChargeList record {
    Charge[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/charges`}
    string url;
};

# Represents the Queries record for the operation: GetEventsId
public type GetEventsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetEventsIdQueriesExpandItemsString[] expand?;
};

# Options for customizing how the account functions within Stripe.
public type settings_specs_update record {
    bacs_debit_payments_specs bacs_debit_payments?;
    branding_settings_specs branding?;
    card_issuing_settings_specs card_issuing?;
    card_payments_settings_specs card_payments?;
    invoices_settings_specs invoices?;
    payments_settings_specs payments?;
    payout_settings_specs payouts?;
    treasury_settings_specs treasury?;
};

# Reviews can be used to supplement automated fraud detection with human expertise.
# 
# Learn more about [Radar](/radar) and reviewing payments
# [here](https://stripe.com/docs/radar/reviews).
public type Review record {
    # The ZIP or postal code of the card used, if applicable.
    string? billing_zip?;
    # The charge associated with this review.
    string|Charge? charge?;
    # The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.
    "approved"|"disputed"|"redacted"|"refunded"|"refunded_as_fraud"? closed_reason?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The IP address where the payment originated.
    string? ip_address?;
    # Information related to the location of the payment. Note that this information is an approximation and attempts to locate the nearest population center - it should not be used to determine a specific address.
    Radar_review_resource_location? ip_address_location?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "review" 'object;
    # If `true`, the review needs action.
    boolean open;
    # The reason the review was opened. One of `rule` or `manual`.
    "manual"|"rule" opened_reason;
    # The PaymentIntent ID associated with this review, if one exists.
    string|Payment_intent payment_intent?;
    # The reason the review is currently open or closed. One of `rule`, `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.
    @constraint:String {maxLength: 5000}
    string reason;
    # Information related to the browsing session of the user who initiated the payment.
    Radar_review_resource_session? session?;
};

# 
public type Issuing_personalization_design_rejection_reasons record {
    # The reason(s) the card logo was rejected.
    ("geographic_location"|"inappropriate"|"network_name"|"non_binary_image"|"non_fiat_currency"|"other"|"other_entity"|"promotional_material")[]? card_logo?;
    # The reason(s) the carrier text was rejected.
    ("geographic_location"|"inappropriate"|"network_name"|"non_fiat_currency"|"other"|"other_entity"|"promotional_material")[]? carrier_text?;
};

# Represents the Queries record for the operation: GetTransfers
public type GetTransfersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTransfersQueriesExpandItemsString[] expand?;
    # Only return transfers with the specified transfer group.
    @constraint:String {maxLength: 5000}
    string transfer_group?;
    # Only return transfers that were created during the given date interval.
    created_42 created?;
    # Only return transfers for the destination specified by this account ID.
    @constraint:String {maxLength: 5000}
    string destination?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type locations_location_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetIssuingDisputesDisputeQueriesExpandItemsString string;

# 
public type PaymentFlowsPaymentMethodList record {
    Payment_method[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/payment_methods`}
    string url;
};

# 
public type Payment_method_card_wallet_visa_checkout record {
    # Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? billing_address?;
    # Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? email?;
    # Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? name?;
    # Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? shipping_address?;
};

@constraint:String {maxLength: 5000}
public type GetBillingMetersIdQueriesExpandItemsString string;

public type line_item_update_params record {
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string id?;
    @constraint:String {maxLength: 5000}
    string price?;
    price_data price_data?;
    int quantity?;
    TaxratesItemsString[]|"" tax_rates?;
};

# 
public type Payment_links_resource_transfer_data record {
    # The amount in cents (or local equivalent) that will be transferred to the destination account. By default, the entire amount is transferred to the destination.
    int? amount?;
    # The connected account receiving the transfer.
    string|Account destination;
};

public type recurring_price_data record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    recurring_adhoc recurring;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type Source_type_klarna record {
    string background_image_url?;
    string? client_token?;
    string first_name?;
    string last_name?;
    string locale?;
    string logo_url?;
    string page_title?;
    string pay_later_asset_urls_descriptive?;
    string pay_later_asset_urls_standard?;
    string pay_later_name?;
    string pay_later_redirect_url?;
    string pay_now_asset_urls_descriptive?;
    string pay_now_asset_urls_standard?;
    string pay_now_name?;
    string pay_now_redirect_url?;
    string pay_over_time_asset_urls_descriptive?;
    string pay_over_time_asset_urls_standard?;
    string pay_over_time_name?;
    string pay_over_time_redirect_url?;
    string payment_method_categories?;
    string purchase_country?;
    string purchase_type?;
    string redirect_url?;
    int shipping_delay?;
    string shipping_first_name?;
    string shipping_last_name?;
};

public type Financial_connections\.account record {
    Bank_connections_resource_accountholder? account_holder?;
    Bank_connections_resource_balance? balance?;
    Bank_connections_resource_balance_refresh? balance_refresh?;
    "cash"|"credit"|"investment"|"other" category;
    int created;
    string? display_name?;
    string id;
    string institution_name;
    string? last4?;
    boolean livemode;
    "financial_connections.account" 'object;
    string|Financial_connections\.account_ownership? ownership?;
    Bank_connections_resource_ownership_refresh? ownership_refresh?;
    ("balances"|"ownership"|"payment_method"|"transactions")[]? permissions?;
    "active"|"disconnected"|"inactive" status;
    "checking"|"credit_card"|"line_of_credit"|"mortgage"|"other"|"savings" subcategory;
    ("transactions")[]? subscriptions?;
    ("link"|"us_bank_account")[] supported_payment_method_types;
    Bank_connections_resource_transaction_refresh? transaction_refresh?;
};

# 
public type Tax_product_resource_customer_details record {
    # The customer's postal address (for example, home or business location).
    Tax_product_resource_postal_address? address?;
    # The type of customer address provided.
    "billing"|"shipping"? address_source?;
    # The customer's IP address (IPv4 or IPv6).
    string? ip_address?;
    # The customer's tax IDs (for example, EU VAT numbers).
    Tax_product_resource_customer_details_resource_tax_id[] tax_ids;
    # The taxability override used for taxation.
    "customer_exempt"|"none"|"reverse_charge" taxability_override;
};

public type tax_rates_bodyExpandItemsString string;

public type payment_method_update_param record {
    boolean enabled;
};

public type shipping_rates_bodyExpandItemsString string;

# A subscription schedule allows you to create and manage the lifecycle of a subscription by predefining expected changes.
# 
# Related guide: [Subscription schedules](https://stripe.com/docs/billing/subscriptions/subscription-schedules)
public type Subscription_schedule record {
    # ID of the Connect Application that created the schedule.
    string|Application|Deleted_application? application?;
    # Time at which the subscription schedule was canceled. Measured in seconds since the Unix epoch.
    int? canceled_at?;
    # Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch.
    int? completed_at?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Object representing the start and end dates for the current phase of the subscription schedule, if it is `active`.
    Subscription_schedule_current_phase? current_phase?;
    # ID of the customer who owns the subscription schedule.
    string|Customer|Deleted_customer customer;
    Subscription_schedules_resource_default_settings default_settings;
    # Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running. `cancel` will end the subscription schedule and cancel the underlying subscription.
    "cancel"|"none"|"release"|"renew" end_behavior;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "subscription_schedule" 'object;
    # Configuration for the subscription schedule's phases.
    Subscription_schedule_phase_configuration[] phases;
    # Time at which the subscription schedule was released. Measured in seconds since the Unix epoch.
    int? released_at?;
    # ID of the subscription once managed by the subscription schedule (if it is released).
    string? released_subscription?;
    # The present status of the subscription schedule. Possible values are `not_started`, `active`, `completed`, `released`, and `canceled`. You can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).
    "active"|"canceled"|"completed"|"not_started"|"released" status;
    # ID of the subscription managed by the subscription schedule.
    string|Subscription? subscription?;
    # ID of the test clock this subscription schedule belongs to.
    string|Test_helpers\.test_clock? test_clock?;
};

public type invoice_void_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_void_bodyExpandItemsString[] expand?;
|};

# A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.
public type payment_intent_data_params_1 record {
    "automatic"|"automatic_async"|"manual" capture_method?;
    @constraint:String {maxLength: 1000}
    string description?;
    record {|string...;|} metadata?;
    "off_session"|"on_session" setup_future_usage?;
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    @constraint:String {maxLength: 5000}
    string transfer_group?;
};

# This hash contains whether the Payment Element is enabled and the features it supports.
public type Customer_session_resource_components_resource_payment_element record {
    # Whether the Payment Element is enabled.
    boolean enabled;
    # This hash defines whether the Payment Element supports certain features.
    Customer_session_resource_components_resource_payment_element_resource_features? features?;
};

@constraint:String {maxLength: 5000}
public type GetSubscriptionSchedulesScheduleQueriesExpandItemsString string;

public type Forwarding\.request record {
    int created;
    string id;
    boolean livemode;
    "forwarding.request" 'object;
    string payment_method;
    ("card_cvc"|"card_expiry"|"card_number"|"cardholder_name")[] replacements;
    Forwarded_request_context? request_context?;
    Forwarded_request_details? request_details?;
    Forwarded_response_details? response_details?;
    string? url?;
};

public type personalization_designs_personalization_design_body record {|
    # The file for the card logo, for use with physical bundles that support card logos. Must have a `purpose` value of `issuing_logo`.
    string|"" card_logo?;
    # Hash containing carrier text, for use with physical bundles that support carrier text.
    record {string|"" footer_body?; string|"" footer_title?; string|"" header_body?; string|"" header_title?;}|"" carrier_text?;
    # Specifies which fields in the response should be expanded.
    personalization_designs_personalization_design_bodyExpandItemsString[] expand?;
    # A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.
    string|"" lookup_key?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Friendly display name. Providing an empty string will set the field to null.
    string|"" name?;
    # The physical bundle object belonging to this personalization design.
    @constraint:String {maxLength: 5000}
    string physical_bundle?;
    preferences_param preferences?;
    # If set to true, will atomically remove the lookup key from the existing personalization design, and assign it to this personalization design.
    boolean transfer_lookup_key?;
|};

# 
public type Account_annual_revenue record {
    # A non-negative integer representing the amount in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).
    int? amount?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string? currency?;
    # The close-out date of the preceding fiscal year in ISO 8601 format. E.g. 2023-12-31 for the 31st of December, 2023.
    string? fiscal_year_end?;
};

# Represents the Queries record for the operation: GetTransfersIdReversals
public type GetTransfersIdReversalsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTransfersIdReversalsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# Shipping cost details to be used for the calculation.
public type shipping_cost_1 record {
    int amount?;
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
    "exclusive"|"inclusive" tax_behavior?;
    string tax_code?;
};

@constraint:String {maxLength: 5000}
public type Coupon_applies_toProductsItemsString string;

# 
public type BankConnectionsResourceOwnerList record {
    # Details about each object.
    Financial_connections\.account_owner[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetPricesSearchQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetSetupAttempts
public type GetSetupAttemptsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSetupAttemptsQueriesExpandItemsString[] expand?;
    # Only return SetupAttempts created by the SetupIntent specified by
    # this ID.
    @constraint:String {maxLength: 5000}
    string setup_intent;
    # A filter on the list, based on the object `created` field. The value
    # can be a string with an integer Unix timestamp or a
    # dictionary with a number of different query options.
    created_35 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type optional_fields_address record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

# Represents the Queries record for the operation: GetSetupIntentsIntent
public type GetSetupIntentsIntentQueries record {
    # Specifies which fields in the response should be expanded.
    GetSetupIntentsIntentQueriesExpandItemsString[] expand?;
    # The client secret of the SetupIntent. We require this string if you use a publishable key to retrieve the SetupIntent.
    @constraint:String {maxLength: 5000}
    string client_secret?;
};

@constraint:String {maxLength: 5000}
public type Gelato_document_reportFilesItemsString string;

@constraint:String {maxLength: 5000}
public type GetPricesPriceQueriesExpandItemsString string;

public type flow_data_after_completion_param record {
    after_completion_hosted_confirmation_param hosted_confirmation?;
    after_completion_redirect_param redirect?;
    "hosted_confirmation"|"portal_homepage"|"redirect" 'type;
};

# Represents the Queries record for the operation: GetCustomersSearch
public type GetCustomersSearchQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersSearchQueriesExpandItemsString[] expand?;
    # The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for customers](https://stripe.com/docs/search#query-fields-for-customers).
    @constraint:String {maxLength: 5000}
    string query;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.
    @constraint:String {maxLength: 5000}
    string page?;
};

# 
public type Treasury_financial_accounts_resource_status_details record {
    # Details related to the closure of this FinancialAccount
    Treasury_financial_accounts_resource_closed_status_details? closed?;
};

public type subscription_update_confirm_item_params record {
    @constraint:String {maxLength: 5000}
    string id;
    @constraint:String {maxLength: 5000}
    string price?;
    int quantity?;
};

@constraint:String {maxLength: 5000}
public type GetReportingReportRunsReportRunQueriesExpandItemsString string;

# Invoices are statements of amounts owed by a customer, and are either
# generated one-off, or generated periodically from a subscription.
# 
# They contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments
# that may be caused by subscription upgrades/downgrades (if necessary).
# 
# If your invoice is configured to be billed through automatic charges,
# Stripe automatically finalizes your invoice and attempts payment. Note
# that finalizing the invoice,
# [when automatic](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection), does
# not happen immediately as the invoice is created. Stripe waits
# until one hour after the last webhook was successfully sent (or the last
# webhook timed out after failing). If you (and the platforms you may have
# connected to) have no webhooks configured, Stripe waits one hour after
# creation to finalize the invoice.
# 
# If your invoice is configured to be billed by sending an email, then based on your
# [email settings](https://dashboard.stripe.com/account/billing/automatic),
# Stripe will email the invoice to your customer and await payment. These
# emails can contain a link to a hosted page to pay the invoice.
# 
# Stripe applies any customer credit on the account before determining the
# amount due for the invoice (i.e., the amount that will be actually
# charged). If the amount due for the invoice is less than Stripe's [minimum allowed charge
# per currency](/docs/currencies#minimum-and-maximum-charge-amounts), the
# invoice is automatically marked paid, and we add the amount due to the
# customer's credit balance which is applied to the next invoice.
# 
# More details on the customer's credit balance are
# [here](https://stripe.com/docs/billing/customer/balance).
# 
# Related guide: [Send invoices to customers](https://stripe.com/docs/billing/invoices/sending)
public type Invoice record {
    # The country of the business associated with this invoice, most often the business creating the invoice.
    string? account_country?;
    # The public name of the business associated with this invoice, most often the business creating the invoice.
    string? account_name?;
    # The account tax IDs associated with the invoice. Only editable when the invoice is a draft.
    (string|Tax_id|Deleted_tax_id)[]? account_tax_ids?;
    # Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.
    int amount_due;
    # The amount, in cents (or local equivalent), that was paid.
    int amount_paid;
    # The difference between amount_due and amount_paid, in cents (or local equivalent).
    int amount_remaining;
    # This is the sum of all the shipping amounts.
    int amount_shipping;
    # ID of the Connect Application that created the invoice.
    string|Application|Deleted_application? application?;
    # The fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.
    int? application_fee_amount?;
    # Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule. If a failure is returned with a non-retryable return code, the invoice can no longer be retried unless a new payment method is obtained. Retries will continue to be scheduled, and attempt_count will continue to increment, but retries will only be executed if a new payment method is obtained.
    int attempt_count;
    # Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.
    boolean attempted;
    # Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice. If `false`, the invoice's state doesn't automatically advance without an explicit action.
    boolean auto_advance?;
    Automatic_tax automatic_tax;
    # Indicates the reason why the invoice was created.
    # 
    # * `manual`: Unrelated to a subscription, for example, created via the invoice editor.
    # * `subscription`: No longer in use. Applies to subscriptions from before May 2018 where no distinction was made between updates, cycles, and thresholds.
    # * `subscription_create`: A new subscription was created.
    # * `subscription_cycle`: A subscription advanced into a new period.
    # * `subscription_threshold`: A subscription reached a billing threshold.
    # * `subscription_update`: A subscription was updated.
    # * `upcoming`: Reserved for simulated invoices, per the upcoming invoice endpoint.
    "automatic_pending_invoice_item_invoice"|"manual"|"quote_accept"|"subscription"|"subscription_create"|"subscription_cycle"|"subscription_threshold"|"subscription_update"|"upcoming"? billing_reason?;
    # ID of the latest charge generated for this invoice, if any.
    string|Charge? charge?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.
    "charge_automatically"|"send_invoice" collection_method;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Custom fields displayed on the invoice.
    Invoice_setting_custom_field[]? custom_fields?;
    # The ID of the customer who will be billed.
    string|Customer|Deleted_customer? customer?;
    # The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.
    Address? customer_address?;
    # The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.
    string? customer_email?;
    # The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.
    string? customer_name?;
    # The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.
    string? customer_phone?;
    # The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.
    Shipping? customer_shipping?;
    # The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.
    "exempt"|"none"|"reverse"? customer_tax_exempt?;
    # The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.
    Invoices_resource_invoice_tax_id[]? customer_tax_ids?;
    # ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.
    string|Payment_method? default_payment_method?;
    # ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.
    string|Bank_account|Card|Source? default_source?;
    # The tax rates applied to this invoice, if any.
    Tax_rate[] default_tax_rates;
    # An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.
    string? description?;
    # Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.
    Discount? discount?;
    # The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.
    (string|Discount|Deleted_discount)[] discounts;
    # The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.
    int? due_date?;
    # The date when this invoice is in effect. Same as `finalized_at` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the invoice PDF and receipt.
    int? effective_at?;
    # Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.
    int? ending_balance?;
    # Footer displayed on the invoice.
    string? footer?;
    # Details of the invoice that was cloned. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions) for more details.
    Invoices_resource_from_invoice? from_invoice?;
    # The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.
    string? hosted_invoice_url?;
    # Unique identifier for the object. This property is always present unless the invoice is an upcoming invoice. See [Retrieve an upcoming invoice](https://stripe.com/docs/api/invoices/upcoming) for more details.
    @constraint:String {maxLength: 5000}
    string id?;
    # The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.
    string? invoice_pdf?;
    Connect_account_reference issuer;
    # The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.
    Api_errors? last_finalization_error?;
    # The ID of the most recent non-draft revision of this invoice
    string|Invoice? latest_revision?;
    InvoiceLinesList_1 lines;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.
    int? next_payment_attempt?;
    # A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.
    string? number?;
    # String representing the object's type. Objects of the same type share the same value.
    "invoice" 'object;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    string|Account? on_behalf_of?;
    # Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.
    boolean paid;
    # Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.
    boolean paid_out_of_band;
    # The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.
    string|Payment_intent? payment_intent?;
    Invoices_payment_settings payment_settings;
    # End of the usage period during which invoice items were added to this invoice. This looks back one period for a subscription invoice. Use the [line item period](/api/invoices/line_item#invoice_line_item_object-period) to get the service period for each price.
    int period_end;
    # Start of the usage period during which invoice items were added to this invoice. This looks back one period for a subscription invoice. Use the [line item period](/api/invoices/line_item#invoice_line_item_object-period) to get the service period for each price.
    int period_start;
    # Total amount of all post-payment credit notes issued for this invoice.
    int post_payment_credit_notes_amount;
    # Total amount of all pre-payment credit notes issued for this invoice.
    int pre_payment_credit_notes_amount;
    # The quote this invoice was generated from.
    string|Quote? quote?;
    # This is the transaction number that appears on email receipts sent for this invoice.
    string? receipt_number?;
    # The rendering-related settings that control how the invoice is displayed on customer-facing surfaces such as PDF and Hosted Invoice Page.
    Invoices_resource_invoice_rendering? rendering?;
    # The details of the cost of shipping, including the ShippingRate applied on the invoice.
    Invoices_resource_shipping_cost? shipping_cost?;
    # Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.
    Shipping? shipping_details?;
    # Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance. For revision invoices, this also includes any customer balance that was applied to the original invoice.
    int starting_balance;
    # Extra information about an invoice for the customer's credit card statement.
    string? statement_descriptor?;
    # The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
    "draft"|"open"|"paid"|"uncollectible"|"void"? status?;
    Invoices_resource_status_transitions status_transitions;
    # The subscription that this invoice was prepared for, if any.
    string|Subscription? subscription?;
    # Details about the subscription that created this invoice.
    Subscription_details_data? subscription_details?;
    # Only set for upcoming invoices that preview prorations. The time used to calculate prorations.
    int subscription_proration_date?;
    # Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated
    int subtotal;
    # The integer amount in cents (or local equivalent) representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated
    int? subtotal_excluding_tax?;
    # The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.
    int? tax?;
    # ID of the test clock this invoice belongs to.
    string|Test_helpers\.test_clock? test_clock?;
    Invoice_threshold_reason threshold_reason?;
    # Total after discounts and taxes.
    int total;
    # The aggregate amounts calculated per discount across all line items.
    Discounts_resource_discount_amount[]? total_discount_amounts?;
    # The integer amount in cents (or local equivalent) representing the total amount of the invoice including all discounts but excluding all tax.
    int? total_excluding_tax?;
    # The aggregate amounts calculated per tax rate for all line items.
    Invoice_tax_amount[] total_tax_amounts;
    # The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.
    Invoice_transfer_data? transfer_data?;
    # Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.
    int? webhooks_delivered_at?;
};

public type person_documents_specs_1 record {
    documents_param_1 company_authorization?;
    documents_param_1 passport?;
    documents_param_1 visa?;
};

public type created_9 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_7 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_8 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type treasury_financial_accounts_bodySupportedcurrenciesItemsString string;

public type Deleted_radar\.value_list record {
    true deleted;
    string id;
    "radar.value_list" 'object;
};

# 
public type Issuing_transaction_lodging_data record {
    # The time of checking into the lodging.
    int? check_in_at?;
    # The number of nights stayed at the lodging.
    int? nights?;
};

public type subscription_cancel_at_1 int|"";

# Controls phone number collection settings for the session.
# 
# We recommend that you review your privacy policy and check with your legal contacts
# before using this feature. Learn more about [collecting phone numbers with Checkout](https://stripe.com/docs/payments/checkout/phone-numbers).
public type phone_number_collection_params record {
    boolean enabled;
};

public type payment_method_configurations_bodyExpandItemsString string;

public type treasury_outbound_payments_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryCreditReversalsCreditReversalQueriesExpandItemsString string;

# 
public type Gelato_provided_details record {
    # Email of user being verified
    @constraint:String {maxLength: 5000}
    string email?;
    # Phone number of user being verified
    @constraint:String {maxLength: 5000}
    string phone?;
};

# 
public type Payment_flows_private_payment_methods_card_details_api_resource_multicapture record {
    # Indicates whether or not multiple captures are supported.
    "available"|"unavailable" status;
};

# 
public type Balance_detail record {
    # Funds that are available for use.
    Balance_amount[] available;
};

# Customers with certain payments enabled have a cash balance, representing funds that were paid
# by the customer to a merchant, but have not yet been allocated to a payment. Cash Balance Transactions
# represent when funds are moved into or out of this balance. This includes funding by the customer, allocation
# to payments, and refunds to the customer.
public type Customer_cash_balance_transaction record {
    Customer_balance_resource_cash_balance_transaction_resource_adjusted_for_overdraft adjusted_for_overdraft?;
    Customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction applied_to_payment?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @constraint:String {maxLength: 5000}
    string currency;
    # The customer whose available cash balance changed as a result of this transaction.
    string|Customer customer;
    # The total available cash balance for the specified currency after this transaction was applied. Represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int ending_balance;
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction funded?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # The amount by which the cash balance changed, represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). A positive value represents funds being added to the cash balance, a negative value represents funds being removed from the cash balance.
    int net_amount;
    # String representing the object's type. Objects of the same type share the same value.
    "customer_cash_balance_transaction" 'object;
    Customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction refunded_from_payment?;
    Customer_balance_resource_cash_balance_transaction_resource_transferred_to_balance transferred_to_balance?;
    # The type of the cash balance transaction. New types may be added in future. See [Customer Balance](https://stripe.com/docs/payments/customer-balance#types) to learn more about these types.
    "adjusted_for_overdraft"|"applied_to_payment"|"funded"|"funding_reversed"|"refunded_from_payment"|"return_canceled"|"return_initiated"|"transferred_to_balance"|"unapplied_from_payment" 'type;
    Customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction unapplied_from_payment?;
};

@constraint:String {maxLength: 5000}
public type Payment_method_card_present_networksAvailableItemsString string;

# Subscriptions allow you to charge a customer on a recurring basis.
# 
# Related guide: [Creating subscriptions](https://stripe.com/docs/billing/subscriptions/creating)
public type Subscription record {
    # ID of the Connect Application that created the subscription.
    string|Application|Deleted_application? application?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account.
    decimal? application_fee_percent?;
    Subscription_automatic_tax automatic_tax;
    # The reference point that aligns future [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle) dates. It sets the day of week for `week` intervals, the day of month for `month` and `year` intervals, and the month of year for `year` intervals. The timestamp is in UTC format.
    int billing_cycle_anchor;
    # The fixed values used to calculate the `billing_cycle_anchor`.
    Subscriptions_resource_billing_cycle_anchor_config? billing_cycle_anchor_config?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period
    Subscription_billing_thresholds? billing_thresholds?;
    # A date in the future at which the subscription will automatically get canceled
    int? cancel_at?;
    # If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.
    boolean cancel_at_period_end;
    # If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.
    int? canceled_at?;
    # Details about why this subscription was cancelled
    Cancellation_details? cancellation_details?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.
    "charge_automatically"|"send_invoice" collection_method;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.
    int current_period_end;
    # Start of the current period that the subscription has been invoiced for.
    int current_period_start;
    # ID of the customer who owns the subscription.
    string|Customer|Deleted_customer customer;
    # Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.
    int? days_until_due?;
    # ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    string|Payment_method? default_payment_method?;
    # ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    string|Bank_account|Card|Source? default_source?;
    # The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.
    Tax_rate[]? default_tax_rates?;
    # The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    string? description?;
    # Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    Discount? discount?;
    # The discounts applied to the subscription. Subscription item discounts are applied before subscription discounts. Use `expand[]=discounts` to expand each discount.
    (string|Discount)[] discounts;
    # If the subscription has ended, the date the subscription ended.
    int? ended_at?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    Subscriptions_resource_subscription_invoice_settings invoice_settings;
    SubscriptionItemList items;
    # The most recent invoice this subscription has generated.
    string|Invoice? latest_invoice?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.
    int? next_pending_invoice_item_invoice?;
    # String representing the object's type. Objects of the same type share the same value.
    "subscription" 'object;
    # The account (if any) the charge was made on behalf of for charges associated with this subscription. See the Connect documentation for details.
    string|Account? on_behalf_of?;
    # If specified, payment collection for this subscription will be paused. Note that the subscription status will be unchanged and will not be updated to `paused`. Learn more about [pausing collection](/billing/subscriptions/pause-payment).
    Subscriptions_resource_pause_collection? pause_collection?;
    # Payment settings passed on to invoices created by the subscription.
    Subscriptions_resource_payment_settings? payment_settings?;
    # Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.
    Subscription_pending_invoice_item_interval? pending_invoice_item_interval?;
    # You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).
    string|Setup_intent? pending_setup_intent?;
    # If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates) that will be applied to the subscription once the `latest_invoice` has been paid.
    Subscriptions_resource_pending_update? pending_update?;
    # The schedule attached to the subscription
    string|Subscription_schedule? schedule?;
    # Date when the subscription was first created. The date might differ from the `created` date due to backdating.
    int start_date;
    # Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, `unpaid`, or `paused`. 
    # 
    # For `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this status can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` status. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal status, the open invoice will be voided and no further invoices will be generated. 
    # 
    # A subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. 
    # 
    # A subscription can only enter a `paused` status [when a trial ends without a payment method](/billing/subscriptions/trials#create-free-trials-without-payment). A `paused` subscription doesn't generate invoices and can be resumed after your customer adds their payment method. The `paused` status is different from [pausing collection](/billing/subscriptions/pause-payment), which still generates invoices and leaves the subscription's status unchanged. 
    # 
    # If subscription `collection_method=charge_automatically`, it becomes `past_due` when payment is required but cannot be paid (due to failed payment or awaiting additional user actions). Once Stripe has exhausted all payment retry attempts, the subscription will become `canceled` or `unpaid` (depending on your subscriptions settings). 
    # 
    # If subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
    "active"|"canceled"|"incomplete"|"incomplete_expired"|"past_due"|"paused"|"trialing"|"unpaid" status;
    # ID of the test clock this subscription belongs to.
    string|Test_helpers\.test_clock? test_clock?;
    # The account (if any) the subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.
    Subscription_transfer_data? transfer_data?;
    # If the subscription has a trial, the end of that trial.
    int? trial_end?;
    # Settings related to subscription trials.
    Subscriptions_trials_resource_trial_settings? trial_settings?;
    # If the subscription has a trial, the beginning of that trial.
    int? trial_start?;
};

# 
public type Us_bank_account_networks record {
    # The preferred network.
    string? preferred?;
    # All supported networks.
    ("ach"|"us_domestic_wire")[] supported;
};

# A phase item describes the price and quantity of a phase.
public type Subscription_schedule_configuration_item record {
    # Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period
    Subscription_item_billing_thresholds? billing_thresholds?;
    # The discounts applied to the subscription item. Subscription item discounts are applied before subscription discounts. Use `expand[]=discounts` to expand each discount.
    Discounts_resource_stackable_discount[] discounts;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an item. Metadata on this item will update the underlying subscription item's `metadata` when the phase is entered.
    record {|string...;|}? metadata?;
    # ID of the price to which the customer should be subscribed.
    string|Price|Deleted_price price;
    # Quantity of the plan to which the customer should be subscribed.
    int quantity?;
    # The tax rates which apply to this `phase_item`. When set, the `default_tax_rates` on the phase do not apply to this `phase_item`.
    Tax_rate[]? tax_rates?;
};

public type payment_methods_payment_method_bodyExpandItemsString string;

# 
public type IssuingDisputeList record {
    Issuing\.dispute[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/disputes`}
    string url;
};

public type line_items_update_params record {
    adjustable_quantity_params adjustable_quantity?;
    @constraint:String {maxLength: 5000}
    string id;
    int quantity?;
};

# 
public type Payment_method_boleto record {
    # Uniquely identifies the customer tax id (CNPJ or CPF)
    @constraint:String {maxLength: 5000}
    string tax_id;
};

public type value_lists_value_list_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryReceivedCreditsQueriesExpandItemsString string;

# 
public type Payment_intent_next_action_pix_display_qr_code record {
    # The raw data string used to generate QR code, it should be used together with QR code library.
    @constraint:String {maxLength: 5000}
    string data?;
    # The date (unix timestamp) when the PIX expires.
    int expires_at?;
    # The URL to the hosted pix instructions page, which allows customers to view the pix QR code.
    @constraint:String {maxLength: 5000}
    string hosted_instructions_url?;
    # The image_url_png string used to render png QR code
    @constraint:String {maxLength: 5000}
    string image_url_png?;
    # The image_url_svg string used to render svg QR code
    @constraint:String {maxLength: 5000}
    string image_url_svg?;
};

# 
public type Quotes_resource_transfer_data record {
    # The amount in cents (or local equivalent) that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.
    int? amount?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the destination account. By default, the entire amount will be transferred to the destination.
    decimal? amount_percent?;
    # The account where funds from the payment will be transferred to upon payment success.
    string|Account destination;
};

# 
public type Payment_intent_payment_method_options_mandate_options_sepa_debit record {
};

public type created_1 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_2 record {int gt?; int gte?; int lt?; int lte?;}|int;

# Represents the Queries record for the operation: GetAccountsAccountBankAccountsId
public type GetAccountsAccountBankAccountsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountBankAccountsIdQueriesExpandItemsString[] expand?;
};

public type created_5 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Line_items_discount_amount record {
    # The amount discounted.
    int amount;
    Discount discount;
};

public type created_6 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_links_resource_after_completion record {
    Payment_links_resource_completion_behavior_confirmation_page hosted_confirmation?;
    Payment_links_resource_completion_behavior_redirect redirect?;
    # The specified behavior after the purchase is complete.
    "hosted_confirmation"|"redirect" 'type;
};

public type receipt_specs record {
    @constraint:String {maxLength: 26}
    string description?;
    string quantity?;
    int total?;
    int unit_cost?;
};

# Represents the Queries record for the operation: GetCreditNotes
public type GetCreditNotesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCreditNotesQueriesExpandItemsString[] expand?;
    # Only return credit notes that were created during the given date interval.
    created_7 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return credit notes for the invoice specified by this invoice ID.
    @constraint:String {maxLength: 5000}
    string invoice?;
    # Only return credit notes for the customer specified by this customer ID.
    @constraint:String {maxLength: 5000}
    string customer?;
};

public type created_3 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_4 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Account_dashboard_settings record {
    # The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts.
    string? display_name?;
    # The timezone used in the Stripe Dashboard for this account. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).
    string? timezone?;
};

# The parameters that you can use to automatically create a transfer after the payment
# is captured. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
public type transfer_data_update_params_1 record {
    int amount?;
};

# 
public type Deleted_account record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "account" 'object;
};

# Represents the Queries record for the operation: GetEntitlementsFeatures
public type GetEntitlementsFeaturesQueries record {
    # If set, filter results to only include features with the given archive status.
    boolean archived?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetEntitlementsFeaturesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # If set, filter results to only include features with the given lookup_key.
    @constraint:String {maxLength: 5000}
    string lookup_key?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# The parameters used to automatically create a transfer after the payment is captured.
# Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
public type transfer_data_update_params_2 record {
    int amount?;
};

# Information for the account this token represents.
public type connect_js_account_token_specs record {
    "company"|"government_entity"|"individual"|"non_profit" business_type?;
    connect_js_account_token_company_specs company?;
    individual_specs_1 individual?;
    boolean tos_shown_and_accepted?;
};

# 
public type Issuing_authorization_fleet_tax_data record {
    # Amount of state or provincial Sales Tax included in the transaction amount. `null` if not reported by merchant or not subject to tax.
    string? local_amount_decimal?;
    # Amount of national Sales Tax or VAT included in the transaction amount. `null` if not reported by merchant or not subject to tax.
    string? national_amount_decimal?;
};

public type people_person_body record {|
    person_additional_tos_acceptances_specs additional_tos_acceptances?;
    legal_entity_and_kyc_address_specs_1 address?;
    japan_address_kana_specs_1 address_kana?;
    japan_address_kanji_specs_1 address_kanji?;
    # The person's date of birth.
    record {int day; int month; int year;}|"" dob?;
    person_documents_specs documents?;
    # The person's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    people_person_bodyExpandItemsString[] expand?;
    # The person's first name.
    @constraint:String {maxLength: 5000}
    string first_name?;
    # The Kana variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    # The Kanji variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    # A list of alternate names or aliases that the person is known by.
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    # The person's gender (International regulations require either "male" or "female").
    string gender?;
    # The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number?;
    # The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    # The person's last name.
    @constraint:String {maxLength: 5000}
    string last_name?;
    # The Kana variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    # The Kanji variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    # The person's maiden name.
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or "XX" if unavailable.
    @constraint:String {maxLength: 5000}
    string nationality?;
    # A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.
    @constraint:String {maxLength: 5000}
    string person_token?;
    # The person's phone number.
    string phone?;
    # Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
    @constraint:String {maxLength: 5000}
    string political_exposure?;
    address_specs_1 registered_address?;
    relationship_specs relationship?;
    # The last four digits of the person's Social Security number (U.S. only).
    string ssn_last_4?;
    person_verification_specs_1 verification?;
|};

# 
public type Payment_method_details_ach_debit record {
    # Type of entity that holds the account. This can be either `individual` or `company`.
    "company"|"individual"? account_holder_type?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Two-letter ISO code representing the country the bank account is located in.
    string? country?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # Routing transit number of the bank account.
    string? routing_number?;
};

# 
public type Usage_record_summary record {
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The invoice in which this usage period has been billed for.
    string? invoice?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "usage_record_summary" 'object;
    Period period;
    # The ID of the subscription item this summary is describing.
    @constraint:String {maxLength: 5000}
    string subscription_item;
    # The total usage within this usage period.
    int total_usage;
};

public type payments_settings_specs record {
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    @constraint:String {maxLength: 22}
    string statement_descriptor_kana?;
    @constraint:String {maxLength: 22}
    string statement_descriptor_kanji?;
};

public type documents_param_1 record {
    (string|"")[] files?;
};

public type meters_id_body record {|
    # The meter's name.
    @constraint:String {maxLength: 250}
    string display_name?;
    # Specifies which fields in the response should be expanded.
    meters_id_bodyExpandItemsString[] expand?;
|};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction record {
    # The [Refund](https://stripe.com/docs/api/refunds/object) that moved these funds into the customer's cash balance.
    string|Refund refund;
};

public type topups_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetCheckoutSessionsSessionLineItems
public type GetCheckoutSessionsSessionLineItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCheckoutSessionsSessionLineItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type outbound_transfer_return_body record {|
    # Specifies which fields in the response should be expanded.
    outbound_transfer_return_bodyExpandItemsString[] expand?;
    returned_details_params_1 returned_details?;
|};

# Configuration overrides
public type refund_payment_config record {
    boolean enable_customer_cancellation?;
};

# 
public type TreasuryFinancialAccountsResourceFinancialAccountList record {
    Treasury\.financial_account[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/treasury/financial_accounts`}
    string url;
};

# An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.
public type transfer_data_specs record {
    int amount?;
    @constraint:String {maxLength: 5000}
    string destination;
};

public type verification_document_specs record {
    @constraint:String {maxLength: 500}
    string back?;
    @constraint:String {maxLength: 500}
    string front?;
};

@constraint:String {maxLength: 5000}
public type GetProductsQueriesExpandItemsString string;

public type transacted_at record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_22 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_21 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_20 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_26 record {int gt?; int gte?; int lt?; int lte?;}|int;

@constraint:String {maxLength: 5000}
public type GetEntitlementsActiveEntitlementsIdQueriesExpandItemsString string;

public type created_25 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type IssuingNetworkTokenList record {
    Issuing\.token[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type ClimateRemovalsSuppliersList record {
    Climate\.supplier[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/climate/suppliers`}
    string url;
};

public type created_24 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_23 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_method_options_customer_balance_bank_transfer record {
    Payment_method_options_customer_balance_eu_bank_account eu_bank_transfer?;
    # List of address types that should be returned in the financial_addresses response. If not specified, all valid types will be returned.
    # 
    # Permitted values include: `sort_code`, `zengin`, `iban`, or `spei`.
    ("aba"|"iban"|"sepa"|"sort_code"|"spei"|"swift"|"zengin")[] requested_address_types?;
    # The bank transfer type that this PaymentIntent is allowed to use for funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
    "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer"? 'type?;
};

public type created_29 record {int gt?; int gte?; int lt?; int lte?;}|int;

@constraint:String {maxLength: 5000}
public type External_account_requirementsCurrentlydueItemsString string;

public type created_28 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_27 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_pages_checkout_session_custom_fields_numeric record {
    # The value that will pre-fill the field on the payment page.
    string? default_value?;
    # The maximum character length constraint for the customer's input.
    int? maximum_length?;
    # The minimum character length requirement for the customer's input.
    int? minimum_length?;
    # The value entered by the customer, containing only digits.
    string? value?;
};

@constraint:String {maxLength: 5000}
public type GetPaymentMethodConfigurationsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetChargesChargeQueriesExpandItemsString string;

# The tax collected or refunded, by line item.
public type TaxProductResourceTaxTransactionLineItemList_1 record {
    # Details about each object.
    Tax\.transaction_line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/tax/transactions/[^/]+/line_items`}
    string url;
};

# 
public type Fee record {
    # Amount of the fee, in cents.
    int amount;
    # ID of the Connect application that earned the fee.
    string? application?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Type of the fee, one of: `application_fee`, `payment_method_passthrough_fee`, `stripe_fee` or `tax`.
    @constraint:String {maxLength: 5000}
    string 'type;
};

public type Billing\.meter_event_summary record {
    decimal aggregated_value;
    int end_time;
    string id;
    boolean livemode;
    string meter;
    "billing.meter_event_summary" 'object;
    int start_time;
};

# 
public type Payment_pages_checkout_session_currency_conversion record {
    # Total of all items in source currency before discounts or taxes are applied.
    int amount_subtotal;
    # Total of all items in source currency after discounts and taxes are applied.
    int amount_total;
    # Exchange rate used to convert source currency amounts to customer currency amounts
    string fx_rate;
    # Creation currency of the CheckoutSession before localization
    @constraint:String {maxLength: 5000}
    string source_currency;
};

public type address_validation_param record {
    "disabled"|"normalization_only"|"validation_and_normalization" mode;
};

# Iban Records contain E.U. bank account details per the SEPA format.
public type Funding_instructions_bank_transfer_iban_record record {
    # The name of the person or business that owns the bank account
    @constraint:String {maxLength: 5000}
    string account_holder_name;
    # The BIC/SWIFT code of the account.
    @constraint:String {maxLength: 5000}
    string bic;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country;
    # The IBAN of the account.
    @constraint:String {maxLength: 5000}
    string iban;
};

# Represents the Queries record for the operation: GetTopupsTopup
public type GetTopupsTopupQueries record {
    # Specifies which fields in the response should be expanded.
    GetTopupsTopupQueriesExpandItemsString[] expand?;
};

public type outbound_transfer_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    outbound_transfer_cancel_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_method_options_bancontact record {
    # Preferred language of the Bancontact authorization page that the customer is redirected to.
    "de"|"en"|"fr"|"nl" preferred_language;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# 
public type Checkout_acss_debit_payment_method_options record {
    # Currency supported by the bank account. Returned when the Session is in `setup` mode.
    "cad"|"usd" currency?;
    Checkout_acss_debit_mandate_options mandate_options?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# 
public type Account_monthly_estimated_revenue record {
    # A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
};

public type created_11 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_10 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type test_clock_advance_bodyExpandItemsString string;

public type outbound_payments_id_body record {|
    # Specifies which fields in the response should be expanded.
    outbound_payments_id_bodyExpandItemsString[] expand?;
    tracking_details_params tracking_details;
|};

# An Add Invoice Item describes the prices and quantities that will be added as pending invoice items when entering a phase.
public type Subscription_schedule_add_invoice_item record {
    # The stackable discounts that will be applied to the item.
    Discounts_resource_stackable_discount[] discounts;
    # ID of the price used to generate the invoice item.
    string|Price|Deleted_price price;
    # The quantity of the invoice item.
    int? quantity?;
    # The tax rates which apply to the item. When set, the `default_tax_rates` do not apply to this item.
    Tax_rate[]? tax_rates?;
};

public type created_15 record {int gt?; int gte?; int lt?; int lte?;}|int;

# Represents the Queries record for the operation: GetApplicationFeesFeeRefundsId
public type GetApplicationFeesFeeRefundsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetApplicationFeesFeeRefundsIdQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_transaction_fleet_tax_data record {
    # Amount of state or provincial Sales Tax included in the transaction amount. Null if not reported by merchant or not subject to tax.
    string? local_amount_decimal?;
    # Amount of national Sales Tax or VAT included in the transaction amount. Null if not reported by merchant or not subject to tax.
    string? national_amount_decimal?;
};

public type created_14 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type Source_type_multibanco record {
    string? entity?;
    string? reference?;
    string? refund_account_holder_address_city?;
    string? refund_account_holder_address_country?;
    string? refund_account_holder_address_line1?;
    string? refund_account_holder_address_line2?;
    string? refund_account_holder_address_postal_code?;
    string? refund_account_holder_address_state?;
    string? refund_account_holder_name?;
    string? refund_iban?;
};

# 
public type Setup_attempt_payment_method_details_revolut_pay record {
};

public type created_13 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_12 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_19 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_18 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_17 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_16 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_method_konbini record {
};

public type charges_charge_bodyExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_boleto record {
};

public type radar_options_with_hidden_options_1 record {
    @constraint:String {maxLength: 5000}
    string session?;
};

# Options to configure Radar. Learn more about [Radar Sessions](https://stripe.com/docs/radar/radar-session).
public type radar_options_with_hidden_options_2 record {
    @constraint:String {maxLength: 5000}
    string session?;
};

# 
public type Tax_product_resource_tax_rate_details record {
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    string? country?;
    # The tax rate percentage as a string. For example, 8.5% is represented as `"8.5"`.
    @constraint:String {maxLength: 5000}
    string percentage_decimal;
    # State, county, province, or region.
    string? state?;
    # The tax type, such as `vat` or `sales_tax`.
    "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat"? tax_type?;
};

# 
public type Account_requirements_error record {
    # The code for the type of error.
    "invalid_address_city_state_postal_code"|"invalid_address_highway_contract_box"|"invalid_address_private_mailbox"|"invalid_business_profile_name"|"invalid_business_profile_name_denylisted"|"invalid_company_name_denylisted"|"invalid_dob_age_over_maximum"|"invalid_dob_age_under_18"|"invalid_dob_age_under_minimum"|"invalid_product_description_length"|"invalid_product_description_url_match"|"invalid_representative_country"|"invalid_statement_descriptor_business_mismatch"|"invalid_statement_descriptor_denylisted"|"invalid_statement_descriptor_length"|"invalid_statement_descriptor_prefix_denylisted"|"invalid_statement_descriptor_prefix_mismatch"|"invalid_street_address"|"invalid_tax_id"|"invalid_tax_id_format"|"invalid_tos_acceptance"|"invalid_url_denylisted"|"invalid_url_format"|"invalid_url_web_presence_detected"|"invalid_url_website_business_information_mismatch"|"invalid_url_website_empty"|"invalid_url_website_inaccessible"|"invalid_url_website_inaccessible_geoblocked"|"invalid_url_website_inaccessible_password_protected"|"invalid_url_website_incomplete"|"invalid_url_website_incomplete_cancellation_policy"|"invalid_url_website_incomplete_customer_service_details"|"invalid_url_website_incomplete_legal_restrictions"|"invalid_url_website_incomplete_refund_policy"|"invalid_url_website_incomplete_return_policy"|"invalid_url_website_incomplete_terms_and_conditions"|"invalid_url_website_incomplete_under_construction"|"invalid_url_website_other"|"invalid_value_other"|"verification_directors_mismatch"|"verification_document_address_mismatch"|"verification_document_address_missing"|"verification_document_corrupt"|"verification_document_country_not_supported"|"verification_document_directors_mismatch"|"verification_document_dob_mismatch"|"verification_document_duplicate_type"|"verification_document_expired"|"verification_document_failed_copy"|"verification_document_failed_greyscale"|"verification_document_failed_other"|"verification_document_failed_test_mode"|"verification_document_fraudulent"|"verification_document_id_number_mismatch"|"verification_document_id_number_missing"|"verification_document_incomplete"|"verification_document_invalid"|"verification_document_issue_or_expiry_date_missing"|"verification_document_manipulated"|"verification_document_missing_back"|"verification_document_missing_front"|"verification_document_name_mismatch"|"verification_document_name_missing"|"verification_document_nationality_mismatch"|"verification_document_not_readable"|"verification_document_not_signed"|"verification_document_not_uploaded"|"verification_document_photo_mismatch"|"verification_document_too_large"|"verification_document_type_not_supported"|"verification_extraneous_directors"|"verification_failed_address_match"|"verification_failed_business_iec_number"|"verification_failed_document_match"|"verification_failed_id_number_match"|"verification_failed_keyed_identity"|"verification_failed_keyed_match"|"verification_failed_name_match"|"verification_failed_other"|"verification_failed_representative_authority"|"verification_failed_residential_address"|"verification_failed_tax_id_match"|"verification_failed_tax_id_not_issued"|"verification_missing_directors"|"verification_missing_executives"|"verification_missing_owners"|"verification_requires_additional_memorandum_of_associations"|"verification_requires_additional_proof_of_registration" code;
    # An informative message that indicates the error type and provides additional details about the error.
    @constraint:String {maxLength: 5000}
    string reason;
    # The specific user onboarding requirement field (in the requirements hash) that needs to be resolved.
    @constraint:String {maxLength: 5000}
    string requirement;
};

public type apple_pay_domains_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetPaymentMethodConfigurations
public type GetPaymentMethodConfigurationsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodConfigurationsQueriesExpandItemsString[] expand?;
    # The Connect application to filter by.
    application application?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Payment_method_options_us_bank_account_mandate_options record {
    # Mandate collection method
    "paper" collection_method?;
};

# 
public type Transform_usage record {
    # Divide usage by this number.
    int divide_by;
    # After division, either round the result `up` or `down`.
    "down"|"up" round;
};

public type network_options_param record {
    cartes_bancaires_network_options_param cartes_bancaires?;
};

# A hash containing directions for what this Coupon will apply discounts to.
public type applies_to_params record {
    applies_to_paramsProductsItemsString[] products?;
};

# 
public type DisputeList record {
    Dispute[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/disputes`}
    string url;
};

public type arrival_date record {int gt?; int gte?; int lt?; int lte?;}|int;

@constraint:String {maxLength: 5000}
public type GetChargesChargeRefundsQueriesExpandItemsString string;

public type coupons_coupon_bodyExpandItemsString string;

# 
public type Payment_method_options_card_installments record {
    # Installment plans that may be selected for this PaymentIntent.
    Payment_method_details_card_installments_plan[]? available_plans?;
    # Whether Installments are enabled for this PaymentIntent.
    boolean enabled;
    # Installment plan selected for this PaymentIntent.
    Payment_method_details_card_installments_plan? plan?;
};

public type credit_notes_id_body record {|
    # Specifies which fields in the response should be expanded.
    credit_notes_id_bodyExpandItemsString[] expand?;
    # Credit note memo.
    @constraint:String {maxLength: 5000}
    string memo?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

public type created record {int gt?; int gte?; int lt?; int lte?;}|int;

@constraint:String {maxLength: 5000}
public type GetProductsProductFeaturesQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetForwardingRequestsQueriesExpandItemsString string;

# 
public type Account_future_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on its enablement state prior to transitioning.
    int? current_deadline?;
    # Fields that need to be collected to keep the account enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.
    Account_future_requirementsCurrentlydueItemsString[]? currently_due?;
    # This is typed as a string for consistency with `requirements.disabled_reason`.
    string? disabled_reason?;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[]? errors?;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.
    Account_future_requirementsEventuallydueItemsString[]? eventually_due?;
    # Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.
    Account_future_requirementsPastdueItemsString[]? past_due?;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`. Fields might appear in `eventually_due` or `currently_due` and in `pending_verification` if verification fails but another verification is still pending.
    Account_future_requirementsPendingverificationItemsString[]? pending_verification?;
};

public type japan_address_kana_specs record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
    @constraint:String {maxLength: 5000}
    string town?;
};

# This hash contains whether the buy button is enabled.
public type Customer_session_resource_components_resource_buy_button record {
    # Whether the buy button is enabled.
    boolean enabled;
};

@constraint:String {maxLength: 5000}
public type Issuing_cardholder_authorization_controlsAllowedmerchantcountriesItemsString string;

# Represents the Queries record for the operation: GetTestHelpersTestClocks
public type GetTestHelpersTestClocksQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTestHelpersTestClocksQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# The customer's tax IDs.
public type TaxIDsList_1 record {
    # Details about each object.
    Tax_id[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# PaymentMethod objects represent your customer's payment instruments.
# You can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to
# Customer objects to store instrument details for future payments.
# 
# Related guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).
public type Payment_method record {
    Payment_method_acss_debit acss_debit?;
    Payment_method_affirm affirm?;
    Payment_method_afterpay_clearpay afterpay_clearpay?;
    Payment_flows_private_payment_methods_alipay alipay?;
    # This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to “unspecified”.
    "always"|"limited"|"unspecified" allow_redisplay?;
    Payment_method_amazon_pay amazon_pay?;
    Payment_method_au_becs_debit au_becs_debit?;
    Payment_method_bacs_debit bacs_debit?;
    Payment_method_bancontact bancontact?;
    Billing_details billing_details;
    Payment_method_blik blik?;
    Payment_method_boleto boleto?;
    Payment_method_card card?;
    Payment_method_card_present card_present?;
    Payment_method_cashapp cashapp?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.
    string|Customer? customer?;
    Payment_method_customer_balance customer_balance?;
    Payment_method_eps eps?;
    Payment_method_fpx fpx?;
    Payment_method_giropay giropay?;
    Payment_method_grabpay grabpay?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    Payment_method_ideal ideal?;
    Payment_method_interac_present interac_present?;
    Payment_method_klarna klarna?;
    Payment_method_konbini konbini?;
    Payment_method_link link?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    Payment_method_mobilepay mobilepay?;
    Payment_method_multibanco multibanco?;
    # String representing the object's type. Objects of the same type share the same value.
    "payment_method" 'object;
    Payment_method_oxxo oxxo?;
    Payment_method_p24 p24?;
    Payment_method_paynow paynow?;
    Payment_method_paypal paypal?;
    Payment_method_pix pix?;
    Payment_method_promptpay promptpay?;
    Radar_radar_options radar_options?;
    Payment_method_revolut_pay revolut_pay?;
    Payment_method_sepa_debit sepa_debit?;
    Payment_method_sofort sofort?;
    Payment_method_swish swish?;
    Payment_method_twint twint?;
    # The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"card_present"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"interac_present"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type;
    Payment_method_us_bank_account us_bank_account?;
    Payment_method_wechat_pay wechat_pay?;
    Payment_method_zip zip?;
};

public type meters_id_bodyExpandItemsString string;

public type fleet_reported_breakdown_non_fuel_specs record {
    string gross_amount_decimal?;
};

# Details on the account's acceptance of the [Stripe Services Agreement](/connect/updating-accounts#tos-acceptance). This property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts. This property defaults to a `full` service agreement when empty.
public type tos_acceptance_specs record {
    int date?;
    string ip?;
    @constraint:String {maxLength: 5000}
    string service_agreement?;
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

public type mandate_offline_acceptance_params record {
    string contact_email;
};

public type Issuing\.card record {
    string brand;
    "design_rejected"|"lost"|"stolen"? cancellation_reason?;
    Issuing\.cardholder cardholder;
    int created;
    string currency;
    string cvc?;
    int exp_month;
    int exp_year;
    string? financial_account?;
    string id;
    string last4;
    boolean livemode;
    record {|string...;|} metadata;
    string number?;
    "issuing.card" 'object;
    string|Issuing\.personalization_design? personalization_design?;
    string|Issuing\.card? replaced_by?;
    string|Issuing\.card? replacement_for?;
    "damaged"|"expired"|"lost"|"stolen"? replacement_reason?;
    Issuing_card_shipping? shipping?;
    Issuing_card_authorization_controls spending_controls;
    "active"|"canceled"|"inactive" status;
    "physical"|"virtual" 'type;
    Issuing_card_wallets? wallets?;
};

# Represents the Queries record for the operation: GetFinancialConnectionsAccounts
public type GetFinancialConnectionsAccountsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetFinancialConnectionsAccountsQueriesExpandItemsString[] expand?;
    # If present, only return accounts that belong to the specified account holder. `account_holder[customer]` and `account_holder[account]` are mutually exclusive.
    accountholder_params account_holder?;
    # If present, only return accounts that were collected as part of the given session.
    @constraint:String {maxLength: 5000}
    string session?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type tax_rates_tax_rate_body record {|
    # Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.
    boolean active?;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country?;
    # An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.
    @constraint:String {maxLength: 5000}
    string description?;
    # The display name of the tax rate, which will be shown to users.
    @constraint:String {maxLength: 50}
    string display_name?;
    # Specifies which fields in the response should be expanded.
    tax_rates_tax_rate_bodyExpandItemsString[] expand?;
    # The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.
    @constraint:String {maxLength: 50}
    string jurisdiction?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # [ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, "NY" for New York, United States.
    @constraint:String {maxLength: 2}
    string state?;
    # The high-level tax type, such as `vat` or `sales_tax`.
    "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;
|};

# Represents the Queries record for the operation: GetAccountsAccountExternalAccounts
public type GetAccountsAccountExternalAccountsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountExternalAccountsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # Filter external accounts according to a particular object type.
    "bank_account"|"card" 'object?;
};

# Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.
public type billing_details_inner_params_1 record {
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    string|"" email?;
    string|"" name?;
    string|"" phone?;
};

# 
public type Subscription_automatic_tax record {
    # Whether Stripe automatically computes tax on this subscription.
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
};

public type issuing_disputes_body record {|
    # The dispute amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If not set, defaults to the full transaction amount.
    int amount?;
    evidence_param evidence?;
    # Specifies which fields in the response should be expanded.
    issuing_disputes_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The ID of the issuing transaction to create a dispute for. For transaction on Treasury FinancialAccounts, use `treasury.received_debit`.
    @constraint:String {maxLength: 5000}
    string 'transaction?;
    treasury_param treasury?;
|};

# 
public type Payment_links_resource_invoice_creation record {
    # Enable creating an invoice on successful payment.
    boolean enabled;
    # Configuration for the invoice. Default invoice values will be used if unspecified.
    Payment_links_resource_invoice_settings? invoice_data?;
};

@constraint:String {maxLength: 5000}
public type GetClimateSuppliersSupplierQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Payment_method_details_card_presentPreferredlocalesItemsString string;

# A payment method domain represents a web domain that you have registered with Stripe.
# Stripe Elements use registered payment method domains to control where certain payment methods are shown.
# 
# Related guide: [Payment method domains](https://stripe.com/docs/payments/payment-methods/pmd-registration).
public type Payment_method_domain record {
    Payment_method_domain_resource_payment_method_status apple_pay;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The domain name that this payment method domain object represents.
    @constraint:String {maxLength: 5000}
    string domain_name;
    # Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.
    boolean enabled;
    Payment_method_domain_resource_payment_method_status google_pay;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    Payment_method_domain_resource_payment_method_status link;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "payment_method_domain" 'object;
    Payment_method_domain_resource_payment_method_status paypal;
};

# 
public type Deleted_product_feature record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "product_feature" 'object;
};

public type billing_details_inner_params record {
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    string|"" email?;
    string|"" name?;
    string|"" phone?;
};

# 
public type Treasury_outbound_payments_resource_outbound_payment_resource_tracking_details record {
    Treasury_outbound_payments_resource_ach_tracking_details ach?;
    # The US bank account network used to send funds.
    "ach"|"us_domestic_wire" 'type;
    Treasury_outbound_payments_resource_us_domestic_wire_tracking_details us_domestic_wire?;
};

# 
public type Product_marketing_feature record {
    # The marketing feature name. Up to 80 characters long.
    @constraint:String {maxLength: 5000}
    string name?;
};

# Represents the Queries record for the operation: GetAccounts
public type GetAccountsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetAccountsQueriesExpandItemsString[] expand?;
    # Only return connected accounts that were created during the given date interval.
    created created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

public type features_param record {
    ("always"|"limited"|"unspecified")[] payment_method_allow_redisplay_filters?;
    "disabled"|"enabled" payment_method_redisplay?;
    int payment_method_redisplay_limit?;
    "disabled"|"enabled" payment_method_remove?;
    "disabled"|"enabled" payment_method_save?;
    "off_session"|"on_session" payment_method_save_usage?;
};

# 
public type Deleted_invoiceitem record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "invoiceitem" 'object;
};

public type terminal_configurations_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Payment_method_card_presentPreferredlocalesItemsString string;

public type tax_rates_tax_rate_bodyExpandItemsString string;

public type billing_meter_event_adjustments_bodyExpandItemsString string;

public type payouts_payout_bodyExpandItemsString string;

public type personalization_design_activate_body record {|
    # Specifies which fields in the response should be expanded.
    personalization_design_activate_bodyExpandItemsString[] expand?;
|};

# 
public type Quotes_resource_total_details_resource_breakdown record {
    # The aggregated discounts.
    Line_items_discount_amount[] discounts;
    # The aggregated tax amounts by rate.
    Line_items_tax_amount[] taxes;
};

public type eu_bank_transfer_params record {
    @constraint:String {maxLength: 5000}
    string country;
};

public type authorization_capture_bodyExpandItemsString string;

# Details about network-specific tracking information.
public type tracking_details_params record {
    ach_tracking_details_params ach?;
    "ach"|"us_domestic_wire" 'type;
    us_domestic_wire_tracking_details_params us_domestic_wire?;
};

public type japan_address_kanji_specs record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
    @constraint:String {maxLength: 5000}
    string town?;
};

# 
public type Payment_method_details_card_installments_plan record {
    # For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.
    int? count?;
    # For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.
    # One of `month`.
    "month"? interval?;
    # Type of installment plan, one of `fixed_count`.
    "fixed_count" 'type;
};

public type Payment_links_resource_invoice_settingsAccounttaxidsItemsnull string|Tax_id|Deleted_tax_id;

# 
public type Setup_attempt_payment_method_details_card_present record {
    # The ID of the Card PaymentMethod which was generated by this SetupAttempt.
    string|Payment_method? generated_card?;
    # Details about payments collected offline.
    Payment_method_details_card_present_offline? offline?;
};

# 
public type PaymentFlowsSetupIntentSetupAttemptList record {
    Setup_attempt[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/setup_attempts`}
    string url;
};

# 
public type Issuing_cardholder_company record {
    # Whether the company's business ID number was provided.
    boolean tax_id_provided;
};

public type recurring_adhoc record {
    "day"|"month"|"week"|"year" interval;
    int interval_count?;
};

public type AccounttaxidsItemsString string;

# 
public type Setup_attempt_payment_method_details_bacs_debit record {
};

public type sources_id_body_1 record {|
    # Specifies which fields in the response should be expanded.
    sources_id_body_1ExpandItemsString[] expand?;
|};

public type tokens_token_bodyExpandItemsString string;

# 
public type Deleted_customer record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "customer" 'object;
};

@constraint:String {maxLength: 5000}
public type Webhook_endpointEnabledeventsItemsString string;

@constraint:String {maxLength: 5000}
public type GetAccountsAccountPeopleQueriesExpandItemsString string;

public type treasury_inbound_transfers_bodyExpandItemsString string;

# Configuration for automatic tax collection.
public type automatic_tax_params_1 record {
    boolean enabled;
    param_3 liability?;
};

# Proxy server configurations to be used with the HTTP client endpoint.
public type ProxyConfig record {|
    # Host name of the proxy server
    string host = "";
    # Proxy server port
    int port = 0;
    # Proxy server username
    string userName = "";
    # Proxy server password
    @display {label: "", kind: "password"}
    string password = "";
|};

@constraint:String {maxLength: 5000}
public type Person_future_requirementsPastdueItemsString string;

public type local_amusement_tax record {
    @constraint:String {maxLength: 5000}
    string jurisdiction;
};

# 
public type PaymentFlowsSetupIntentList record {
    Setup_intent[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/setup_intents`}
    string url;
};

# 
public type Payment_method_options_sofort record {
    # Preferred language of the SOFORT authorization page that the customer is redirected to.
    "de"|"en"|"es"|"fr"|"it"|"nl"|"pl"? preferred_language?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

@constraint:String {maxLength: 5000}
public type GetAppsSecretsFindQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetFilesFile
public type GetFilesFileQueries record {
    # Specifies which fields in the response should be expanded.
    GetFilesFileQueriesExpandItemsString[] expand?;
};

# 
public type Payment_method_paynow record {
};

public type QuoteDiscountsItemsnull string|Discount;

# 
public type Payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code record {
    # The URL to the hosted Cash App Pay instructions page, which allows customers to view the QR code, and supports QR code refreshing on expiration.
    @constraint:String {maxLength: 5000}
    string hosted_instructions_url;
    # The url for mobile redirect based auth
    @constraint:String {maxLength: 5000}
    string mobile_auth_url;
    Payment_intent_next_action_cashapp_qr_code qr_code;
};

# 
public type Bank_connections_resource_balance_api_resource_cash_balance record {
    # The funds available to the account holder. Typically this is the current balance less any holds.
    # 
    # Each key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
    # 
    # Each value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.
    record {|int...;|}? available?;
};

public type subscription_items_bodyExpandItemsString string;

# 
public type Payment_method_us_bank_account_status_details record {
    Payment_method_us_bank_account_blocked blocked?;
};

public type card_issuing_settings_specs record {
    settings_terms_of_service_specs tos_acceptance?;
};

public type products_id_body record {|
    # Whether the product is available for purchase.
    boolean active?;
    # The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.
    @constraint:String {maxLength: 5000}
    string default_price?;
    # The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.
    string|"" description?;
    # Specifies which fields in the response should be expanded.
    products_id_bodyExpandItemsString[] expand?;
    # A list of up to 8 URLs of images for this product, meant to be displayable to the customer.
    string[]|"" images?;
    # A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).
    record {string name;}[]|"" marketing_features?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The product's name, meant to be displayable to the customer.
    @constraint:String {maxLength: 5000}
    string name?;
    # The dimensions of this product for shipping purposes.
    record {decimal height; decimal length; decimal weight; decimal width;}|"" package_dimensions?;
    # Whether this product is shipped (i.e., physical goods).
    boolean shippable?;
    # An arbitrary string to be displayed on your customer's credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.
    # 
    # This may be up to 22 characters. The statement description may not include `<`, `>`, `\`, `"`, `'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped.
    #  It must contain at least one letter. May only be set if `type=service`. Only used for subscription payments.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    string|"" tax_code?;
    # A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal. May only be set if `type=service`.
    string|"" unit_label?;
    # A URL of a publicly-accessible webpage for this product.
    string|"" url?;
|};

public type disputes_dispute_bodyExpandItemsString string;

# 
public type Package_dimensions record {
    # Height, in inches.
    decimal height;
    # Length, in inches.
    decimal length;
    # Weight, in ounces.
    decimal weight;
    # Width, in inches.
    decimal width;
};

# 
public type Payment_method_details record {
    Payment_method_details_ach_credit_transfer ach_credit_transfer?;
    Payment_method_details_ach_debit ach_debit?;
    Payment_method_details_acss_debit acss_debit?;
    Payment_method_details_affirm affirm?;
    Payment_method_details_afterpay_clearpay afterpay_clearpay?;
    Payment_flows_private_payment_methods_alipay_details alipay?;
    Payment_method_details_amazon_pay amazon_pay?;
    Payment_method_details_au_becs_debit au_becs_debit?;
    Payment_method_details_bacs_debit bacs_debit?;
    Payment_method_details_bancontact bancontact?;
    Payment_method_details_blik blik?;
    Payment_method_details_boleto boleto?;
    Payment_method_details_card card?;
    Payment_method_details_card_present card_present?;
    Payment_method_details_cashapp cashapp?;
    Payment_method_details_customer_balance customer_balance?;
    Payment_method_details_eps eps?;
    Payment_method_details_fpx fpx?;
    Payment_method_details_giropay giropay?;
    Payment_method_details_grabpay grabpay?;
    Payment_method_details_ideal ideal?;
    Payment_method_details_interac_present interac_present?;
    Payment_method_details_klarna klarna?;
    Payment_method_details_konbini konbini?;
    Payment_method_details_link link?;
    Payment_method_details_mobilepay mobilepay?;
    Payment_method_details_multibanco multibanco?;
    Payment_method_details_oxxo oxxo?;
    Payment_method_details_p24 p24?;
    Payment_method_details_paynow paynow?;
    Payment_method_details_paypal paypal?;
    Payment_method_details_pix pix?;
    Payment_method_details_promptpay promptpay?;
    Payment_method_details_revolut_pay revolut_pay?;
    Payment_method_details_sepa_debit sepa_debit?;
    Payment_method_details_sofort sofort?;
    Payment_method_details_stripe_account stripe_account?;
    Payment_method_details_swish swish?;
    Payment_method_details_twint twint?;
    # The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.
    # An additional hash is included on `payment_method_details` with a name matching this value.
    # It contains information specific to the payment method.
    @constraint:String {maxLength: 5000}
    string 'type;
    Payment_method_details_us_bank_account us_bank_account?;
    Payment_method_details_wechat wechat?;
    Payment_method_details_wechat_pay wechat_pay?;
    Payment_method_details_zip zip?;
};

# 
public type IssuingPersonalizationDesignList record {
    Issuing\.personalization_design[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/personalization_designs`}
    string url;
};

public type customer_update_creation_param record {
    ("address"|"email"|"name"|"phone"|"shipping"|"tax_id")[]|"" allowed_updates?;
    boolean enabled;
};

# Contains additional details about the status of a payment method for a specific payment method domain.
public type Payment_method_domain_resource_payment_method_status_details record {
    # The error message associated with the status of the payment method on the domain.
    @constraint:String {maxLength: 5000}
    string error_message;
};

@constraint:String {maxLength: 5000}
public type GetIssuingAuthorizationsQueriesExpandItemsString string;

public type topups_topup_body record {|
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    topups_topup_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# Represents the Queries record for the operation: GetBillingPortalConfigurations
public type GetBillingPortalConfigurationsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetBillingPortalConfigurationsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return configurations that are active or inactive (e.g., pass `true` to only list active configurations).
    boolean active?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return the default or non-default configurations (e.g., pass `true` to only list the default configuration).
    boolean is_default?;
};

# This object represents a customer of your business. Use it to create recurring charges and track payments that belong to the same customer.
# 
# Related guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment)
public type Customer record {
    # The customer's address.
    Address? address?;
    # The current balance, if any, that's stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that's added to their next invoice. The balance only considers amounts that Stripe hasn't successfully applied to any invoice. It doesn't reflect unpaid invoices. This balance is only taken into account after invoices finalize.
    int balance?;
    # The current funds being held by Stripe on behalf of the customer. You can apply these funds towards payment intents when the source is "cash_balance". The `settings[reconciliation_mode]` field describes if these funds apply to these payment intents manually or automatically.
    Cash_balance? cash_balance?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.
    string? currency?;
    # ID of the default payment source for the customer.
    # 
    # If you use payment methods created through the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.
    string|Bank_account|Card|Source? default_source?;
    # Tracks the most recent state change on any invoice belonging to the customer. Paying an invoice or marking it uncollectible via the API will set this field to false. An automatic payment failure or passing the `invoice.due_date` will set this field to `true`.
    # 
    # If an invoice becomes uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't reset to `false`.
    # 
    # If you care whether the customer has paid their most recent subscription invoice, use `subscription.status` instead. Paying or marking uncollectible any customer invoice regardless of whether it is the latest invoice for a subscription will always set this field to `false`.
    boolean? delinquent?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Describes the current discount active on the customer, if there is one.
    Discount? discount?;
    # The customer's email address.
    string? email?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The current multi-currency balances, if any, that's stored on the customer. If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency. If negative, the customer has an amount owed that's added to their next invoice denominated in that currency. These balances don't apply to unpaid invoices. They solely track amounts that Stripe hasn't successfully applied to any invoice. Stripe only applies a balance in a specific currency to an invoice after that invoice (which is in the same currency) finalizes.
    record {|int...;|} invoice_credit_balance?;
    # The prefix for the customer used to generate unique invoice numbers.
    string? invoice_prefix?;
    Invoice_setting_customer_setting invoice_settings?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata?;
    # The customer's full name or business name.
    string? name?;
    # The suffix of the customer's next invoice number (for example, 0001). When the account uses account level sequencing, this parameter is ignored in API requests and the field omitted in API responses.
    int next_invoice_sequence?;
    # String representing the object's type. Objects of the same type share the same value.
    "customer" 'object;
    # The customer's phone number.
    string? phone?;
    # The customer's preferred locales (languages), ordered by preference.
    CustomerPreferredlocalesItemsString[]? preferred_locales?;
    # Mailing and shipping address for the customer. Appears on invoices emailed to this customer.
    Shipping? shipping?;
    ApmsSourcesSourceList_1 sources?;
    SubscriptionList_1 subscriptions?;
    Customer_tax tax?;
    # Describes the customer's tax exemption status, which is `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the following text: **"Reverse charge"**.
    "exempt"|"none"|"reverse"? tax_exempt?;
    TaxIDsList_1 tax_ids?;
    # ID of the test clock that this customer belongs to.
    string|Test_helpers\.test_clock? test_clock?;
};

# Products describe the specific goods or services you offer to your customers.
# For example, you might offer a Standard and Premium version of your goods or service; each version would be a separate Product.
# They can be used in conjunction with [Prices](https://stripe.com/docs/api#prices) to configure pricing in Payment Links, Checkout, and Subscriptions.
# 
# Related guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),
# [share a Payment Link](https://stripe.com/docs/payment-links),
# [accept payments with Checkout](https://stripe.com/docs/payments/accept-a-payment#create-product-prices-upfront),
# and more about [Products and Prices](https://stripe.com/docs/products-prices/overview)
public type Product record {
    # Whether the product is currently available for purchase.
    boolean active;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.
    string|Price? default_price?;
    # The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.
    string? description?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # A list of up to 8 URLs of images for this product, meant to be displayable to the customer.
    ProductImagesItemsString[] images;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).
    Product_marketing_feature[] marketing_features;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # The product's name, meant to be displayable to the customer.
    @constraint:String {maxLength: 5000}
    string name;
    # String representing the object's type. Objects of the same type share the same value.
    "product" 'object;
    # The dimensions of this product for shipping purposes.
    Package_dimensions? package_dimensions?;
    # Whether this product is shipped (i.e., physical goods).
    boolean? shippable?;
    # Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only used for subscription payments.
    string? statement_descriptor?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    string|Tax_code? tax_code?;
    # A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal.
    string? unit_label?;
    # Time at which the object was last updated. Measured in seconds since the Unix epoch.
    int updated;
    # A URL of a publicly-accessible webpage for this product.
    string? url?;
};

public type controller_fees_specs record {
    "account"|"application" payer?;
};

# 
public type Payment_method_details_oxxo record {
    # OXXO reference number
    string? number?;
};

# 
public type Checkout_affirm_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Represents the Queries record for the operation: GetTaxCalculationsCalculationLineItems
public type GetTaxCalculationsCalculationLineItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 500}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTaxCalculationsCalculationLineItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 500}
    string starting_after?;
};

# When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.
public type subscription_data_params_1 record {
    @constraint:String {maxLength: 500}
    string description?;
    subscription_data_invoice_settings_params invoice_settings?;
    record {|string...;|} metadata?;
    int trial_period_days?;
    trial_settings_config trial_settings?;
};

# 
public type Account_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Date by which the fields in `currently_due` must be collected to keep the account enabled. These fields may disable the account sooner if the next threshold is reached before they are collected.
    int? current_deadline?;
    # Fields that need to be collected to keep the account enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.
    Account_requirementsCurrentlydueItemsString[]? currently_due?;
    # If the account is disabled, this string describes why. [Learn more about handling verification issues](https://stripe.com/docs/connect/handling-api-verification). Can be `action_required.requested_capabilities`, `requirements.past_due`, `requirements.pending_verification`, `listed`, `platform_paused`, `rejected.fraud`, `rejected.incomplete_verification`, `rejected.listed`, `rejected.other`, `rejected.terms_of_service`, `under_review`, or `other`.
    string? disabled_reason?;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[]? errors?;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.
    Account_requirementsEventuallydueItemsString[]? eventually_due?;
    # Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the account.
    Account_requirementsPastdueItemsString[]? past_due?;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.
    Account_requirementsPendingverificationItemsString[]? pending_verification?;
};

# 
public type Payment_intent_next_action_konbini record {
    # The timestamp at which the pending Konbini payment expires.
    int expires_at;
    # The URL for the Konbini payment instructions page, which allows customers to view and print a Konbini voucher.
    string? hosted_voucher_url?;
    Payment_intent_next_action_konbini_stores stores;
};

@constraint:String {maxLength: 5000}
public type GetLinkAccountSessionsSessionQueriesExpandItemsString string;

public type bank_accounts_id_body_2ExpandItemsString string;

# 
public type Issuing_transaction_network_data record {
    # A code created by Stripe which is shared with the merchant to validate the authorization. This field will be populated if the authorization message was approved. The code typically starts with the letter "S", followed by a six-digit number. For example, "S498162". Please note that the code is not guaranteed to be unique across authorizations.
    string? authorization_code?;
    # The date the transaction was processed by the card network. This can be different from the date the seller recorded the transaction depending on when the acquirer submits the transaction to the network.
    string? processing_date?;
    # Unique identifier for the authorization assigned by the card network used to match subsequent messages, disputes, and transactions.
    string? transaction_id?;
};

# Information about the features available in the portal.
public type features_updating_param record {
    customer_update_updating_param customer_update?;
    invoice_list_param invoice_history?;
    payment_method_update_param payment_method_update?;
    subscription_cancel_updating_param subscription_cancel?;
    subscription_update_updating_param subscription_update?;
};

public type subscription_items_item_bodyExpandItemsString string;

# 
public type Payment_method_details_pix record {
    # Unique transaction id generated by BCB
    string? bank_transaction_id?;
};

# Represents the Queries record for the operation: GetTerminalLocations
public type GetTerminalLocationsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTerminalLocationsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type price_data record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    recurring_adhoc recurring?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

# 
public type Payment_method_details_twint record {
};

# 
public type Treasury_outbound_transfers_resource_returned_details record {
    # Reason for the return.
    "account_closed"|"account_frozen"|"bank_account_restricted"|"bank_ownership_changed"|"declined"|"incorrect_account_holder_name"|"invalid_account_number"|"invalid_currency"|"no_account"|"other" code;
    # The Transaction associated with this object.
    string|Treasury\.transaction 'transaction;
};

@constraint:String {maxLength: 5000}
public type GetTerminalConfigurationsConfigurationQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetTreasuryOutboundPaymentsId
public type GetTreasuryOutboundPaymentsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryOutboundPaymentsIdQueriesExpandItemsString[] expand?;
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction record {
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer bank_transfer;
};

public type local_lease_tax record {
    @constraint:String {maxLength: 5000}
    string jurisdiction;
};

public type refund_expire_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryOutboundPaymentsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetChargesQueriesExpandItemsString string;

public type capabilities_capability_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPaymentIntentsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerCardsQueriesExpandItemsString string;

# 
public type Payment_method_details_bancontact record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Bank Identifier Code of the bank associated with the bank account.
    string? bic?;
    # The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.
    string|Payment_method? generated_sepa_debit?;
    # The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.
    string|Mandate? generated_sepa_debit_mandate?;
    # Last four characters of the IBAN.
    string? iban_last4?;
    # Preferred language of the Bancontact authorization page that the customer is redirected to.
    # Can be one of `en`, `de`, `fr`, or `nl`
    "de"|"en"|"fr"|"nl"? preferred_language?;
    # Owner's verified full name. Values are verified or provided by Bancontact directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
};

# List of items contained within this value list.
public type RadarListListItemList_1 record {
    # Details about each object.
    Radar\.value_list_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type webhook_endpoints_webhook_endpoint_body record {|
    # An optional description of what the webhook is used for.
    string|"" description?;
    # Disable the webhook endpoint if set to true.
    boolean disabled?;
    # The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection.
    ("*"|"account.application.authorized"|"account.application.deauthorized"|"account.external_account.created"|"account.external_account.deleted"|"account.external_account.updated"|"account.updated"|"application_fee.created"|"application_fee.refund.updated"|"application_fee.refunded"|"balance.available"|"billing_portal.configuration.created"|"billing_portal.configuration.updated"|"billing_portal.session.created"|"capability.updated"|"cash_balance.funds_available"|"charge.captured"|"charge.dispute.closed"|"charge.dispute.created"|"charge.dispute.funds_reinstated"|"charge.dispute.funds_withdrawn"|"charge.dispute.updated"|"charge.expired"|"charge.failed"|"charge.pending"|"charge.refund.updated"|"charge.refunded"|"charge.succeeded"|"charge.updated"|"checkout.session.async_payment_failed"|"checkout.session.async_payment_succeeded"|"checkout.session.completed"|"checkout.session.expired"|"climate.order.canceled"|"climate.order.created"|"climate.order.delayed"|"climate.order.delivered"|"climate.order.product_substituted"|"climate.product.created"|"climate.product.pricing_updated"|"coupon.created"|"coupon.deleted"|"coupon.updated"|"credit_note.created"|"credit_note.updated"|"credit_note.voided"|"customer.created"|"customer.deleted"|"customer.discount.created"|"customer.discount.deleted"|"customer.discount.updated"|"customer.source.created"|"customer.source.deleted"|"customer.source.expiring"|"customer.source.updated"|"customer.subscription.created"|"customer.subscription.deleted"|"customer.subscription.paused"|"customer.subscription.pending_update_applied"|"customer.subscription.pending_update_expired"|"customer.subscription.resumed"|"customer.subscription.trial_will_end"|"customer.subscription.updated"|"customer.tax_id.created"|"customer.tax_id.deleted"|"customer.tax_id.updated"|"customer.updated"|"customer_cash_balance_transaction.created"|"entitlements.active_entitlement_summary.updated"|"file.created"|"financial_connections.account.created"|"financial_connections.account.deactivated"|"financial_connections.account.disconnected"|"financial_connections.account.reactivated"|"financial_connections.account.refreshed_balance"|"financial_connections.account.refreshed_ownership"|"financial_connections.account.refreshed_transactions"|"identity.verification_session.canceled"|"identity.verification_session.created"|"identity.verification_session.processing"|"identity.verification_session.redacted"|"identity.verification_session.requires_input"|"identity.verification_session.verified"|"invoice.created"|"invoice.deleted"|"invoice.finalization_failed"|"invoice.finalized"|"invoice.marked_uncollectible"|"invoice.paid"|"invoice.payment_action_required"|"invoice.payment_failed"|"invoice.payment_succeeded"|"invoice.sent"|"invoice.upcoming"|"invoice.updated"|"invoice.voided"|"invoiceitem.created"|"invoiceitem.deleted"|"issuing_authorization.created"|"issuing_authorization.request"|"issuing_authorization.updated"|"issuing_card.created"|"issuing_card.updated"|"issuing_cardholder.created"|"issuing_cardholder.updated"|"issuing_dispute.closed"|"issuing_dispute.created"|"issuing_dispute.funds_reinstated"|"issuing_dispute.submitted"|"issuing_dispute.updated"|"issuing_personalization_design.activated"|"issuing_personalization_design.deactivated"|"issuing_personalization_design.rejected"|"issuing_personalization_design.updated"|"issuing_token.created"|"issuing_token.updated"|"issuing_transaction.created"|"issuing_transaction.updated"|"mandate.updated"|"payment_intent.amount_capturable_updated"|"payment_intent.canceled"|"payment_intent.created"|"payment_intent.partially_funded"|"payment_intent.payment_failed"|"payment_intent.processing"|"payment_intent.requires_action"|"payment_intent.succeeded"|"payment_link.created"|"payment_link.updated"|"payment_method.attached"|"payment_method.automatically_updated"|"payment_method.detached"|"payment_method.updated"|"payout.canceled"|"payout.created"|"payout.failed"|"payout.paid"|"payout.reconciliation_completed"|"payout.updated"|"person.created"|"person.deleted"|"person.updated"|"plan.created"|"plan.deleted"|"plan.updated"|"price.created"|"price.deleted"|"price.updated"|"product.created"|"product.deleted"|"product.updated"|"promotion_code.created"|"promotion_code.updated"|"quote.accepted"|"quote.canceled"|"quote.created"|"quote.finalized"|"radar.early_fraud_warning.created"|"radar.early_fraud_warning.updated"|"refund.created"|"refund.updated"|"reporting.report_run.failed"|"reporting.report_run.succeeded"|"reporting.report_type.updated"|"review.closed"|"review.opened"|"setup_intent.canceled"|"setup_intent.created"|"setup_intent.requires_action"|"setup_intent.setup_failed"|"setup_intent.succeeded"|"sigma.scheduled_query_run.created"|"source.canceled"|"source.chargeable"|"source.failed"|"source.mandate_notification"|"source.refund_attributes_required"|"source.transaction.created"|"source.transaction.updated"|"subscription_schedule.aborted"|"subscription_schedule.canceled"|"subscription_schedule.completed"|"subscription_schedule.created"|"subscription_schedule.expiring"|"subscription_schedule.released"|"subscription_schedule.updated"|"tax.settings.updated"|"tax_rate.created"|"tax_rate.updated"|"terminal.reader.action_failed"|"terminal.reader.action_succeeded"|"test_helpers.test_clock.advancing"|"test_helpers.test_clock.created"|"test_helpers.test_clock.deleted"|"test_helpers.test_clock.internal_failure"|"test_helpers.test_clock.ready"|"topup.canceled"|"topup.created"|"topup.failed"|"topup.reversed"|"topup.succeeded"|"transfer.created"|"transfer.reversed"|"transfer.updated"|"treasury.credit_reversal.created"|"treasury.credit_reversal.posted"|"treasury.debit_reversal.completed"|"treasury.debit_reversal.created"|"treasury.debit_reversal.initial_credit_granted"|"treasury.financial_account.closed"|"treasury.financial_account.created"|"treasury.financial_account.features_status_updated"|"treasury.inbound_transfer.canceled"|"treasury.inbound_transfer.created"|"treasury.inbound_transfer.failed"|"treasury.inbound_transfer.succeeded"|"treasury.outbound_payment.canceled"|"treasury.outbound_payment.created"|"treasury.outbound_payment.expected_arrival_date_updated"|"treasury.outbound_payment.failed"|"treasury.outbound_payment.posted"|"treasury.outbound_payment.returned"|"treasury.outbound_payment.tracking_details_updated"|"treasury.outbound_transfer.canceled"|"treasury.outbound_transfer.created"|"treasury.outbound_transfer.expected_arrival_date_updated"|"treasury.outbound_transfer.failed"|"treasury.outbound_transfer.posted"|"treasury.outbound_transfer.returned"|"treasury.outbound_transfer.tracking_details_updated"|"treasury.received_credit.created"|"treasury.received_credit.failed"|"treasury.received_credit.succeeded"|"treasury.received_debit.created")[] enabled_events?;
    # Specifies which fields in the response should be expanded.
    webhook_endpoints_webhook_endpoint_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The URL of the webhook endpoint.
    string url?;
|};

# 
public type SigmaScheduledQueryRunList record {
    Scheduled_query_run[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/sigma/scheduled_query_runs`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerCashBalanceTransactionsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetTaxTransactionsTransactionLineItems
public type GetTaxTransactionsTransactionLineItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 500}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTaxTransactionsTransactionLineItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 500}
    string starting_after?;
};

public type dropdownOptionsItemsObject record {
    string label;
    string value;
};

# Represents the Queries record for the operation: GetAccountsAccountPersons
public type GetAccountsAccountPersonsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountPersonsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Filters on the list of people returned based on the person's relationship to the account's company.
    all_people_relationship_specs_1 relationship?;
};

# 
public type Payment_method_us_bank_account record {
    # Account holder type: individual or company.
    "company"|"individual"? account_holder_type?;
    # Account type: checkings or savings. Defaults to checking if omitted.
    "checking"|"savings"? account_type?;
    # The name of the bank.
    string? bank_name?;
    # The ID of the Financial Connections Account used to create the payment method.
    string? financial_connections_account?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # Contains information about US bank account networks that can be used.
    Us_bank_account_networks? networks?;
    # Routing number of the bank account.
    string? routing_number?;
    # Contains information about the future reusability of this PaymentMethod.
    Payment_method_us_bank_account_status_details? status_details?;
};

public type subscription_item_update_params record {
    record {int usage_gte;}|"" billing_thresholds?;
    boolean clear_usage?;
    boolean deleted?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string id?;
    record {|string...;|}|"" metadata?;
    @constraint:String {maxLength: 5000}
    string price?;
    recurring_price_data price_data?;
    int quantity?;
    TaxratesItemsString[]|"" tax_rates?;
};

public type authorization_reverse_bodyExpandItemsString string;

public type value_lists_value_list_body record {|
    # The name of the value list for use in rules.
    @constraint:String {maxLength: 100}
    string alias?;
    # Specifies which fields in the response should be expanded.
    value_lists_value_list_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The human-readable name of the value list.
    @constraint:String {maxLength: 100}
    string name?;
|};

# 
public type Payment_pages_checkout_session_shipping_option record {
    # A non-negative integer in cents representing how much to charge.
    int shipping_amount;
    # The shipping rate.
    string|Shipping_rate shipping_rate;
};

# 
public type Payment_method_multibanco record {
};

public type date_of_birth record {
    int day;
    int month;
    int year;
};

# 
public type GelatoVerificationSessionList record {
    Identity\.verification_session[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/identity/verification_sessions`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetTaxTransactionsTransactionQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetTreasuryCreditReversals
public type GetTreasuryCreditReversalsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryCreditReversalsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return CreditReversals for the ReceivedCredit ID.
    @constraint:String {maxLength: 5000}
    string received_credit?;
    # Only return CreditReversals for a given status.
    "canceled"|"posted"|"processing" status?;
};

public type Billing_portal\.session record {
    string|Billing_portal\.configuration configuration;
    int created;
    string customer;
    Portal_flows_flow? flow?;
    string id;
    boolean livemode;
    "auto"|"bg"|"cs"|"da"|"de"|"el"|"en"|"en-AU"|"en-CA"|"en-GB"|"en-IE"|"en-IN"|"en-NZ"|"en-SG"|"es"|"es-419"|"et"|"fi"|"fil"|"fr"|"fr-CA"|"hr"|"hu"|"id"|"it"|"ja"|"ko"|"lt"|"lv"|"ms"|"mt"|"nb"|"nl"|"pl"|"pt"|"pt-BR"|"ro"|"ru"|"sk"|"sl"|"sv"|"th"|"tr"|"vi"|"zh"|"zh-HK"|"zh-TW"? locale?;
    "billing_portal.session" 'object;
    string? on_behalf_of?;
    string? return_url?;
    string url;
};

# The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.
public type param_1 record {
    string account?;
    "account"|"self" 'type;
};

# 
public type Subscription_payment_method_options_card record {
    Invoice_mandate_options_card mandate_options?;
    # Selected network to process this Subscription on. Depends on the available networks of the card attached to the Subscription. Can be only set confirm-time.
    "amex"|"cartes_bancaires"|"diners"|"discover"|"eftpos_au"|"interac"|"jcb"|"mastercard"|"unionpay"|"unknown"|"visa"? network?;
    # We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    "any"|"automatic"|"challenge"? request_three_d_secure?;
};

# 
public type Apple_pay_domain record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    @constraint:String {maxLength: 5000}
    string domain_name;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "apple_pay_domain" 'object;
};

public type payment_methods_payment_method_body record {|
    # This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to `unspecified`.
    "always"|"limited"|"unspecified" allow_redisplay?;
    billing_details_inner_params_1 billing_details?;
    update_api_param card?;
    # Specifies which fields in the response should be expanded.
    payment_methods_payment_method_bodyExpandItemsString[] expand?;
    # If this is an `Link` PaymentMethod, this hash contains details about the Link payment method.
    record {} link?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    update_param us_bank_account?;
|};

# 
public type Payment_method_details_boleto record {
    # The tax ID of the customer (CPF for individuals consumers or CNPJ for businesses consumers)
    @constraint:String {maxLength: 5000}
    string tax_id;
};

# 
public type TaxProductResourceTaxCalculationLineItemList record {
    # Details about each object.
    Tax\.calculation_line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/tax/calculations/[^/]+/line_items`}
    string url;
};

public type outbound_payments_id_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetReportingReportTypes
public type GetReportingReportTypesQueries record {
    # Specifies which fields in the response should be expanded.
    GetReportingReportTypesQueriesExpandItemsString[] expand?;
};

public type invoice_update_lines_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_update_lines_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. For [type=subscription](https://stripe.com/docs/api/invoices/line_item#invoice_line_item_object-type) line items, the incoming metadata specified on the request is directly used to set this value, in contrast to [type=invoiceitem](api/invoices/line_item#invoice_line_item_object-type) line items, where any existing metadata on the invoice line is merged with the incoming data.
    record {|string...;|}|"" invoice_metadata?;
    # The line items to update.
    lines_data_param_2[] lines;
|};

public type Billing\.meter record {
    int created;
    Billing_meter_resource_customer_mapping_settings customer_mapping;
    Billing_meter_resource_aggregation_settings default_aggregation;
    string display_name;
    string event_name;
    "day"|"hour"? event_time_window?;
    string id;
    boolean livemode;
    "billing.meter" 'object;
    "active"|"inactive" status;
    Billing_meter_resource_billing_meter_status_transitions status_transitions;
    int updated;
    Billing_meter_resource_billing_meter_value value_settings;
};

public type intent_verify_microdeposits_body_1 record {|
    # Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.
    int[] amounts?;
    # The client secret of the SetupIntent.
    @constraint:String {maxLength: 5000}
    string client_secret?;
    # A six-character code starting with SM present in the microdeposit sent to the bank account.
    @constraint:String {maxLength: 5000}
    string descriptor_code?;
    # Specifies which fields in the response should be expanded.
    intent_verify_microdeposits_body_1ExpandItemsString[] expand?;
|};

public type Climate\.order record {
    int amount_fees;
    int amount_subtotal;
    int amount_total;
    Climate_removals_beneficiary beneficiary?;
    int? canceled_at?;
    "expired"|"product_unavailable"|"requested"? cancellation_reason?;
    string? certificate?;
    int? confirmed_at?;
    int created;
    string currency;
    int? delayed_at?;
    int? delivered_at?;
    Climate_removals_order_deliveries[] delivery_details;
    int expected_delivery_year;
    string id;
    boolean livemode;
    record {|string...;|} metadata;
    string metric_tons;
    "climate.order" 'object;
    string|Climate\.product product;
    int? product_substituted_at?;
    "awaiting_funds"|"canceled"|"confirmed"|"delivered"|"open" status;
};

public type reader_set_reader_display_body record {|
    cart cart?;
    # Specifies which fields in the response should be expanded.
    reader_set_reader_display_bodyExpandItemsString[] expand?;
    # Type
    "cart" 'type;
|};

# 
public type Issuing_personalization_design_preferences record {
    # Whether we use this personalization design to create cards when one isn't specified. A connected account uses the Connect platform's default design if no personalization design is set as the default design.
    boolean is_default;
    # Whether this personalization design is used to create cards when one is not specified and a default for this connected account does not exist.
    boolean? is_platform_default?;
};

# Additional information about a `company` cardholder.
public type company_param record {
    @constraint:String {maxLength: 5000}
    string tax_id?;
};

# 
public type Payment_method_details_card_present record {
    # The authorized amount
    int? amount_authorized?;
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? brand?;
    # When using manual capture, a future timestamp after which the charge will be automatically refunded if uncaptured.
    int capture_before?;
    # The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.
    string? cardholder_name?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Authorization response cryptogram.
    string? emv_auth_data?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    # ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.
    string? generated_card?;
    # Whether this [PaymentIntent](https://stripe.com/docs/api/payment_intents) is eligible for incremental authorizations. Request support using [request_incremental_authorization_support](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-payment_method_options-card_present-request_incremental_authorization_support).
    boolean incremental_authorization_supported;
    # The last four digits of the card.
    string? last4?;
    # Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? network?;
    # Details about payments collected offline.
    Payment_method_details_card_present_offline? offline?;
    # Defines whether the authorized amount can be over-captured or not
    boolean overcapture_supported;
    # EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.
    Payment_method_details_card_presentPreferredlocalesItemsString[]? preferred_locales?;
    # How card details were read in this transaction.
    "contact_emv"|"contactless_emv"|"contactless_magstripe_mode"|"magnetic_stripe_fallback"|"magnetic_stripe_track2"? read_method?;
    # A collection of fields required to be displayed on receipts. Only required for EMV transactions.
    Payment_method_details_card_present_receipt? receipt?;
};

@constraint:String {maxLength: 5000}
public type GetRefundsQueriesExpandItemsString string;

public type subscriptions_subscription_exposed_id_body_2ExpandItemsString string;

# 
public type Terminal_configuration_configuration_resource_device_type_specific_config record {
    # A File ID representing an image you would like displayed on the reader.
    string|File splashscreen?;
};

# Additional information about an `individual` cardholder.
public type individual_param record {
    card_issuing_param card_issuing?;
    date_of_birth_specs dob?;
    string first_name?;
    string last_name?;
    person_verification_param verification?;
};

public type cards_card_body record {|
    # Reason why the `status` of this card is `canceled`.
    "lost"|"stolen" cancellation_reason?;
    # Specifies which fields in the response should be expanded.
    cards_card_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    @constraint:String {maxLength: 5000}
    string personalization_design?;
    encrypted_pin_param_1 pin?;
    shipping_specs_1 shipping?;
    authorization_controls_param spending_controls?;
    # Dictates whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`. If this card is being canceled because it was lost or stolen, this information should be provided as `cancellation_reason`.
    "active"|"canceled"|"inactive" status?;
|};

public type Issuing\.personalization_design record {
    string|File? card_logo?;
    Issuing_personalization_design_carrier_text? carrier_text?;
    int created;
    string id;
    boolean livemode;
    string? lookup_key?;
    record {|string...;|} metadata;
    string? name?;
    "issuing.personalization_design" 'object;
    string|Issuing\.physical_bundle physical_bundle;
    Issuing_personalization_design_preferences preferences;
    Issuing_personalization_design_rejection_reasons rejection_reasons;
    "active"|"inactive"|"rejected"|"review" status;
};

# 
public type EntitlementsResourceCustomerEntitlementList record {
    Entitlements\.active_entitlement[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type charge_refund_bodyExpandItemsString string;

# 
public type Tax_product_registrations_resource_country_options_canada record {
    Tax_product_registrations_resource_country_options_ca_province_standard province_standard?;
    # Type of registration in Canada.
    "province_standard"|"simplified"|"standard" 'type;
};

# 
public type SubscriptionList record {
    # Details about each object.
    Subscription[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Payment_method_details_konbini record {
    # If the payment succeeded, this contains the details of the convenience store where the payment was completed.
    Payment_method_details_konbini_store? store?;
};

# An object containing device type specific settings for BBPOS WisePOS E readers
public type bbpos_wise_pose record {
    string|"" splashscreen?;
};

# 
public type Checkout_bancontact_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type scope_param record {
    "account"|"user" 'type;
    @constraint:String {maxLength: 5000}
    string user?;
};

# 
public type Payment_method_details_wechat record {
};

# 
public type Tax_product_registrations_resource_country_options_simplified record {
    # Type of registration in `country`.
    "simplified" 'type;
};

# 
public type Payment_method_options_grabpay record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Represents the Queries record for the operation: GetCustomersCustomerSources
public type GetCustomersCustomerSourcesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerSourcesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # Filter sources according to a particular object type.
    @constraint:String {maxLength: 5000}
    string 'object?;
};

@constraint:String {maxLength: 5000}
public type GetReviewsReviewQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryDebitReversalsQueriesExpandItemsString string;

# 
public type UsageEventsResourceUsageRecordSummaryList record {
    Usage_record_summary[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type invoice_remove_lines_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_remove_lines_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" invoice_metadata?;
    # The line items to remove.
    lines_data_param_1[] lines;
|};

# 
public type Gelato_report_id_number_options record {
};

# 
public type RefundList record {
    # Details about each object.
    Refund[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Payment_method_details_bacs_debit record {
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    string? mandate?;
    # Sort code of the bank account. (e.g., `10-20-30`)
    string? sort_code?;
};

@constraint:String {maxLength: 5000}
public type Account_requirementsEventuallydueItemsString string;

public type Source_type_giropay record {
    string? bank_code?;
    string? bank_name?;
    string? bic?;
    string? statement_descriptor?;
};

public type product_data record {
    @constraint:String {maxLength: 40000}
    string description?;
    string[] images?;
    record {|string...;|} metadata?;
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 5000}
    string tax_code?;
};

# Restrictions that a Connect Platform has placed on this FinancialAccount.
public type Treasury_financial_accounts_resource_platform_restrictions record {
    # Restricts all inbound money movement.
    "restricted"|"unrestricted"? inbound_flows?;
    # Restricts all outbound money movement.
    "restricted"|"unrestricted"? outbound_flows?;
};

public type authorization_finalize_amount_bodyExpandItemsString string;

public type id_refund_bodyExpandItemsString string;

public type Issuing\.token record {
    string|Issuing\.card card;
    int created;
    string? device_fingerprint?;
    string id;
    string last4?;
    boolean livemode;
    "mastercard"|"visa" network;
    Issuing_network_token_network_data network_data?;
    int network_updated_at;
    "issuing.token" 'object;
    "active"|"deleted"|"requested"|"suspended" status;
    "apple_pay"|"google_pay"|"samsung_pay" wallet_provider?;
};

# 
public type Payment_intent_payment_method_options_link record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# Contains a Feature and settings related to moving money out of the FinancialAccount into another Account with the same owner.
public type outbound_transfers_1 record {
    access_with_ach_details ach?;
    access us_domestic_wire?;
};

public type quotes_quote_bodyExpandItemsString string;

# 
public type Issuing_card_shipping_customs record {
    # A registration number used for customs in Europe. See [https://www.gov.uk/eori](https://www.gov.uk/eori) for the UK and [https://ec.europa.eu/taxation_customs/business/customs-procedures-import-and-export/customs-procedures/economic-operators-registration-and-identification-number-eori_en](https://ec.europa.eu/taxation_customs/business/customs-procedures-import-and-export/customs-procedures/economic-operators-registration-and-identification-number-eori_en) for the EU.
    string? eori_number?;
};

# 
public type Treasury_outbound_transfers_resource_ach_tracking_details record {
    # ACH trace ID of the OutboundTransfer for transfers sent over the `ach` network.
    @constraint:String {maxLength: 5000}
    string trace_id;
};

# 
public type Price_tier record {
    # Price for the entire tier.
    int? flat_amount?;
    # Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.
    string? flat_amount_decimal?;
    # Per unit price for units relevant to the tier.
    int? unit_amount?;
    # Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.
    string? unit_amount_decimal?;
    # Up to and including to this quantity will be contained in the tier.
    int? up_to?;
};

# Point in Time
public type Gelato_data_document_report_issued_date record {
    # Numerical day between 1 and 31.
    int? day?;
    # Numerical month between 1 and 12.
    int? month?;
    # The four-digit year.
    int? year?;
};

# `ExchangeRate` objects allow you to determine the rates that Stripe is currently
# using to convert from one currency to another. Since this number is variable
# throughout the day, there are various reasons why you might want to know the current
# rate (for example, to dynamically price an item for a user with a default
# payment in a foreign currency).
# 
# Please refer to our [Exchange Rates API](https://stripe.com/docs/fx-rates) guide for more details.
# 
# *[Note: this integration path is supported but no longer recommended]* Additionally,
# you can guarantee that a charge is made with an exchange rate that you expect is
# current. To do so, you must pass in the exchange_rate to charges endpoints. If the
# value is no longer up to date, the charge won't go through. Please refer to our
# [Using with charges](https://stripe.com/docs/exchange-rates) guide for more details.
# 
# -----
# 
# &nbsp;
# 
# *This Exchange Rates API is a Beta Service and is subject to Stripe's terms of service. You may use the API solely for the purpose of transacting on Stripe. For example, the API may be queried in order to:*
# 
# - *localize prices for processing payments on Stripe*
# - *reconcile Stripe transactions*
# - *determine how much money to send to a connected account*
# - *determine app fees to charge a connected account*
# 
# *Using this Exchange Rates API beta for any purpose other than to transact on Stripe is strictly prohibited and constitutes a violation of Stripe's terms of service.*
public type Exchange_rate record {
    # Unique identifier for the object. Represented as the three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) in lowercase.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "exchange_rate" 'object;
    # Hash where the keys are supported currencies and the values are the exchange rate at which the base id currency converts to the key currency.
    record {||} rates;
};

public type bank_accounts_id_body_2 record {|
    # Specifies which fields in the response should be expanded.
    bank_accounts_id_body_2ExpandItemsString[] expand?;
|};

public type bank_accounts_id_body_1 record {|
    # The name of the person or business that owns the bank account.
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    # The type of entity that holds the account. This can be either `individual` or `company`.
    "company"|"individual" account_holder_type?;
    # City/District/Suburb/Town/Village.
    @constraint:String {maxLength: 5000}
    string address_city?;
    # Billing address country, if provided when creating card.
    @constraint:String {maxLength: 5000}
    string address_country?;
    # Address line 1 (Street address/PO Box/Company name).
    @constraint:String {maxLength: 5000}
    string address_line1?;
    # Address line 2 (Apartment/Suite/Unit/Building).
    @constraint:String {maxLength: 5000}
    string address_line2?;
    # State/County/Province/Region.
    @constraint:String {maxLength: 5000}
    string address_state?;
    # ZIP or postal code.
    @constraint:String {maxLength: 5000}
    string address_zip?;
    # Two digit number representing the card’s expiration month.
    @constraint:String {maxLength: 5000}
    string exp_month?;
    # Four digit number representing the card’s expiration year.
    @constraint:String {maxLength: 5000}
    string exp_year?;
    # Specifies which fields in the response should be expanded.
    bank_accounts_id_body_1ExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Cardholder name.
    @constraint:String {maxLength: 5000}
    string name?;
    owner owner?;
|};

public type features_id_body record {|
    # Inactive features cannot be attached to new products and will not be returned from the features list endpoint.
    boolean active?;
    # Specifies which fields in the response should be expanded.
    features_id_bodyExpandItemsString[] expand?;
    # Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}|"" metadata?;
    # The feature's name, for your own purpose, not meant to be displayable to the customer.
    @constraint:String {maxLength: 80}
    string name?;
|};

public type tax_param_1 record {
    string|"" ip_address?;
};

public type customer_fund_cash_balance_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount
public type GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountQueriesExpandItemsString[] expand?;
};

# 
public type Tax_i_ds_owner record {
    # The account being referenced when `type` is `account`.
    string|Account account?;
    # The Connect Application being referenced when `type` is `application`.
    string|Application application?;
    # The customer being referenced when `type` is `customer`.
    string|Customer customer?;
    # Type of owner referenced.
    "account"|"application"|"customer"|"self" 'type;
};

public type authorization_controls_param_v2AllowedmerchantcountriesItemsString string;

# 
public type CustomerPaymentMethodResourceList record {
    Payment_method[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type QuotesResourceQuoteList record {
    Quote[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/quotes`}
    string url;
};

# 
public type Mandate_sepa_debit record {
    # The unique reference of the mandate.
    @constraint:String {maxLength: 5000}
    string reference;
    # The URL of the mandate. This URL generally contains sensitive information about the customer and should be shared with them exclusively.
    @constraint:String {maxLength: 5000}
    string url;
};

# Shipping rates describe the price of shipping presented to your customers and
# applied to a purchase. For more information, see [Charge for shipping](https://stripe.com/docs/payments/during-payment/charge-shipping).
public type Shipping_rate record {
    # Whether the shipping rate can be used for new purchases. Defaults to `true`.
    boolean active;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions.
    Shipping_rate_delivery_estimate? delivery_estimate?;
    # The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.
    string? display_name?;
    Shipping_rate_fixed_amount fixed_amount?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "shipping_rate" 'object;
    # Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    "exclusive"|"inclusive"|"unspecified"? tax_behavior?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`.
    string|Tax_code? tax_code?;
    # The type of calculation to use on the shipping rate.
    "fixed_amount" 'type;
};

# 
public type Payment_method_cashapp record {
    # A unique and immutable identifier assigned by Cash App to every buyer.
    string? buyer_id?;
    # A public identifier for buyers using Cash App.
    string? cashtag?;
};

# 
public type PlanList record {
    # Details about each object.
    Plan[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/plans`}
    string url;
};

# 
public type Issuing_authorization_treasury record {
    # The array of [ReceivedCredits](https://stripe.com/docs/api/treasury/received_credits) associated with this authorization
    Issuing_authorization_treasuryReceivedcreditsItemsString[] received_credits;
    # The array of [ReceivedDebits](https://stripe.com/docs/api/treasury/received_debits) associated with this authorization
    Issuing_authorization_treasuryReceiveddebitsItemsString[] received_debits;
    # The Treasury [Transaction](https://stripe.com/docs/api/treasury/transactions) associated with this authorization
    string? 'transaction?;
};

# Optional parameters that automatically create a [file link](https://stripe.com/docs/api#file_links) for the newly created file.
public type file_link_creation_params record {
    boolean create;
    int expires_at?;
    record {|string...;|}|"" metadata?;
};

public type reversals_id_bodyExpandItemsString string;

public type intent_apply_customer_balance_bodyExpandItemsString string;

# 
public type Terminal_configuration_configuration_resource_reboot_window record {
    # Integer between 0 to 23 that represents the end hour of the reboot time window. The value must be different than the start_hour.
    int end_hour;
    # Integer between 0 to 23 that represents the start hour of the reboot time window.
    int start_hour;
};

# Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.
public type authorization_controls_param_v2 record {
    (authorization_controls_param_v2AllowedcategoriesItemsString)[] allowed_categories?;
    authorization_controls_param_v2AllowedmerchantcountriesItemsString[] allowed_merchant_countries?;
    (authorization_controls_param_v2BlockedcategoriesItemsString)[] blocked_categories?;
    authorization_controls_param_v2BlockedmerchantcountriesItemsString[] blocked_merchant_countries?;
    spending_limits_param[] spending_limits?;
    string spending_limits_currency?;
};

public type outbound_transfer_fail_bodyExpandItemsString string;

public type setup_intents_body record {|
    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.
    # 
    # It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    boolean attach_to_self?;
    automatic_payment_methods_param_1 automatic_payment_methods?;
    # Set to `true` to attempt to confirm this SetupIntent immediately. This parameter defaults to `false`. If a card is the attached payment method, you can provide a `return_url` in case further authentication is necessary.
    boolean confirm?;
    # ID of the ConfirmationToken used to confirm this SetupIntent.
    # 
    # If the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.
    @constraint:String {maxLength: 5000}
    string confirmation_token?;
    # ID of the Customer this SetupIntent belongs to, if one exists.
    # 
    # If present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 1000}
    string description?;
    # Specifies which fields in the response should be expanded.
    setup_intents_bodyExpandItemsString[] expand?;
    # Indicates the directions of money movement for which this payment method is intended to be used.
    # 
    # Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
    ("inbound"|"outbound")[] flow_directions?;
    # This hash contains details about the mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm).
    record {record {int accepted_at?; record {} offline?; record {string ip_address; string user_agent;} online?; "offline"|"online" 'type;} customer_acceptance;}|"" mandate_data?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The Stripe account ID created for this SetupIntent.
    string on_behalf_of?;
    # ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # The ID of the payment method configuration to use with this SetupIntent.
    @constraint:String {maxLength: 100}
    string payment_method_configuration?;
    payment_method_data_params_1 payment_method_data?;
    payment_method_options_param_16 payment_method_options?;
    # The list of payment method types (for example, card) that this SetupIntent can use. If you don't provide this, it defaults to ["card"].
    setup_intents_bodyPaymentmethodtypesItemsString[] payment_method_types?;
    # The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. To redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm).
    string return_url?;
    setup_intent_single_use_params single_use?;
    # Indicates how the payment method is intended to be used in the future. If not provided, this value defaults to `off_session`.
    "off_session"|"on_session" usage?;
    # Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.
    boolean use_stripe_sdk?;
|};

# This hash contains whether the pricing table is enabled.
public type Customer_session_resource_components_resource_pricing_table record {
    # Whether the pricing table is enabled.
    boolean enabled;
};

@constraint:String {maxLength: 5000}
public type GetQuotesQueriesExpandItemsString string;

# A list of reversals that have been applied to the transfer.
public type TransferReversalList_1 record {
    # Details about each object.
    Transfer_reversal[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# The cardholder's billing address.
public type billing_specs record {
    required_address address;
};

# Represents the Queries record for the operation: GetSigmaScheduledQueryRunsScheduledQueryRun
public type GetSigmaScheduledQueryRunsScheduledQueryRunQueries record {
    # Specifies which fields in the response should be expanded.
    GetSigmaScheduledQueryRunsScheduledQueryRunQueriesExpandItemsString[] expand?;
};

public type forwarding_requests_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetShippingRates
public type GetShippingRatesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetShippingRatesQueriesExpandItemsString[] expand?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_37 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return shipping rates that are active or inactive.
    boolean active?;
    # Only return shipping rates for the given currency.
    string currency?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type Tax\.registration record {
    int active_from;
    string country;
    Tax_product_registrations_resource_country_options country_options;
    int created;
    int? expires_at?;
    string id;
    boolean livemode;
    "tax.registration" 'object;
    "active"|"expired"|"scheduled" status;
};

# Reboot time settings for readers that support customized reboot time configuration.
public type reboot_window record {
    int end_hour;
    int start_hour;
};

public type subscription_resume_bodyExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_card_checks record {
    # If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_line1_check?;
    # If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_postal_code_check?;
    # If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? cvc_check?;
};

# 
public type Quotes_resource_from_quote record {
    # Whether this quote is a revision of a different quote.
    boolean is_revision;
    # The quote that was cloned.
    string|Quote quote;
};

# Represents the Queries record for the operation: GetIssuingTransactions
public type GetIssuingTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIssuingTransactionsQueriesExpandItemsString[] expand?;
    # Only return transactions that were created during the given date interval.
    created_22 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return transactions that belong to the given cardholder.
    @constraint:String {maxLength: 5000}
    string cardholder?;
    # Only return transactions that have the given type. One of `capture` or `refund`.
    "capture"|"refund" 'type?;
    # Only return transactions that belong to the given card.
    @constraint:String {maxLength: 5000}
    string card?;
};

# 
public type Issuing_dispute_duplicate_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Copy of the card statement showing that the product had already been paid for.
    string|File? card_statement?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Copy of the receipt showing that the product had been paid for in cash.
    string|File? cash_receipt?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Image of the front and back of the check that was used to pay for the product.
    string|File? check_image?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
    # Transaction (e.g., ipi_...) that the disputed transaction is a duplicate of. Of the two or more transactions that are copies of each other, this is original undisputed one.
    string? original_transaction?;
};

public type completed_sessions_params record {
    int 'limit;
};

@constraint:String {maxLength: 5000}
public type Issuing_card_authorization_controlsAllowedmerchantcountriesItemsString string;

public type aba_access record {
    boolean requested;
};

# 
public type Payment_method_details_mobilepay record {
    # Internal card details
    Internal_card? card?;
};

# 
public type Payment_pages_checkout_session_shipping_address_collection record {
    # An array of two-letter ISO country codes representing which countries Checkout should provide as options for
    # shipping locations. Unsupported country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI`.
    ("AC"|"AD"|"AE"|"AF"|"AG"|"AI"|"AL"|"AM"|"AO"|"AQ"|"AR"|"AT"|"AU"|"AW"|"AX"|"AZ"|"BA"|"BB"|"BD"|"BE"|"BF"|"BG"|"BH"|"BI"|"BJ"|"BL"|"BM"|"BN"|"BO"|"BQ"|"BR"|"BS"|"BT"|"BV"|"BW"|"BY"|"BZ"|"CA"|"CD"|"CF"|"CG"|"CH"|"CI"|"CK"|"CL"|"CM"|"CN"|"CO"|"CR"|"CV"|"CW"|"CY"|"CZ"|"DE"|"DJ"|"DK"|"DM"|"DO"|"DZ"|"EC"|"EE"|"EG"|"EH"|"ER"|"ES"|"ET"|"FI"|"FJ"|"FK"|"FO"|"FR"|"GA"|"GB"|"GD"|"GE"|"GF"|"GG"|"GH"|"GI"|"GL"|"GM"|"GN"|"GP"|"GQ"|"GR"|"GS"|"GT"|"GU"|"GW"|"GY"|"HK"|"HN"|"HR"|"HT"|"HU"|"ID"|"IE"|"IL"|"IM"|"IN"|"IO"|"IQ"|"IS"|"IT"|"JE"|"JM"|"JO"|"JP"|"KE"|"KG"|"KH"|"KI"|"KM"|"KN"|"KR"|"KW"|"KY"|"KZ"|"LA"|"LB"|"LC"|"LI"|"LK"|"LR"|"LS"|"LT"|"LU"|"LV"|"LY"|"MA"|"MC"|"MD"|"ME"|"MF"|"MG"|"MK"|"ML"|"MM"|"MN"|"MO"|"MQ"|"MR"|"MS"|"MT"|"MU"|"MV"|"MW"|"MX"|"MY"|"MZ"|"NA"|"NC"|"NE"|"NG"|"NI"|"NL"|"NO"|"NP"|"NR"|"NU"|"NZ"|"OM"|"PA"|"PE"|"PF"|"PG"|"PH"|"PK"|"PL"|"PM"|"PN"|"PR"|"PS"|"PT"|"PY"|"QA"|"RE"|"RO"|"RS"|"RU"|"RW"|"SA"|"SB"|"SC"|"SE"|"SG"|"SH"|"SI"|"SJ"|"SK"|"SL"|"SM"|"SN"|"SO"|"SR"|"SS"|"ST"|"SV"|"SX"|"SZ"|"TA"|"TC"|"TD"|"TF"|"TG"|"TH"|"TJ"|"TK"|"TL"|"TM"|"TN"|"TO"|"TR"|"TT"|"TV"|"TW"|"TZ"|"UA"|"UG"|"US"|"UY"|"UZ"|"VA"|"VC"|"VE"|"VG"|"VN"|"VU"|"WF"|"WS"|"XK"|"YE"|"YT"|"ZA"|"ZM"|"ZW"|"ZZ")[] allowed_countries;
};

# 
public type Setup_attempt_payment_method_details_us_bank_account record {
};

# 
public type Shipping record {
    Address address?;
    # The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
    string? carrier?;
    # Recipient name.
    @constraint:String {maxLength: 5000}
    string name?;
    # Recipient phone (including extension).
    string? phone?;
    # The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
    string? tracking_number?;
};

# 
public type Payment_method_card_wallet record {
    Payment_method_card_wallet_amex_express_checkout amex_express_checkout?;
    Payment_method_card_wallet_apple_pay apple_pay?;
    # (For tokenized numbers only.) The last four digits of the device account number.
    string? dynamic_last4?;
    Payment_method_card_wallet_google_pay google_pay?;
    Payment_method_card_wallet_link link?;
    Payment_method_card_wallet_masterpass masterpass?;
    Payment_method_card_wallet_samsung_pay samsung_pay?;
    # The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
    "amex_express_checkout"|"apple_pay"|"google_pay"|"link"|"masterpass"|"samsung_pay"|"visa_checkout" 'type;
    Payment_method_card_wallet_visa_checkout visa_checkout?;
};

public type balance_transactions_transaction_bodyExpandItemsString string;

# 
public type Received_payment_method_details_financial_account record {
    # The FinancialAccount ID.
    @constraint:String {maxLength: 5000}
    string id;
    # The rails the ReceivedCredit was sent over. A FinancialAccount can only send funds over `stripe`.
    "stripe" network;
};

public type payment_method_attach_bodyExpandItemsString string;

# 
public type Setup_intent_payment_method_options_sepa_debit record {
    Setup_intent_payment_method_options_mandate_options_sepa_debit mandate_options?;
};

public type owner record {
    source_address address?;
    string email?;
    @constraint:String {maxLength: 5000}
    string name?;
    @constraint:String {maxLength: 5000}
    string phone?;
};

public type dispute_close_body_1ExpandItemsString string;

public type issuing_cardholders_bodyExpandItemsString string;

# 
public type Source_order_item record {
    # The amount (price) for this order item.
    int? amount?;
    # This currency of this order item. Required when `amount` is present.
    string? currency?;
    # Human-readable description for this order item.
    string? description?;
    # The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU).
    string? parent?;
    # The quantity of this order item. When type is `sku`, this is the number of instances of the SKU to be ordered.
    int quantity?;
    # The type of this order item. Must be `sku`, `tax`, or `shipping`.
    string? 'type?;
};

# 
public type Checkout_klarna_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# Details about the address from which the goods are being shipped.
public type ship_from_details record {
    merchant_postal_address address;
};

public type external_accounts_id_body record {|
    # The name of the person or business that owns the bank account.
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    # The type of entity that holds the account. This can be either `individual` or `company`.
    ""|"company"|"individual" account_holder_type?;
    # The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.
    "checking"|"futsu"|"savings"|"toza" account_type?;
    # City/District/Suburb/Town/Village.
    @constraint:String {maxLength: 5000}
    string address_city?;
    # Billing address country, if provided when creating card.
    @constraint:String {maxLength: 5000}
    string address_country?;
    # Address line 1 (Street address/PO Box/Company name).
    @constraint:String {maxLength: 5000}
    string address_line1?;
    # Address line 2 (Apartment/Suite/Unit/Building).
    @constraint:String {maxLength: 5000}
    string address_line2?;
    # State/County/Province/Region.
    @constraint:String {maxLength: 5000}
    string address_state?;
    # ZIP or postal code.
    @constraint:String {maxLength: 5000}
    string address_zip?;
    # When set to true, this becomes the default external account for its currency.
    boolean default_for_currency?;
    external_account_documents_param documents?;
    # Two digit number representing the card’s expiration month.
    @constraint:String {maxLength: 5000}
    string exp_month?;
    # Four digit number representing the card’s expiration year.
    @constraint:String {maxLength: 5000}
    string exp_year?;
    # Specifies which fields in the response should be expanded.
    external_accounts_id_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Cardholder name.
    @constraint:String {maxLength: 5000}
    string name?;
|};

# 
public type Issuing_transaction_purchase_details record {
    # Fleet-specific information for transactions using Fleet cards.
    Issuing_transaction_fleet_data? fleet?;
    # Information about the flight that was purchased with this transaction.
    Issuing_transaction_flight_data? flight?;
    # Information about fuel that was purchased with this transaction.
    Issuing_transaction_fuel_data? fuel?;
    # Information about lodging that was purchased with this transaction.
    Issuing_transaction_lodging_data? lodging?;
    # The line items in the purchase.
    Issuing_transaction_receipt_data[]? receipt?;
    # A merchant-specific order number.
    string? reference?;
};

# 
public type Connect_embedded_payouts_features record {
    # Whether to allow payout schedule to be changed. Default `true` when Stripe owns Loss Liability, default `false` otherwise.
    boolean edit_payout_schedule;
    # Whether to allow platforms to control bank account collection for their connected accounts. This feature can only be false for custom accounts (or accounts where the platform is compliance owner). Otherwise, bank account collection is determined by compliance requirements.
    boolean external_account_collection;
    # Whether to allow creation of instant payouts. Default `true` when Stripe owns Loss Liability, default `false` otherwise.
    boolean instant_payouts;
    # Whether to allow creation of standard payouts. Default `true` when Stripe owns Loss Liability, default `false` otherwise.
    boolean standard_payouts;
};

# 
public type Checkout_sofort_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type InvoicesItemsList record {
    Invoiceitem[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/invoiceitems`}
    string url;
};

public type Treasury\.received_credit record {
    int amount;
    int created;
    string currency;
    string description;
    "account_closed"|"account_frozen"|"other"? failure_code?;
    string? financial_account?;
    string? hosted_regulatory_receipt_url?;
    string id;
    Treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details initiating_payment_method_details;
    Treasury_received_credits_resource_linked_flows linked_flows;
    boolean livemode;
    "ach"|"card"|"stripe"|"us_domestic_wire" network;
    "treasury.received_credit" 'object;
    Treasury_received_credits_resource_reversal_details? reversal_details?;
    "failed"|"succeeded" status;
    string|Treasury\.transaction? 'transaction?;
};

public type Financial_connections\.transaction record {
    string account;
    int amount;
    string currency;
    string description;
    string id;
    boolean livemode;
    "financial_connections.transaction" 'object;
    "pending"|"posted"|"void" status;
    Bank_connections_resource_transaction_resource_status_transitions status_transitions;
    int transacted_at;
    string transaction_refresh;
    int updated;
};

public type Source_type_card_present record {
    string application_cryptogram?;
    string application_preferred_name?;
    string? authorization_code?;
    string authorization_response_code?;
    string? brand?;
    string? country?;
    string cvm_type?;
    string? data_type?;
    string dedicated_file_name?;
    string emv_auth_data?;
    string? evidence_customer_signature?;
    string? evidence_transaction_certificate?;
    int? exp_month?;
    int? exp_year?;
    string fingerprint?;
    string? funding?;
    string? last4?;
    string? pos_device_id?;
    string pos_entry_mode?;
    string? read_method?;
    string? reader?;
    string terminal_verification_results?;
    string transaction_status_information?;
};

# Represents a per-transaction override of a reader configuration
public type Terminal_reader_reader_resource_process_config record {
    # Enable customer initiated cancellation when processing this payment.
    boolean enable_customer_cancellation?;
    # Override showing a tipping selection screen on this transaction.
    boolean skip_tipping?;
    Terminal_reader_reader_resource_tipping_config tipping?;
};

# 
public type FileResourceFileList record {
    File[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/files`}
    string url;
};

# 
public type Setup_attempt_payment_method_details_sofort record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Bank Identifier Code of the bank associated with the bank account.
    string? bic?;
    # The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    string|Payment_method? generated_sepa_debit?;
    # The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    string|Mandate? generated_sepa_debit_mandate?;
    # Last four characters of the IBAN.
    string? iban_last4?;
    # Preferred language of the Sofort authorization page that the customer is redirected to.
    # Can be one of `en`, `de`, `fr`, or `nl`
    "de"|"en"|"fr"|"nl"? preferred_language?;
    # Owner's verified full name. Values are verified or provided by Sofort directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryDebitReversalsDebitReversalQueriesExpandItemsString string;

public type intent_verify_microdeposits_body record {|
    # Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.
    int[] amounts?;
    # The client secret of the PaymentIntent.
    @constraint:String {maxLength: 5000}
    string client_secret?;
    # A six-character code starting with SM present in the microdeposit sent to the bank account.
    @constraint:String {maxLength: 5000}
    string descriptor_code?;
    # Specifies which fields in the response should be expanded.
    intent_verify_microdeposits_bodyExpandItemsString[] expand?;
|};

public type account_subscribe_bodyExpandItemsString string;

# 
public type Payment_method_card_present record {
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? brand?;
    # The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.
    string? cardholder_name?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    # The last four digits of the card.
    string? last4?;
    # Contains information about card networks that can be used to process the payment.
    Payment_method_card_present_networks? networks?;
    # EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.
    Payment_method_card_presentPreferredlocalesItemsString[]? preferred_locales?;
    # How card details were read in this transaction.
    "contact_emv"|"contactless_emv"|"contactless_magstripe_mode"|"magnetic_stripe_fallback"|"magnetic_stripe_track2"? read_method?;
};

public type billing_portal_configurations_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryReceivedDebitsIdQueriesExpandItemsString string;

public type configurations_configuration_body_1 record {|
    # An object containing device type specific settings for BBPOS WisePOS E readers
    record {string|"" splashscreen?;}|"" bbpos_wisepos_e?;
    # Specifies which fields in the response should be expanded.
    configurations_configuration_body_1ExpandItemsString[] expand?;
    # Name of the configuration
    @constraint:String {maxLength: 100}
    string name?;
    # Configurations for collecting transactions offline.
    record {boolean enabled;}|"" offline?;
    # Reboot time settings for readers that support customized reboot time configuration.
    record {int end_hour; int start_hour;}|"" reboot_window?;
    # An object containing device type specific settings for Stripe S700 readers
    record {string|"" splashscreen?;}|"" stripe_s700?;
    # Tipping configurations for readers supporting on-reader tips
    record {record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} aud?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} cad?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} chf?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} czk?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} dkk?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} eur?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} gbp?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} hkd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} myr?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} nok?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} nzd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} sek?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} sgd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} usd?;}|"" tipping?;
    # An object containing device type specific settings for Verifone P400 readers
    record {string|"" splashscreen?;}|"" verifone_p400?;
|};

public type schedule_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    schedule_cancel_bodyExpandItemsString[] expand?;
    # If the subscription schedule is `active`, indicates if a final invoice will be generated that contains any un-invoiced metered usage and new/pending proration invoice items. Defaults to `true`.
    boolean invoice_now?;
    # If the subscription schedule is `active`, indicates if the cancellation should be prorated. Defaults to `true`.
    boolean prorate?;
|};

public type session_redact_body record {|
    # Specifies which fields in the response should be expanded.
    session_redact_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_pages_checkout_session_tax_id record {
    # The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eu_oss_vat`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, or `unknown`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"unknown"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # The value of the tax ID.
    string? value?;
};

public type sources_source_bodyExpandItemsString string;

# 
public type Issuing_card_wallets record {
    Issuing_card_apple_pay apple_pay;
    Issuing_card_google_pay google_pay;
    # Unique identifier for a card used with digital wallets
    string? primary_account_identifier?;
};

public type subscription_data_paramsDefaulttaxratesItemsString string;

# 
public type Source_transaction_gbp_credit_transfer_data record {
    # Bank account fingerprint associated with the Stripe owned bank account receiving the transfer.
    @constraint:String {maxLength: 5000}
    string fingerprint?;
    # The credit transfer rails the sender used to push this transfer. The possible rails are: Faster Payments, BACS, CHAPS, and wire transfers. Currently only Faster Payments is supported.
    @constraint:String {maxLength: 5000}
    string funding_method?;
    # Last 4 digits of sender account number associated with the transfer.
    @constraint:String {maxLength: 5000}
    string last4?;
    # Sender entered arbitrary information about the transfer.
    @constraint:String {maxLength: 5000}
    string reference?;
    # Sender account number associated with the transfer.
    @constraint:String {maxLength: 5000}
    string sender_account_number?;
    # Sender name associated with the transfer.
    @constraint:String {maxLength: 5000}
    string sender_name?;
    # Sender sort code associated with the transfer.
    @constraint:String {maxLength: 5000}
    string sender_sort_code?;
};

# 
public type Climate_removals_products_price record {
    # Fees for one metric ton of carbon removal in the currency's smallest unit.
    int amount_fees;
    # Subtotal for one metric ton of carbon removal (excluding fees) in the currency's smallest unit.
    int amount_subtotal;
    # Total for one metric ton of carbon removal (including fees) in the currency's smallest unit.
    int amount_total;
};

# 
public type Tax_product_registrations_resource_country_options_default record {
    # Type of registration in `country`.
    "standard" 'type;
};

public type customer_sessions_bodyExpandItemsString string;

# 
public type Issuing_dispute_no_valid_authorization_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
};

public type Source_type_ach_credit_transfer record {
    string? account_number?;
    string? bank_name?;
    string? fingerprint?;
    string? refund_account_holder_name?;
    string? refund_account_holder_type?;
    string? refund_routing_number?;
    string? routing_number?;
    string? swift_code?;
};

# 
public type Promotion_code_currency_option record {
    # Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).
    int minimum_amount;
};

# 
public type Payment_flows_private_payment_methods_us_bank_account_linked_account_options_filters record {
    # The account subcategories to use to filter for possible accounts to link. Valid subcategories are `checking` and `savings`.
    ("checking"|"savings")[] account_subcategories?;
};

# Represents the Queries record for the operation: GetReviews
public type GetReviewsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetReviewsQueriesExpandItemsString[] expand?;
    # Only return reviews that were created during the given date interval.
    created_34 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetBalanceHistoryIdQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Account_requirements_alternativeAlternativefieldsdueItemsString string;

# Represents the Queries record for the operation: GetIssuingTransactionsTransaction
public type GetIssuingTransactionsTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingTransactionsTransactionQueriesExpandItemsString[] expand?;
};

# 
public type Payment_method_details_acss_debit record {
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Institution number of the bank account
    string? institution_number?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    @constraint:String {maxLength: 5000}
    string mandate?;
    # Transit number of the bank account.
    string? transit_number?;
};

# 
public type Payment_method_card record {
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    @constraint:String {maxLength: 5000}
    string brand;
    # Checks on Card address and CVC if provided.
    Payment_method_card_checks? checks?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # The brand to use when displaying the card, this accounts for customer's brand choice on dual-branded cards. Can be `american_express`, `cartes_bancaires`, `diners_club`, `discover`, `eftpos_australia`, `interac`, `jcb`, `mastercard`, `union_pay`, `visa`, or `other` and may contain more values in the future.
    string? display_brand?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    @constraint:String {maxLength: 5000}
    string funding;
    # Details of the original PaymentMethod that created this object.
    Payment_method_card_generated_card? generated_from?;
    # The last four digits of the card.
    @constraint:String {maxLength: 5000}
    string last4;
    # Contains information about card networks that can be used to process the payment.
    Networks? networks?;
    # Contains details on how this Card may be used for 3D Secure authentication.
    Three_d_secure_usage? three_d_secure_usage?;
    # If this Card is part of a card wallet, this contains the details of the card wallet.
    Payment_method_card_wallet? wallet?;
};

@constraint:String {maxLength: 5000}
public type GetTestHelpersTestClocksQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetClimateSuppliers
public type GetClimateSuppliersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetClimateSuppliersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryInboundTransfersQueriesExpandItemsString string;

public type authorization_decline_bodyExpandItemsString string;

# 
public type BankConnectionsResourceLinkedAccountList record {
    # Details about each object.
    Financial_connections\.account[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/financial_connections/accounts`}
    string url;
};

public type customer_bank_accounts_body record {|
    # A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.
    @constraint:String {maxLength: 5000}
    string alipay_account?;
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; string country; string currency?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    # A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string cvc?; int exp_month; int exp_year; record {|string...;|} metadata?; string name?; string number; "card" 'object?;}|string card?;
    # Specifies which fields in the response should be expanded.
    customer_bank_accounts_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Please refer to full [documentation](https://stripe.com/docs/api) instead.
    @constraint:String {maxLength: 5000}
    string 'source?;
|};

public type DefaulttaxratesItemsString string;

# 
public type Shipping_rate_fixed_amount record {
    # A non-negative integer in cents representing how much to charge.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Shipping rates defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|Shipping_rate_currency_option...;|} currency_options?;
};

public type topups_body record {|
    # A positive integer representing how much to transfer.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    topups_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The ID of a source to transfer funds from. For most users, this should be left unspecified which will use the bank account that was set up in the dashboard for the specified currency. In test mode, this can be a test bank token (see [Testing Top-ups](https://stripe.com/docs/connect/testing#testing-top-ups)).
    @constraint:String {maxLength: 5000}
    string 'source?;
    # Extra information about a top-up for the source's bank statement. Limited to 15 ASCII characters.
    @constraint:String {maxLength: 15}
    string statement_descriptor?;
    # A string that identifies this top-up as part of a group.
    string transfer_group?;
|};

public type completed_at record {int gt?; int gte?; int lt?; int lte?;}|int;

# The default settings to aggregate a meter's events with.
public type aggregation_settings_param record {
    "count"|"sum" formula;
};

public type three_d_secure_specs record {
    "attempt_acknowledged"|"authenticated"|"failed"|"required" result;
};

@constraint:String {maxLength: 5000}
public type GetIdentityVerificationReportsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetFinancialConnectionsAccountsAccountQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetApplePayDomains
public type GetApplePayDomainsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    @constraint:String {maxLength: 5000}
    string domain_name?;
    # Specifies which fields in the response should be expanded.
    GetApplePayDomainsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type outbound_transfer_return_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerSubscriptionsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Issuing_card_authorization_controlsBlockedmerchantcountriesItemsString string;

@constraint:String {maxLength: 5000}
public type GetTransfersTransferQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerSourcesIdQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetSourcesSourceMandateNotificationsMandateNotification
public type GetSourcesSourceMandateNotificationsMandateNotificationQueries record {
    # Specifies which fields in the response should be expanded.
    GetSourcesSourceMandateNotificationsMandateNotificationQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetRadarValueListItemsItem
public type GetRadarValueListItemsItemQueries record {
    # Specifies which fields in the response should be expanded.
    GetRadarValueListItemsItemQueriesExpandItemsString[] expand?;
};

public type discounts_data_param record {
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string discount?;
    @constraint:String {maxLength: 5000}
    string promotion_code?;
};

public type ephemeral_keys_key_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetSourcesSourceSourceTransactionsSourceTransactionQueriesExpandItemsString string;

public type ProductsItemsObjectPricesItemsString string;

# 
public type Subscriptions_resource_billing_cycle_anchor_config record {
    # The day of the month of the billing_cycle_anchor.
    int day_of_month;
    # The hour of the day of the billing_cycle_anchor.
    int? hour?;
    # The minute of the hour of the billing_cycle_anchor.
    int? minute?;
    # The month to start full cycle billing periods.
    int? month?;
    # The second of the minute of the billing_cycle_anchor.
    int? second?;
};

# Information for the person this token represents.
public type person_token_specs record {
    person_additional_tos_acceptances_specs_1 additional_tos_acceptances?;
    legal_entity_and_kyc_address_specs address?;
    japan_address_kana_specs address_kana?;
    japan_address_kanji_specs address_kanji?;
    record {int day; int month; int year;}|"" dob?;
    person_documents_specs_1 documents?;
    string email?;
    @constraint:String {maxLength: 5000}
    string first_name?;
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    string gender?;
    @constraint:String {maxLength: 5000}
    string id_number?;
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    @constraint:String {maxLength: 5000}
    string last_name?;
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    record {|string...;|}|"" metadata?;
    @constraint:String {maxLength: 5000}
    string nationality?;
    string phone?;
    @constraint:String {maxLength: 5000}
    string political_exposure?;
    address_specs registered_address?;
    relationship_specs_1 relationship?;
    string ssn_last_4?;
    person_verification_specs verification?;
};

public type promotion_codes_bodyExpandItemsString string;

public type configurations_configuration_bodyExpandItemsString string;

# 
public type Account_requirements_alternative record {
    # Fields that can be provided to satisfy all fields in `original_fields_due`.
    Account_requirements_alternativeAlternativefieldsdueItemsString[] alternative_fields_due;
    # Fields that are due and can be satisfied by providing all fields in `alternative_fields_due`.
    Account_requirements_alternativeOriginalfieldsdueItemsString[] original_fields_due;
};

public type invoiceitems_body record {|
    # The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. Passing in a negative `amount` will reduce the `amount_due` on the invoice.
    int amount?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # The ID of the customer who will be billed when this invoice item is billed.
    @constraint:String {maxLength: 5000}
    string customer;
    # An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.
    @constraint:String {maxLength: 5000}
    string description?;
    # Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items.
    boolean discountable?;
    # The coupons and promotion codes to redeem into discounts for the invoice item or invoice line item.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    invoiceitems_bodyExpandItemsString[] expand?;
    # The ID of an existing invoice to add this invoice item to. When left blank, the invoice item will be added to the next upcoming scheduled invoice. This is useful when adding invoice items in response to an invoice.created webhook. You can only add invoice items to draft invoices and there is a maximum of 250 items per invoice.
    @constraint:String {maxLength: 5000}
    string invoice?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    period period?;
    # The ID of the price object. One of `price` or `price_data` is required.
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data price_data?;
    # Non-negative integer. The quantity of units for the invoice item.
    int quantity?;
    # The ID of a subscription to add this invoice item to. When left blank, the invoice item is added to the next upcoming scheduled invoice. When set, scheduled invoices for subscriptions other than the specified subscription will ignore the invoice item. Use this when you want to express that an invoice item has been accrued within the context of a particular subscription.
    @constraint:String {maxLength: 5000}
    string subscription?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    string|"" tax_code?;
    # The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.
    invoiceitems_bodyTaxratesItemsString[] tax_rates?;
    # The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This `unit_amount` will be multiplied by the quantity to get the full amount. Passing in a negative `unit_amount` will reduce the `amount_due` on the invoice.
    int unit_amount?;
    # Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.
    string unit_amount_decimal?;
|};

public type treasury_received_credits_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerDiscountQueriesExpandItemsString string;

# 
public type Legal_entity_japan_address record {
    # City/Ward.
    string? city?;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    string? country?;
    # Block/Building number.
    string? line1?;
    # Building details.
    string? line2?;
    # ZIP or postal code.
    string? postal_code?;
    # Prefecture.
    string? state?;
    # Town/cho-me.
    string? town?;
};

# 
public type Issuing_authorization_fleet_cardholder_prompt_data record {
    # [Deprecated] An alphanumeric ID, though typical point of sales only support numeric entry. The card program can be configured to prompt for a vehicle ID, driver ID, or generic ID.
    string? alphanumeric_id?;
    # Driver ID.
    string? driver_id?;
    # Odometer reading.
    int? odometer?;
    # An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type.
    string? unspecified_id?;
    # User ID.
    string? user_id?;
    # Vehicle number.
    string? vehicle_number?;
};

public type payment_method_options record {
    record {record {"business"|"personal" transaction_type?;} mandate_options?; "automatic"|"instant"|"microdeposits" verification_method?;}|"" acss_debit?;
    record {"de"|"en"|"fr"|"nl" preferred_language?;}|"" bancontact?;
    record {record {int amount?; "fixed"|"maximum" amount_type?; string description?;} mandate_options?; "amex"|"cartes_bancaires"|"diners"|"discover"|"eftpos_au"|"interac"|"jcb"|"mastercard"|"unionpay"|"unknown"|"visa" network?; "any"|"automatic"|"challenge" request_three_d_secure?;}|"" card?;
    record {record {record {string country;} eu_bank_transfer?; string 'type?;} bank_transfer?; string funding_type?;}|"" customer_balance?;
    record {}|"" konbini?;
    record {}|"" sepa_debit?;
    record {record {record {("checking"|"savings")[] account_subcategories?;} filters?; (financial_connectionsPermissionsItemsString)[] permissions?; ("balances"|"ownership"|"transactions")[] prefetch?;} financial_connections?; "automatic"|"instant"|"microdeposits" verification_method?;}|"" us_bank_account?;
};

@constraint:String {maxLength: 5000}
public type GetRadarValueListsQueriesExpandItemsString string;

public type authorization_expire_bodyExpandItemsString string;

public type Treasury\.received_debit record {
    int amount;
    int created;
    string currency;
    string description;
    "account_closed"|"account_frozen"|"insufficient_funds"|"other"? failure_code?;
    string? financial_account?;
    string? hosted_regulatory_receipt_url?;
    string id;
    Treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details initiating_payment_method_details?;
    Treasury_received_debits_resource_linked_flows linked_flows;
    boolean livemode;
    "ach"|"card"|"stripe" network;
    "treasury.received_debit" 'object;
    Treasury_received_debits_resource_reversal_details? reversal_details?;
    "failed"|"succeeded" status;
    string|Treasury\.transaction? 'transaction?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryTransactionEntriesQueriesExpandItemsString string;

public type treasury_financial_accounts_body record {|
    # Specifies which fields in the response should be expanded.
    treasury_financial_accounts_bodyExpandItemsString[] expand?;
    feature_access features?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    platform_restrictions platform_restrictions?;
    # The currencies the FinancialAccount can hold a balance in.
    treasury_financial_accounts_bodySupportedcurrenciesItemsString[] supported_currencies;
|};

@constraint:String {maxLength: 5000}
public type GetTreasuryTransactionsIdQueriesExpandItemsString string;

# 
public type Currency_option record {
    # When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.
    Custom_unit_amount? custom_unit_amount?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified"? tax_behavior?;
    # Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    Price_tier[] tiers?;
    # The unit amount in cents (or local equivalent) to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.
    int? unit_amount?;
    # The unit amount in cents (or local equivalent) to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.
    string? unit_amount_decimal?;
};

# 
public type Sigma_scheduled_query_run_error record {
    # Information about the run failure.
    @constraint:String {maxLength: 5000}
    string message;
};

# 
public type Portal_subscription_cancellation_reason record {
    # Whether the feature is enabled.
    boolean enabled;
    # Which cancellation reasons will be given as options to the customer.
    ("customer_service"|"low_quality"|"missing_features"|"other"|"switched_service"|"too_complex"|"too_expensive"|"unused")[] options;
};

# 
public type Online_acceptance record {
    # The customer accepts the mandate from this IP address.
    string? ip_address?;
    # The customer accepts the mandate using the user agent of the browser.
    string? user_agent?;
};

public type invoice_mark_uncollectible_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_mark_uncollectible_bodyExpandItemsString[] expand?;
|};

public type Invoice_setting_subscription_schedule_settingAccounttaxidsItemsnull string|Tax_id|Deleted_tax_id;

public type fleet_reported_breakdown_specs record {
    fleet_reported_breakdown_fuel_specs fuel?;
    fleet_reported_breakdown_non_fuel_specs non_fuel?;
    fleet_reported_breakdown_tax_specs tax?;
};

# 
public type Payment_method_details_customer_balance record {
};

# Represents the Queries record for the operation: GetBillingMeters
public type GetBillingMetersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetBillingMetersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Filter results to only include meters with the given status.
    "active"|"inactive" status?;
};

# Usage records allow you to report customer usage and metrics to Stripe for
# metered billing of subscription prices.
# 
# Related guide: [Metered billing](https://stripe.com/docs/billing/subscriptions/metered-billing)
# 
# This is our legacy usage-based billing API. See the [updated usage-based billing docs](https://docs.stripe.com/billing/subscriptions/usage-based).
public type Usage_record record {
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "usage_record" 'object;
    # The usage quantity for the specified date.
    int quantity;
    # The ID of the subscription item this usage record contains data for.
    @constraint:String {maxLength: 5000}
    string subscription_item;
    # The timestamp when this usage occurred.
    int timestamp;
};

public type company_ownership_declaration record {
    int date?;
    string ip?;
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

public type cardholders_cardholder_body record {|
    billing_specs billing?;
    company_param company?;
    # The cardholder's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    cardholders_cardholder_bodyExpandItemsString[] expand?;
    individual_param individual?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The cardholder's phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure) for more details.
    string phone_number?;
    # The cardholder’s preferred locales (languages), ordered by preference. Locales can be `de`, `en`, `es`, `fr`, or `it`.
    #  This changes the language of the [3D Secure flow](https://stripe.com/docs/issuing/3d-secure) and one-time password messages sent to the cardholder.
    ("de"|"en"|"es"|"fr"|"it")[] preferred_locales?;
    authorization_controls_param_v2 spending_controls?;
    # Specifies whether to permit authorizations on this cardholder's cards.
    "active"|"inactive" status?;
|};

# 
public type ShippingResourcesShippingRateList record {
    Shipping_rate[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/shipping_rates`}
    string url;
};

public type lines_data_param record {
    int amount?;
    @constraint:String {maxLength: 5000}
    string description?;
    boolean discountable?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string invoice_item?;
    record {|string...;|}|"" metadata?;
    period_1 period?;
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data_with_product_data price_data?;
    int quantity?;
    record {int amount; record {string country?; string description?; string display_name; boolean inclusive; string jurisdiction?; decimal percentage; string state?; "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;} tax_rate_data; int taxable_amount;}[]|"" tax_amounts?;
    TaxratesItemsString[]|"" tax_rates?;
};

# 
public type ApplePayDomainList record {
    Apple_pay_domain[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/apple_pay/domains`}
    string url;
};

# 
public type Charge_outcome record {
    # Possible values are `approved_by_network`, `declined_by_network`, `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval` indicates the payment was [blocked by Stripe](https://stripe.com/docs/declines#blocked-payments) after bank authorization, and may temporarily appear as "pending" on a cardholder's statement.
    string? network_status?;
    # An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https://stripe.com/docs/declines) for more details.
    string? reason?;
    # Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are `normal`, `elevated`, `highest`. For non-card payments, and card-based payments predating the public assignment of risk levels, this field will have the value `not_assessed`. In the event of an error in the evaluation, this field will have the value `unknown`. This field is only available with Radar.
    @constraint:String {maxLength: 5000}
    string risk_level?;
    # Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are between 0 and 100. For non-card payments, card-based payments predating the public assignment of risk scores, or in the event of an error during evaluation, this field will not be present. This field is only available with Radar for Fraud Teams.
    int risk_score?;
    # The ID of the Radar rule that matched the payment, if applicable.
    string|Rule rule?;
    # A human-readable description of the outcome type and reason, designed for you (the recipient of the payment), not your customer.
    string? seller_message?;
    # Possible values are `authorized`, `manual_review`, `issuer_declined`, `blocked`, and `invalid`. See [understanding declines](https://stripe.com/docs/declines) and [Radar reviews](https://stripe.com/docs/radar/reviews) for details.
    @constraint:String {maxLength: 5000}
    string 'type;
};

public type authorizations_authorization_body record {|
    # Specifies which fields in the response should be expanded.
    authorizations_authorization_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# A Customer Session allows you to grant Stripe's frontend SDKs (like Stripe.js) client-side access
# control over a Customer.
public type Customer_session record {
    # The client secret of this Customer Session. Used on the client to set up secure access to the given `customer`.
    # 
    # The client secret can be used to provide access to `customer` from your frontend. It should not be stored, logged, or exposed to anyone other than the relevant customer. Make sure that you have TLS enabled on any page that includes the client secret.
    @constraint:String {maxLength: 5000}
    string client_secret;
    Customer_session_resource_components components?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The Customer the Customer Session was created for.
    string|Customer customer;
    # The timestamp at which this Customer Session will expire.
    int expires_at;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "customer_session" 'object;
};

# Represents the Queries record for the operation: GetIssuingCardsCard
public type GetIssuingCardsCardQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingCardsCardQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetPromotionCodesQueriesExpandItemsString string;

# 
public type RadarListListList record {
    Radar\.value_list[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/radar/value_lists`}
    string url;
};

# Represents the Queries record for the operation: GetTaxCodesId
public type GetTaxCodesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxCodesIdQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetRadarValueLists
public type GetRadarValueListsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # A value contained within a value list - returns all value lists containing this value.
    @constraint:String {maxLength: 800}
    string contains?;
    # Specifies which fields in the response should be expanded.
    GetRadarValueListsQueriesExpandItemsString[] expand?;
    # Only return value lists that were created during the given date interval.
    created_31 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # The alias used to reference the value list when writing rules.
    @constraint:String {maxLength: 100}
    string alias?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type bank_account_ownership_verificationFilesItemsString string;

public type sources_bodyExpandItemsString string;

public type treasury_financial_accounts_bodyExpandItemsString string;

# 
public type Payment_method_details_us_bank_account record {
    # Account holder type: individual or company.
    "company"|"individual"? account_holder_type?;
    # Account type: checkings or savings. Defaults to checking if omitted.
    "checking"|"savings"? account_type?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    string|Mandate mandate?;
    # Reference number to locate ACH payments with customer's bank.
    string? payment_reference?;
    # Routing number of the bank account.
    string? routing_number?;
};

public type setup_intent_payment_method_options_param record {
    "cad"|"usd" currency?;
    setup_intent_payment_method_options_mandate_options_param mandate_options?;
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# 
public type Portal_business_profile record {
    # The messaging shown to customers in the portal.
    string? headline?;
    # A link to the business’s publicly available privacy policy.
    string? privacy_policy_url?;
    # A link to the business’s publicly available terms of service.
    string? terms_of_service_url?;
};

public type session_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    session_cancel_bodyExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type GetTreasuryTransactionEntriesIdQueriesExpandItemsString string;

# Result from an id_number check
public type Gelato_id_number_report record {
    # Date of birth.
    Gelato_data_id_number_report_date? dob?;
    # Details on the verification error. Present when status is `unverified`.
    Gelato_id_number_report_error? 'error?;
    # First name.
    string? first_name?;
    # ID number. When `id_number_type` is `us_ssn`, only the last 4 digits are present.
    string? id_number?;
    # Type of ID number.
    "br_cpf"|"sg_nric"|"us_ssn"? id_number_type?;
    # Last name.
    string? last_name?;
    # Status of this `id_number` check.
    "unverified"|"verified" status;
};

# 
public type Payment_intent_payment_method_options_blik record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type Source_type_ach_debit record {
    string? bank_name?;
    string? country?;
    string? fingerprint?;
    string? last4?;
    string? routing_number?;
    string? 'type?;
};

# Represents the Queries record for the operation: GetPaymentMethodsPaymentMethod
public type GetPaymentMethodsPaymentMethodQueries record {
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodsPaymentMethodQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingCardholdersQueriesExpandItemsString string;

# 
public type Account_tos_acceptance record {
    # The Unix timestamp marking when the account representative accepted their service agreement
    int? date?;
    # The IP address from which the account representative accepted their service agreement
    string? ip?;
    # The user's service agreement type
    @constraint:String {maxLength: 5000}
    string service_agreement?;
    # The user agent of the browser from which the account representative accepted their service agreement
    string? user_agent?;
};

public type InvoiceDiscountsItemsnull string|Discount|Deleted_discount;

public type reader_process_payment_intent_bodyExpandItemsString string;

public type intent_capture_body record {|
    # The amount to capture from the PaymentIntent, which must be less than or equal to the original amount. Any additional amount is automatically refunded. Defaults to the full `amount_capturable` if it's not provided.
    int amount_to_capture?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    int application_fee_amount?;
    # Specifies which fields in the response should be expanded.
    intent_capture_bodyExpandItemsString[] expand?;
    # Defaults to `true`. When capturing a PaymentIntent, setting `final_capture` to `false` notifies Stripe to not release the remaining uncaptured funds to make sure that they're captured in future requests. You can only use this setting when [multicapture](https://stripe.com/docs/payments/multicapture) is available for PaymentIntents.
    boolean final_capture?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # For card charges, use [statement_descriptor_suffix](https://stripe.com/docs/payments/account/statement-descriptors#dynamic). Otherwise, you can use this value as the complete description of a charge on your customers' statements. It must contain at least one letter and be 1–22 characters long.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. The concatenated descriptor must be 1-22 characters long.
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_update_params_1 transfer_data?;
|};

public type one_time_price_data_with_negative_amounts record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

# Details about the response from the destination endpoint.
public type Forwarded_response_details record {
    # The response body from the destination endpoint to Stripe.
    @constraint:String {maxLength: 5000}
    string body;
    # HTTP headers that the destination endpoint returned.
    Forwarded_request_header[] headers;
    # The HTTP status code that the destination endpoint returned.
    int status;
};

# Represents the Queries record for the operation: GetBalanceTransactionsId
public type GetBalanceTransactionsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetBalanceTransactionsIdQueriesExpandItemsString[] expand?;
};

public type account_external_accounts_bodyExpandItemsString string;

public type bacs_debit_payments_specs record {
    string display_name?;
};

@constraint:String {maxLength: 5000}
public type GetCountrySpecsCountryQueriesExpandItemsString string;

# 
public type Connect_account_reference record {
    # The connected account being referenced when `type` is `account`.
    string|Account account?;
    # Type of the account referenced.
    "account"|"self" 'type;
};

# 
public type Issuing_cardholder_requirements record {
    # If `disabled_reason` is present, all cards will decline authorizations with `cardholder_verification_required` reason.
    "listed"|"rejected.listed"|"requirements.past_due"|"under_review"? disabled_reason?;
    # Array of fields that need to be collected in order to verify and re-enable the cardholder.
    ("company.tax_id"|"individual.card_issuing.user_terms_acceptance.date"|"individual.card_issuing.user_terms_acceptance.ip"|"individual.dob.day"|"individual.dob.month"|"individual.dob.year"|"individual.first_name"|"individual.last_name"|"individual.verification.document")[]? past_due?;
};

# Represents the Queries record for the operation: GetSetupIntents
public type GetSetupIntentsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSetupIntentsQueriesExpandItemsString[] expand?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_36 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.
    # 
    # It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    boolean attach_to_self?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return SetupIntents that associate with the specified payment method.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # Only return SetupIntents for the customer specified by this customer ID.
    @constraint:String {maxLength: 5000}
    string customer?;
};

# Represents the Queries record for the operation: GetProductsProductFeaturesId
public type GetProductsProductFeaturesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetProductsProductFeaturesIdQueriesExpandItemsString[] expand?;
};

public type param_6 record {
    @constraint:String {maxLength: 5000}
    string tax_id;
};

# 
public type Treasury_shared_resource_initiating_payment_method_details_us_bank_account record {
    # Bank name.
    string? bank_name?;
    # The last four digits of the bank account number.
    string? last4?;
    # The routing number for the bank account.
    string? routing_number?;
};

public type param_7 record {
    "arzte_und_apotheker_bank"|"austrian_anadi_bank_ag"|"bank_austria"|"bankhaus_carl_spangler"|"bankhaus_schelhammer_und_schattera_ag"|"bawag_psk_ag"|"bks_bank_ag"|"brull_kallmus_bank_ag"|"btv_vier_lander_bank"|"capital_bank_grawe_gruppe_ag"|"deutsche_bank_ag"|"dolomitenbank"|"easybank_ag"|"erste_bank_und_sparkassen"|"hypo_alpeadriabank_international_ag"|"hypo_bank_burgenland_aktiengesellschaft"|"hypo_noe_lb_fur_niederosterreich_u_wien"|"hypo_oberosterreich_salzburg_steiermark"|"hypo_tirol_bank_ag"|"hypo_vorarlberg_bank_ag"|"marchfelder_bank"|"oberbank_ag"|"raiffeisen_bankengruppe_osterreich"|"schoellerbank_ag"|"sparda_bank_wien"|"volksbank_gruppe"|"volkskreditbank_ag"|"vr_bank_braunau" bank?;
};

# 
public type Treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details record {
    # Set when `type` is `balance`.
    "payments" balance?;
    Treasury_shared_resource_billing_details billing_details;
    Received_payment_method_details_financial_account financial_account?;
    # Set when `type` is `issuing_card`. This is an [Issuing Card](https://stripe.com/docs/api#issuing_cards) ID.
    @constraint:String {maxLength: 5000}
    string issuing_card?;
    # Polymorphic type matching the originating money movement's source. This can be an external account, a Stripe balance, or a FinancialAccount.
    "balance"|"financial_account"|"issuing_card"|"stripe"|"us_bank_account" 'type;
    Treasury_shared_resource_initiating_payment_method_details_us_bank_account us_bank_account?;
};

public type param_8 record {
    "affin_bank"|"agrobank"|"alliance_bank"|"ambank"|"bank_islam"|"bank_muamalat"|"bank_of_china"|"bank_rakyat"|"bsn"|"cimb"|"deutsche_bank"|"hong_leong_bank"|"hsbc"|"kfh"|"maybank2e"|"maybank2u"|"ocbc"|"pb_enterprise"|"public_bank"|"rhb"|"standard_chartered"|"uob" bank;
};

@constraint:String {maxLength: 5000}
public type GetTopupsTopupQueriesExpandItemsString string;

public type param_9 record {
    "abn_amro"|"asn_bank"|"bunq"|"handelsbanken"|"ing"|"knab"|"moneyou"|"n26"|"nn"|"rabobank"|"regiobank"|"revolut"|"sns_bank"|"triodos_bank"|"van_lanschot"|"yoursafe" bank?;
};

# 
public type SubscriptionsSubscriptionList record {
    Subscription[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/subscriptions`}
    string url;
};

public type param_2 record {
    string account?;
    "account"|"self" 'type;
};

# 
public type Tax_product_resource_tax_transaction_line_item_resource_reversal record {
    # The `id` of the line item to reverse in the original transaction.
    @constraint:String {maxLength: 5000}
    string original_line_item;
};

@constraint:String {maxLength: 5000}
public type GetCheckoutSessionsSessionQueriesExpandItemsString string;

public type param_3 record {
    string account?;
    "account"|"self" 'type;
};

# Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products.
# [Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices. This approach lets you change prices without having to change your provisioning scheme.
# 
# For example, you might have a single "gold" product that has prices for $10/month, $100/year, and €9 once.
# 
# Related guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription), [create an invoice](https://stripe.com/docs/billing/invoices/create), and more about [products and prices](https://stripe.com/docs/products-prices/overview).
public type Price record {
    # Whether the price can be used for new purchases.
    boolean active;
    # Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.
    "per_unit"|"tiered" billing_scheme;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|Currency_option...;|} currency_options?;
    # When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.
    Custom_unit_amount? custom_unit_amount?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.
    string? lookup_key?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # A brief description of the price, hidden from customers.
    string? nickname?;
    # String representing the object's type. Objects of the same type share the same value.
    "price" 'object;
    # The ID of the product this price is associated with.
    string|Product|Deleted_product product;
    # The recurring components of a price such as `interval` and `usage_type`.
    Recurring? recurring?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified"? tax_behavior?;
    # Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    Price_tier[] tiers?;
    # Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.
    "graduated"|"volume"? tiers_mode?;
    # Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.
    Transform_quantity? transform_quantity?;
    # One of `one_time` or `recurring` depending on whether the price is for a one-time purchase or a recurring (subscription) purchase.
    "one_time"|"recurring" 'type;
    # The unit amount in cents (or local equivalent) to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.
    int? unit_amount?;
    # The unit amount in cents (or local equivalent) to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.
    string? unit_amount_decimal?;
};

public type param_4 record {
    @constraint:String {maxLength: 5000}
    string account_number;
    @constraint:String {maxLength: 5000}
    string bsb_number;
};

@constraint:String {maxLength: 5000}
public type Issuing_cardholder_authorization_controlsBlockedmerchantcountriesItemsString string;

# 
public type Application_fee record {
    # ID of the Stripe account this fee was taken from.
    string|Account account;
    # Amount earned, in cents (or local equivalent).
    int amount;
    # Amount in cents (or local equivalent) refunded (can be less than the amount attribute on the fee if a partial refund was issued)
    int amount_refunded;
    # ID of the Connect application that earned the fee.
    string|Application application;
    # Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).
    string|Balance_transaction? balance_transaction?;
    # ID of the charge that the application fee was taken from.
    string|Charge charge;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Polymorphic source of the application fee. Includes the ID of the object the application fee was created from.
    Platform_earning_fee_source? fee_source?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "application_fee" 'object;
    # ID of the corresponding charge on the platform account, if this fee was the result of a charge using the `destination` parameter.
    string|Charge? originating_transaction?;
    # Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.
    boolean refunded;
    FeeRefundList_1 refunds;
};

public type param_5 record {
    @constraint:String {maxLength: 5000}
    string account_number?;
    @constraint:String {maxLength: 5000}
    string sort_code?;
};

# If this is an `us_bank_account` PaymentMethod, this hash contains details about the US bank account payment method.
public type update_param record {
    "company"|"individual" account_holder_type?;
    "checking"|"savings" account_type?;
};

# 
public type Deleted_application record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The name of the application.
    string? name?;
    # String representing the object's type. Objects of the same type share the same value.
    "application" 'object;
};

# 
public type Tax_id_verification record {
    # Verification status, one of `pending`, `verified`, `unverified`, or `unavailable`.
    "pending"|"unavailable"|"unverified"|"verified" status;
    # Verified address.
    string? verified_address?;
    # Verified name.
    string? verified_name?;
};

public type payment_method_attach_body record {|
    # The ID of the customer to which to attach the PaymentMethod.
    @constraint:String {maxLength: 5000}
    string customer;
    # Specifies which fields in the response should be expanded.
    payment_method_attach_bodyExpandItemsString[] expand?;
|};

public type bank_accounts_id_body record {|
    # The name of the person or business that owns the bank account.
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    # The type of entity that holds the account. This can be either `individual` or `company`.
    ""|"company"|"individual" account_holder_type?;
    # The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.
    "checking"|"futsu"|"savings"|"toza" account_type?;
    # City/District/Suburb/Town/Village.
    @constraint:String {maxLength: 5000}
    string address_city?;
    # Billing address country, if provided when creating card.
    @constraint:String {maxLength: 5000}
    string address_country?;
    # Address line 1 (Street address/PO Box/Company name).
    @constraint:String {maxLength: 5000}
    string address_line1?;
    # Address line 2 (Apartment/Suite/Unit/Building).
    @constraint:String {maxLength: 5000}
    string address_line2?;
    # State/County/Province/Region.
    @constraint:String {maxLength: 5000}
    string address_state?;
    # ZIP or postal code.
    @constraint:String {maxLength: 5000}
    string address_zip?;
    # When set to true, this becomes the default external account for its currency.
    boolean default_for_currency?;
    external_account_documents_param documents?;
    # Two digit number representing the card’s expiration month.
    @constraint:String {maxLength: 5000}
    string exp_month?;
    # Four digit number representing the card’s expiration year.
    @constraint:String {maxLength: 5000}
    string exp_year?;
    # Specifies which fields in the response should be expanded.
    bank_accounts_id_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Cardholder name.
    @constraint:String {maxLength: 5000}
    string name?;
|};

# 
public type Source_transaction_paper_check_data record {
    # Time at which the deposited funds will be available for use. Measured in seconds since the Unix epoch.
    @constraint:String {maxLength: 5000}
    string available_at?;
    # Comma-separated list of invoice IDs associated with the paper check.
    @constraint:String {maxLength: 5000}
    string invoices?;
};

public type card_payments_settings_specs record {
    decline_charge_on_specs decline_on?;
    @constraint:String {maxLength: 10}
    string statement_descriptor_prefix?;
    string|"" statement_descriptor_prefix_kana?;
    string|"" statement_descriptor_prefix_kanji?;
};

# 
public type Payment_method_card_wallet_samsung_pay record {
};

public type terminal_configurations_body record {|
    bbpos_wise_pose bbpos_wisepos_e?;
    # Specifies which fields in the response should be expanded.
    terminal_configurations_bodyExpandItemsString[] expand?;
    # Name of the configuration
    @constraint:String {maxLength: 100}
    string name?;
    # Configurations for collecting transactions offline.
    record {boolean enabled;}|"" offline?;
    reboot_window reboot_window?;
    stripe_s700 stripe_s700?;
    # Tipping configurations for readers supporting on-reader tips
    record {record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} aud?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} cad?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} chf?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} czk?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} dkk?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} eur?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} gbp?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} hkd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} myr?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} nok?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} nzd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} sek?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} sgd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} usd?;}|"" tipping?;
    verifone_p400 verifone_p400?;
|};

public type subscription_update_confirm_discount_params record {
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string promotion_code?;
};

public type subscription_update_creation_param record {
    ("price"|"promotion_code"|"quantity")[]|"" default_allowed_updates;
    boolean enabled;
    record {ProductsItemsObjectPricesItemsString[] prices; string product;}[]|"" products;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryReceivedDebitsQueriesExpandItemsString string;

# 
public type Payment_method_config_resource_payment_method_properties record {
    # Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active.
    boolean available;
    Payment_method_config_resource_display_preference display_preference;
};

# 
public type Invoice_threshold_reason record {
    # The total invoice amount threshold boundary if it triggered the threshold invoice.
    int? amount_gte?;
    # Indicates which line items triggered a threshold invoice.
    Invoice_item_threshold_reason[] item_reasons;
};

public type treasury_outbound_transfers_body record {|
    # Amount (in cents) to be transferred.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # The PaymentMethod to use as the payment instrument for the OutboundTransfer.
    @constraint:String {maxLength: 5000}
    string destination_payment_method?;
    payment_method_options_3 destination_payment_method_options?;
    # Specifies which fields in the response should be expanded.
    treasury_outbound_transfers_bodyExpandItemsString[] expand?;
    # The FinancialAccount to pull funds from.
    string financial_account;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Statement descriptor to be shown on the receiving end of an OutboundTransfer. Maximum 10 characters for `ach` transfers or 140 characters for `us_domestic_wire` transfers. The default value is "transfer".
    @constraint:String {maxLength: 5000}
    string statement_descriptor?;
|};

@constraint:String {maxLength: 5000}
public type Invoice_item_threshold_reasonLineitemidsItemsString string;

# Represents a reader action to process a setup intent
public type Terminal_reader_reader_resource_process_setup_intent_action record {
    # ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.
    @constraint:String {maxLength: 5000}
    string generated_card?;
    Terminal_reader_reader_resource_process_setup_config process_config?;
    # Most recent SetupIntent processed by the reader.
    string|Setup_intent setup_intent;
};

# 
public type Issuing_physical_bundle_features record {
    # The policy for how to use card logo images in a card design with this physical bundle.
    "optional"|"required"|"unsupported" card_logo;
    # The policy for how to use carrier letter text in a card design with this physical bundle.
    "optional"|"required"|"unsupported" carrier_text;
    # The policy for how to use a second line on a card with this physical bundle.
    "optional"|"required"|"unsupported" second_line;
};

# Represents the Queries record for the operation: GetQuotesQuotePdf
public type GetQuotesQuotePdfQueries record {
    # Specifies which fields in the response should be expanded.
    GetQuotesQuotePdfQueriesExpandItemsString[] expand?;
};

public type DefaultaccounttaxidsItemsString string;

public type transactions_transaction_bodyExpandItemsString string;

# 
public type Plan_tier record {
    # Price for the entire tier.
    int? flat_amount?;
    # Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.
    string? flat_amount_decimal?;
    # Per unit price for units relevant to the tier.
    int? unit_amount?;
    # Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.
    string? unit_amount_decimal?;
    # Up to and including to this quantity will be contained in the tier.
    int? up_to?;
};

public type setup_intents_bodyPaymentmethodtypesItemsString string;

# These fields can be used to create a new product that this price will belong to.
public type inline_product_params record {
    boolean active?;
    @constraint:String {maxLength: 5000}
    string id?;
    record {|string...;|} metadata?;
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    @constraint:String {maxLength: 5000}
    string tax_code?;
    @constraint:String {maxLength: 12}
    string unit_label?;
};

# Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.
public type recipient_shipping_with_optional_fields_address record {
    optional_fields_address address;
    @constraint:String {maxLength: 5000}
    string name;
    string|"" phone?;
};

public type base_config_param record {
    boolean enabled;
    record {} features?;
};

# Information about the items and shipping associated with the source. Required for transactional credit (for example Klarna) sources before you can charge it.
public type shallow_order_specs record {
    order_item_specs[] items?;
    order_shipping shipping?;
};

# 
public type Mandate_revolut_pay record {
};

public type subscription_item_usage_records_bodyExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_cashapp record {
};

# 
public type Payment_method_details_cashapp record {
    # A unique and immutable identifier assigned by Cash App to every buyer.
    string? buyer_id?;
    # A public identifier for buyers using Cash App.
    string? cashtag?;
};

# 
public type Checkout_customer_balance_payment_method_options record {
    Checkout_customer_balance_bank_transfer_payment_method_options bank_transfer?;
    # The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.
    "bank_transfer"? funding_type?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type documents_paramFilesItemsString string;

public type quote_cancel_bodyExpandItemsString string;

# 
public type Payment_method_options_zip record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Climate_removals_beneficiary record {
    # Publicly displayable name for the end beneficiary of carbon removal.
    @constraint:String {maxLength: 5000}
    string public_name;
};

@constraint:String {maxLength: 5000}
public type GetIssuingPersonalizationDesignsPersonalizationDesignQueriesExpandItemsString string;

# 
public type Payment_method_twint record {
};

# Represents the Queries record for the operation: GetInvoices
public type GetInvoicesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetInvoicesQueriesExpandItemsString[] expand?;
    # Only return invoices that were created during the given date interval.
    created_16 created?;
    # The collection method of the invoice to retrieve. Either `charge_automatically` or `send_invoice`.
    "charge_automatically"|"send_invoice" collection_method?;
    due_date due_date?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return invoices for the subscription specified by this subscription ID.
    @constraint:String {maxLength: 5000}
    string subscription?;
    # Only return invoices for the customer specified by this customer ID.
    @constraint:String {maxLength: 5000}
    string customer?;
    # The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
    "draft"|"open"|"paid"|"uncollectible"|"void" status?;
};

public type Reporting\.report_type record {
    int data_available_end;
    int data_available_start;
    Reporting\.report_typeDefaultcolumnsItemsString[]? default_columns?;
    string id;
    boolean livemode;
    string name;
    "reporting.report_type" 'object;
    int updated;
    int version;
};

public type intent_confirm_body record {|
    # Controls when the funds will be captured from the customer's account.
    "automatic"|"automatic_async"|"manual" capture_method?;
    # The client secret of the PaymentIntent.
    @constraint:String {maxLength: 5000}
    string client_secret?;
    # ID of the ConfirmationToken used to confirm this PaymentIntent.
    # 
    # If the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.
    @constraint:String {maxLength: 5000}
    string confirmation_token?;
    # Set to `true` to fail the payment attempt if the PaymentIntent transitions into `requires_action`. This parameter is intended for simpler integrations that do not handle customer actions, like [saving cards without authentication](https://stripe.com/docs/payments/save-card-without-authentication).
    boolean error_on_requires_action?;
    # Specifies which fields in the response should be expanded.
    intent_confirm_bodyExpandItemsString[] expand?;
    # ID of the mandate that's used for this payment.
    @constraint:String {maxLength: 5000}
    string mandate?;
    record {record {int accepted_at?; record {} offline?; record {string ip_address; string user_agent;} online?; "offline"|"online" 'type;} customer_acceptance;}|""|record {record {record {string ip_address?; string user_agent?;} online; "online" 'type;} customer_acceptance;} mandate_data?;
    # Set to `true` to indicate that the customer isn't in your checkout flow during this payment attempt and can't authenticate. Use this parameter in scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards).
    boolean|"one_off"|"recurring" off_session?;
    # ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    payment_method_data_params payment_method_data?;
    payment_method_options_param_14 payment_method_options?;
    # The list of payment method types (for example, a card) that this PaymentIntent can use. Use `automatic_payment_methods` to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).
    intent_confirm_bodyPaymentmethodtypesItemsString[] payment_method_types?;
    radar_options_with_hidden_options_2 radar_options?;
    # Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).
    string|"" receipt_email?;
    # The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.
    # If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.
    # This parameter is only used for cards and other redirect-based payment methods.
    string return_url?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    # 
    # If `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.
    ""|"off_session"|"on_session" setup_future_usage?;
    # Shipping information for this PaymentIntent.
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string carrier?; string name; string phone?; string tracking_number?;}|"" shipping?;
    # Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.
    boolean use_stripe_sdk?;
|};

# 
public type Customer_acceptance record {
    # The time that the customer accepts the mandate.
    int? accepted_at?;
    Offline_acceptance offline?;
    Online_acceptance online?;
    # The mandate includes the type of customer acceptance information, such as: `online` or `offline`.
    "offline"|"online" 'type;
};

# 
public type FinancialReportingFinanceReportTypeList record {
    Reporting\.report_type[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Treasury_transactions_resource_flow_details record {
    Treasury\.credit_reversal credit_reversal?;
    Treasury\.debit_reversal debit_reversal?;
    Treasury\.inbound_transfer inbound_transfer?;
    Issuing\.authorization issuing_authorization?;
    Treasury\.outbound_payment outbound_payment?;
    Treasury\.outbound_transfer outbound_transfer?;
    Treasury\.received_credit received_credit?;
    Treasury\.received_debit received_debit?;
    # Type of the flow that created the Transaction. Set to the same value as `flow_type`.
    "credit_reversal"|"debit_reversal"|"inbound_transfer"|"issuing_authorization"|"other"|"outbound_payment"|"outbound_transfer"|"received_credit"|"received_debit" 'type;
};

# Represents the Queries record for the operation: GetTransfersTransfer
public type GetTransfersTransferQueries record {
    # Specifies which fields in the response should be expanded.
    GetTransfersTransferQueriesExpandItemsString[] expand?;
};

# The parameters that you can use to automatically create a Transfer.
# Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
public type transfer_data_creation_params record {
    int amount?;
    string destination;
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_us_bank_transfer record {
    # The banking network used for this funding.
    "ach"|"domestic_wire_us"|"swift" network?;
    # The full name of the sender, as supplied by the sending bank.
    string? sender_name?;
};

# Details about a failed InboundTransfer.
public type failure_details_params record {
    "account_closed"|"account_frozen"|"bank_account_restricted"|"bank_ownership_changed"|"debit_not_authorized"|"incorrect_account_holder_address"|"incorrect_account_holder_name"|"incorrect_account_holder_tax_id"|"insufficient_funds"|"invalid_account_number"|"invalid_currency"|"no_account"|"other" code?;
};

# Represents the Queries record for the operation: GetTreasuryFinancialAccountsFinancialAccountFeatures
public type GetTreasuryFinancialAccountsFinancialAccountFeaturesQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryFinancialAccountsFinancialAccountFeaturesQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerTaxIdsQueriesExpandItemsString string;

public type dispute_close_bodyExpandItemsString string;

# 
public type Payment_pages_checkout_session_automatic_tax record {
    # Indicates whether automatic tax is enabled for the session
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
    # The status of the most recent automated tax calculation for this session.
    "complete"|"failed"|"requires_location_inputs"? status?;
};

public type Source_type_alipay record {
    string? data_string?;
    string? native_url?;
    string? statement_descriptor?;
};

@constraint:String {maxLength: 5000}
public type GetBalanceTransactionsIdQueriesExpandItemsString string;

public type Source_type_sofort record {
    string? bank_code?;
    string? bank_name?;
    string? bic?;
    string? country?;
    string? iban_last4?;
    string? preferred_language?;
    string? statement_descriptor?;
};

# Represents the Queries record for the operation: GetDisputesDispute
public type GetDisputesDisputeQueries record {
    # Specifies which fields in the response should be expanded.
    GetDisputesDisputeQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetTopups
public type GetTopupsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # A positive integer representing how much to transfer.
    amount amount?;
    # Specifies which fields in the response should be expanded.
    GetTopupsQueriesExpandItemsString[] expand?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_41 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return top-ups that have the given status. One of `canceled`, `failed`, `pending` or `succeeded`.
    "canceled"|"failed"|"pending"|"succeeded" status?;
};

# 
public type Source_receiver_flow record {
    # The address of the receiver source. This is the value that should be communicated to the customer to send their funds to.
    string? address?;
    # The total amount that was moved to your balance. This is almost always equal to the amount charged. In rare cases when customers deposit excess funds and we are unable to refund those, those funds get moved to your balance and show up in amount_charged as well. The amount charged is expressed in the source's currency.
    int amount_charged;
    # The total amount received by the receiver source. `amount_received = amount_returned + amount_charged` should be true for consumed sources unless customers deposit excess funds. The amount received is expressed in the source's currency.
    int amount_received;
    # The total amount that was returned to the customer. The amount returned is expressed in the source's currency.
    int amount_returned;
    # Type of refund attribute method, one of `email`, `manual`, or `none`.
    @constraint:String {maxLength: 5000}
    string refund_attributes_method;
    # Type of refund attribute status, one of `missing`, `requested`, or `available`.
    @constraint:String {maxLength: 5000}
    string refund_attributes_status;
};

# 
public type Dispute_payment_method_details_card record {
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    @constraint:String {maxLength: 5000}
    string brand;
    # The card network's specific dispute reason code, which maps to one of Stripe's primary dispute categories to simplify response guidance. The [Network code map](https://stripe.com/docs/disputes/categories#network-code-map) lists all available dispute reason codes by network.
    string? network_reason_code?;
};

@constraint:String {maxLength: 5000}
public type GetPricesQueriesExpandItemsString string;

# 
public type Deleted_person record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "person" 'object;
};

public type tax_calculations_bodyExpandItemsString string;

# 
public type Mandate_multi_use record {
};

# 
public type Payment_intent_payment_method_options_eps record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type intent_apply_customer_balance_body record {|
    # Amount that you intend to apply to this PaymentIntent from the customer’s cash balance.
    # 
    # A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (for example, 100 cents to charge 1 USD or 100 to charge 100 JPY, a zero-decimal currency).
    # 
    # The maximum amount is the amount of the PaymentIntent.
    # 
    # When you omit the amount, it defaults to the remaining amount requested on the PaymentIntent.
    int amount?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Specifies which fields in the response should be expanded.
    intent_apply_customer_balance_bodyExpandItemsString[] expand?;
|};

public type subscription_schedule_default_settings_param record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    int days_until_due?;
    param_3 issuer?;
};

@constraint:String {maxLength: 5000}
public type Payment_method_details_interac_presentPreferredlocalesItemsString string;

# 
public type CreditNotesList record {
    Credit_note[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Information about a mandate possibility attached to a source object (generally for bank debits) as well as its acceptance status.
public type mandate_params record {
    mandate_acceptance_params acceptance?;
    int|"" amount?;
    string currency?;
    "one_time"|"scheduled"|"variable" interval?;
    "deprecated_none"|"email"|"manual"|"none"|"stripe_email" notification_method?;
};

# 
public type Payment_method_details_afterpay_clearpay record {
    # The Afterpay order ID associated with this payment intent.
    string? order_id?;
    # Order identifier shown to the merchant in Afterpay’s online portal.
    string? reference?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    http:BearerTokenConfig|http:CredentialsConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    ClientHttp1Settings http1Settings?;
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings?;
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 60;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache?;
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits?;
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
|};

public type individual_specs_1 record {
    address_specs address?;
    japan_address_kana_specs address_kana?;
    japan_address_kanji_specs address_kanji?;
    record {int day; int month; int year;}|"" dob?;
    string email?;
    @constraint:String {maxLength: 100}
    string first_name?;
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    string gender?;
    @constraint:String {maxLength: 5000}
    string id_number?;
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    @constraint:String {maxLength: 100}
    string last_name?;
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    record {|string...;|}|"" metadata?;
    string phone?;
    "existing"|"none" political_exposure?;
    address_specs registered_address?;
    individual_relationship_specs relationship?;
    @constraint:String {maxLength: 5000}
    string ssn_last_4?;
    person_verification_specs verification?;
};

# 
public type Issuing_network_token_address record {
    # The street address of the cardholder tokenizing the card.
    @constraint:String {maxLength: 5000}
    string line1;
    # The postal code of the cardholder tokenizing the card.
    @constraint:String {maxLength: 5000}
    string postal_code;
};

# Object representing the subscription schedule's default settings.
public type default_settings_params record {
    decimal application_fee_percent?;
    automatic_tax_config_3 automatic_tax?;
    "automatic"|"phase_start" billing_cycle_anchor?;
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    "charge_automatically"|"send_invoice" collection_method?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    string|"" description?;
    subscription_schedule_default_settings_param invoice_settings?;
    string|"" on_behalf_of?;
    record {decimal amount_percent?; string destination;}|"" transfer_data?;
};

# 
public type Gelato_session_phone_options record {
    # Request one time password verification of `provided_details.phone`.
    boolean require_verification?;
};

# Represents the Queries record for the operation: GetPaymentMethods
public type GetPaymentMethodsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # An optional filter on the list, based on the object `type` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request.
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type?;
    # The ID of the customer whose PaymentMethods will be retrieved.
    @constraint:String {maxLength: 5000}
    string customer?;
};

# 
public type Dispute_payment_method_details_klarna record {
    # The reason for the dispute as defined by Klarna
    string? reason_code?;
};

# Represents a reader action to set the reader display
public type Terminal_reader_reader_resource_set_reader_display_action record {
    # Cart object to be displayed by the reader.
    Terminal_reader_reader_resource_cart? cart?;
    # Type of information to be displayed by the reader.
    "cart" 'type;
};

# 
public type Tax_product_resource_tax_calculation_shipping_cost record {
    # The shipping amount in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If `tax_behavior=inclusive`, then this amount includes taxes. Otherwise, taxes were calculated on top of this amount.
    int amount;
    # The amount of tax calculated for shipping, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount_tax;
    # The ID of an existing [ShippingRate](https://stripe.com/docs/api/shipping_rates/object).
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
    # Specifies whether the `amount` includes taxes. If `tax_behavior=inclusive`, then the amount includes taxes.
    "exclusive"|"inclusive" tax_behavior;
    # Detailed account of taxes relevant to shipping cost.
    Tax_product_resource_line_item_tax_breakdown[] tax_breakdown?;
    # The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for shipping.
    @constraint:String {maxLength: 5000}
    string tax_code;
};

@constraint:String {maxLength: 5000}
public type GetSourcesSourceQueriesExpandItemsString string;

public type Billing_portal\.configuration record {
    boolean active;
    string|Application|Deleted_application? application?;
    Portal_business_profile business_profile;
    int created;
    string? default_return_url?;
    Portal_features features;
    string id;
    boolean is_default;
    boolean livemode;
    Portal_login_page login_page;
    record {|string...;|}? metadata?;
    "billing_portal.configuration" 'object;
    int updated;
};

# The account holder to link accounts for.
public type accountholder_params_1 record {
    @constraint:String {maxLength: 5000}
    string account?;
    @constraint:String {maxLength: 5000}
    string customer?;
    "account"|"customer" 'type;
};

public type accountholder_params_2 record {
    @constraint:String {maxLength: 5000}
    string account?;
    @constraint:String {maxLength: 5000}
    string customer?;
};

public type transactions_create_reversal_bodyExpandItemsString string;

public type id_return_body_1 record {|
    # Specifies which fields in the response should be expanded.
    id_return_body_1ExpandItemsString[] expand?;
    returned_details_params returned_details?;
|};

public type radar_value_list_items_body record {|
    # Specifies which fields in the response should be expanded.
    radar_value_list_items_bodyExpandItemsString[] expand?;
    # The value of the item (whose type must match the type of the parent value list).
    @constraint:String {maxLength: 800}
    string value;
    # The identifier of the value list which the created item will be added to.
    @constraint:String {maxLength: 5000}
    string value_list;
|};

@constraint:String {maxLength: 5000}
public type GetDisputesDisputeQueriesExpandItemsString string;

public type issuing_cards_body record {|
    # The [Cardholder](https://stripe.com/docs/api#issuing_cardholder_object) object with which the card will be associated.
    @constraint:String {maxLength: 5000}
    string cardholder?;
    # The currency for the card.
    string currency;
    # Specifies which fields in the response should be expanded.
    issuing_cards_bodyExpandItemsString[] expand?;
    string financial_account?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The personalization design object belonging to this card.
    @constraint:String {maxLength: 5000}
    string personalization_design?;
    encrypted_pin_param pin?;
    # The card this is meant to be a replacement for (if any).
    @constraint:String {maxLength: 5000}
    string replacement_for?;
    # If `replacement_for` is specified, this should indicate why that card is being replaced.
    "damaged"|"expired"|"lost"|"stolen" replacement_reason?;
    # The second line to print on the card.
    string|"" second_line?;
    shipping_specs shipping?;
    authorization_controls_param spending_controls?;
    # Whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`.
    "active"|"inactive" status?;
    # The type of card to issue. Possible values are `physical` or `virtual`.
    "physical"|"virtual" 'type;
|};

# 
public type Tax_product_registrations_resource_country_options_us_local_amusement_tax record {
    # A [FIPS code](https://www.census.gov/library/reference/code-lists/ansi.html) representing the local jurisdiction.
    @constraint:String {maxLength: 5000}
    string jurisdiction;
};

# Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.
public type automatic_tax_config_4 record {
    boolean enabled;
    param_3 liability?;
};

public type automatic_tax_config_3 record {
    boolean enabled;
    param_3 liability?;
};

public type buy_button_param record {
    boolean enabled;
};

public type automatic_tax_config_2 record {
    boolean enabled;
    param_2 liability?;
};

# Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required.
public type recurring_price_data_2 record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    recurring_adhoc recurring;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type automatic_tax_config_1 record {
    boolean enabled;
    param liability?;
};

# The subscription creation or modification params to apply as a preview. Cannot be used with `schedule` or `schedule_details` fields.
public type subscription_details_params record {
    "now"|"unchanged"|int billing_cycle_anchor?;
    int|"" cancel_at?;
    boolean cancel_at_period_end?;
    boolean cancel_now?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    subscription_item_update_params[] items?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int proration_date?;
    "now" resume_at?;
    int start_date?;
    "now"|int trial_end?;
};

# Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.
public type recurring_price_data_1 record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    recurring_adhoc recurring;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type file_links_bodyExpandItemsString string;

public type payment_links_bodyExpandItemsString string;

# 
public type BankAccountList record {
    # Details about each object.
    Bank_account[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Configuration for each component. Exactly 1 component must be enabled.
public type components record {
    buy_button_param buy_button?;
    payment_element_param payment_element?;
    pricing_table_param pricing_table?;
};

@constraint:String {maxLength: 5000}
public type External_account_requirementsPendingverificationItemsString string;

public type customers_customer_bodyExpandItemsString string;

# 
public type Payment_method_details_paynow record {
    # Reference number associated with this PayNow payment
    string? reference?;
};

public type setup_intents_intent_bodyPaymentmethodtypesItemsString string;

# Represents the Queries record for the operation: GetInvoicesUpcomingLines
public type GetInvoicesUpcomingLinesQueries record {
    # A list of up to 20 subscription items, each with an attached price. This field has been deprecated and will be removed in a future API version. Use `subscription_details.items` instead.
    subscription_item_update_params[] subscription_items?;
    # List of invoice items to add or update in the upcoming invoice preview.
    invoice_item_preview_params[] invoice_items?;
    # For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.billing_cycle_anchor` instead.
    subscription_billing_cycle_anchor_1 subscription_billing_cycle_anchor?;
    # The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_details.items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_details.items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.
    @constraint:String {maxLength: 5000}
    string subscription?;
    # The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.
    param_3 issuer?;
    # This simulates the subscription being canceled or expired immediately. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_now` instead.
    boolean subscription_cancel_now?;
    # Details about the customer you want to invoice or overrides for an existing customer. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
    customer_details_param_2 customer_details?;
    # Boolean indicating whether this subscription should cancel at the end of the current period. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at_period_end` instead.
    boolean subscription_cancel_at_period_end?;
    # The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the subscription or customer. This works for both coupons directly applied to an invoice and coupons applied to a subscription. Pass an empty string to avoid inheriting any discounts.
    discounts_1 discounts?;
    # For paused subscriptions, setting `subscription_resume_at` to `now` will preview the invoice that will be generated if the subscription is resumed. This field has been deprecated and will be removed in a future API version. Use `subscription_details.resume_at` instead.
    "now" subscription_resume_at?;
    # Date a subscription is intended to start (can be future or past). This field has been deprecated and will be removed in a future API version. Use `subscription_details.start_date` instead.
    int subscription_start_date?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # The currency to preview this invoice in. Defaults to that of `customer` if not specified.
    string currency?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period and within the current phase of the schedule backing this subscription, if the schedule exists. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_date` instead.
    int subscription_proration_date?;
    # The schedule creation or modification params to apply as a preview. Cannot be used with `subscription` or `subscription_` prefixed fields.
    schedule_details_params_2 schedule_details?;
    # The ID of the coupon to apply to this phase of the subscription schedule. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    on_behalf_of_1 on_behalf_of?;
    # If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required. This field has been deprecated and will be removed in a future API version. Use `subscription_details.trial_end` instead.
    subscription_trial_end_1 subscription_trial_end?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # The identifier of the schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.
    @constraint:String {maxLength: 5000}
    string schedule?;
    # Specifies which fields in the response should be expanded.
    GetInvoicesUpcomingLinesQueriesExpandItemsString[] expand?;
    # Settings for automatic tax lookup for this invoice preview.
    automatic_tax_param_3 automatic_tax?;
    # The subscription creation or modification params to apply as a preview. Cannot be used with `schedule` or `schedule_details` fields.
    subscription_details_params_2 subscription_details?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at` instead.
    subscription_cancel_at_1 subscription_cancel_at?;
    # If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set. This field has been deprecated and will be removed in a future API version. Use `subscription_details.default_tax_rates` instead.
    subscription_default_tax_rates_1 subscription_default_tax_rates?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_behavior` instead.
    "always_invoice"|"create_prorations"|"none" subscription_proration_behavior?;
    # Customizes the types of values to include when calculating the invoice. Defaults to `next` if unspecified.
    "next"|"recurring" preview_mode?;
    # The identifier of the customer whose upcoming invoice you'd like to retrieve. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
    @constraint:String {maxLength: 5000}
    string customer?;
};

# 
public type ExchangeRateList record {
    Exchange_rate[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/exchange_rates`}
    string url;
};

# Represents the Queries record for the operation: GetCustomersCustomerTaxIdsId
public type GetCustomersCustomerTaxIdsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerTaxIdsIdQueriesExpandItemsString[] expand?;
};

public type tax_settings_bodyExpandItemsString string;

public type line_item_paramsTaxratesItemsString string;

# Represents the Queries record for the operation: GetCustomersCustomerPaymentMethodsPaymentMethod
public type GetCustomersCustomerPaymentMethodsPaymentMethodQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerPaymentMethodsPaymentMethodQueriesExpandItemsString[] expand?;
};

public type financial_connections_sessions_body record {|
    accountholder_params_1 account_holder;
    # Specifies which fields in the response should be expanded.
    financial_connections_sessions_bodyExpandItemsString[] expand?;
    filters_params filters?;
    # List of data features that you would like to request access to.
    # 
    # Possible values are `balances`, `transactions`, `ownership`, and `payment_method`.
    (financial_connections_sessions_bodyPermissionsItemsString)[] permissions;
    # List of data features that you would like to retrieve upon account creation.
    ("balances"|"ownership"|"transactions")[] prefetch?;
    # For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.
    @constraint:String {maxLength: 5000}
    string return_url?;
|};

public type subscription_cancel_creation_param record {
    subscription_cancellation_reason_creation_param cancellation_reason?;
    boolean enabled;
    "at_period_end"|"immediately" mode?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

# 
public type Account_payments_settings record {
    # The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.
    string? statement_descriptor?;
    # The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only)
    string? statement_descriptor_kana?;
    # The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only)
    string? statement_descriptor_kanji?;
    # The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.
    string? statement_descriptor_prefix_kana?;
    # The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.
    string? statement_descriptor_prefix_kanji?;
};

# 
public type Payment_method_details_card_checks record {
    # If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_line1_check?;
    # If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_postal_code_check?;
    # If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? cvc_check?;
};

public type authorization_controls_paramAllowedcategoriesItemsString "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards";

# Additional purchase information that is optionally provided by the merchant.
public type purchase_details_specs record {
    fleet_specs_1 fleet?;
    flight_specs flight?;
    fuel_specs_1 fuel?;
    lodging_specs lodging?;
    receipt_specs[] receipt?;
    @constraint:String {maxLength: 5000}
    string reference?;
};

# 
public type Refund_next_action record {
    # Contains the refund details.
    Refund_next_action_display_details? display_details?;
    # Type of the next action to perform.
    @constraint:String {maxLength: 5000}
    string 'type;
};

@constraint:String {maxLength: 5000}
public type GetClimateProductsProductQueriesExpandItemsString string;

public type Treasury\.outbound_payment record {
    int amount;
    boolean cancelable;
    int created;
    string currency;
    string? customer?;
    string? description?;
    string? destination_payment_method?;
    Outbound_payments_payment_method_details? destination_payment_method_details?;
    Treasury_outbound_payments_resource_outbound_payment_resource_end_user_details? end_user_details?;
    int expected_arrival_date;
    string financial_account;
    string? hosted_regulatory_receipt_url?;
    string id;
    boolean livemode;
    record {|string...;|} metadata;
    "treasury.outbound_payment" 'object;
    Treasury_outbound_payments_resource_returned_status? returned_details?;
    string statement_descriptor;
    "canceled"|"failed"|"posted"|"processing"|"returned" status;
    Treasury_outbound_payments_resource_outbound_payment_resource_status_transitions status_transitions;
    Treasury_outbound_payments_resource_outbound_payment_resource_tracking_details? tracking_details?;
    string|Treasury\.transaction 'transaction;
};

# 
public type Checkout_acss_debit_mandate_options record {
    # A URL for custom mandate text
    @constraint:String {maxLength: 5000}
    string custom_mandate_url?;
    # List of Stripe products where this mandate can be selected automatically. Returned when the Session is in `setup` mode.
    ("invoice"|"subscription")[] default_for?;
    # Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.
    string? interval_description?;
    # Payment schedule for the mandate.
    "combined"|"interval"|"sporadic"? payment_schedule?;
    # Transaction type of the mandate.
    "business"|"personal"? transaction_type?;
};

# 
public type Payment_method_options_klarna record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Preferred locale of the Klarna checkout page that the customer is redirected to.
    string? preferred_locale?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

@constraint:String {maxLength: 5000}
public type GetCreditNotesPreviewQueriesExpandItemsString string;

public type products_id_bodyExpandItemsString string;

public type invoices_invoice_bodyExpandItemsString string;

public type refunds_id_bodyExpandItemsString string;

public type account_features_param record {
    boolean external_account_collection?;
};

public type orders_order_body record {|
    # Publicly sharable reference for the end beneficiary of carbon removal. Assumed to be the Stripe account if not set.
    record {string|"" public_name;}|"" beneficiary?;
    # Specifies which fields in the response should be expanded.
    orders_order_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

# Describes a fixed amount to charge for shipping. Must be present if type is `fixed_amount`.
public type fixed_amount_1 record {
    int amount;
    string currency;
    record {|currency_option...;|} currency_options?;
};

@constraint:String {maxLength: 5000}
public type GetChargesSearchQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetTaxTransactionsTransaction
public type GetTaxTransactionsTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxTransactionsTransactionQueriesExpandItemsString[] expand?;
};

public type Source_type_bancontact record {
    string? bank_code?;
    string? bank_name?;
    string? bic?;
    string? iban_last4?;
    string? preferred_language?;
    string? statement_descriptor?;
};

@constraint:String {maxLength: 5000}
public type Country_spec_verification_field_detailsMinimumItemsString string;

public type treasury_credit_reversals_body record {|
    # Specifies which fields in the response should be expanded.
    treasury_credit_reversals_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The ReceivedCredit to reverse.
    @constraint:String {maxLength: 5000}
    string received_credit;
|};

# 
public type Tax_product_resource_customer_details_resource_tax_id record {
    # The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eu_oss_vat`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, or `unknown`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"unknown"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # The value of the tax ID.
    @constraint:String {maxLength: 5000}
    string value;
};

# Events are our way of letting you know when something interesting happens in
# your account. When an interesting event occurs, we create a new `Event`
# object. For example, when a charge succeeds, we create a `charge.succeeded`
# event, and when an invoice payment attempt fails, we create an
# `invoice.payment_failed` event. Certain API requests might create multiple
# events. For example, if you create a new subscription for a
# customer, you receive both a `customer.subscription.created` event and a
# `charge.succeeded` event.
# 
# Events occur when the state of another API resource changes. The event's data
# field embeds the resource's state at the time of the change. For
# example, a `charge.succeeded` event contains a charge, and an
# `invoice.payment_failed` event contains an invoice.
# 
# As with other API resources, you can use endpoints to retrieve an
# [individual event](https://stripe.com/docs/api#retrieve_event) or a [list of events](https://stripe.com/docs/api#list_events)
# from the API. We also have a separate
# [webhooks](http://en.wikipedia.org/wiki/Webhook) system for sending the
# `Event` objects directly to an endpoint on your server. You can manage
# webhooks in your
# [account settings](https://dashboard.stripe.com/account/webhooks). Learn how
# to [listen for events](https://docs.stripe.com/webhooks)
# so that your integration can automatically trigger reactions.
# 
# When using [Connect](https://docs.stripe.com/connect), you can also receive event notifications
# that occur in connected accounts. For these events, there's an
# additional `account` attribute in the received `Event` object.
# 
# We only guarantee access to events through the [Retrieve Event API](https://stripe.com/docs/api#retrieve_event)
# for 30 days.
public type Event record {
    # The connected account that originates the event.
    @constraint:String {maxLength: 5000}
    string account?;
    # The Stripe API version used to render `data`. This property is populated only for events on or after October 31, 2014.
    string? api_version?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    Notification_event_data data;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "event" 'object;
    # Number of webhooks that haven't been successfully delivered (for example, to return a 20x response) to the URLs you specify.
    int pending_webhooks;
    # Information on the API request that triggers the event.
    Notification_event_request? request?;
    # Description of the event (for example, `invoice.created` or `charge.refunded`).
    @constraint:String {maxLength: 5000}
    string 'type;
};

# 
public type Payment_method_details_card_present_receipt record {
    # The type of account being debited or credited
    "checking"|"credit"|"prepaid"|"unknown" account_type?;
    # EMV tag 9F26, cryptogram generated by the integrated circuit chip.
    string? application_cryptogram?;
    # Mnenomic of the Application Identifier.
    string? application_preferred_name?;
    # Identifier for this transaction.
    string? authorization_code?;
    # EMV tag 8A. A code returned by the card issuer.
    string? authorization_response_code?;
    # Describes the method used by the cardholder to verify ownership of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`, `offline_pin_and_signature`, `online_pin`, or `signature`.
    string? cardholder_verification_method?;
    # EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.
    string? dedicated_file_name?;
    # The outcome of a series of EMV functions performed by the card reader.
    string? terminal_verification_results?;
    # An indication of various EMV functions performed during the transaction.
    string? transaction_status_information?;
};

# Represents the Queries record for the operation: GetTreasuryOutboundTransfersOutboundTransfer
public type GetTreasuryOutboundTransfersOutboundTransferQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryOutboundTransfersOutboundTransferQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_cardholder_verification record {
    # An identifying document, either a passport or local ID card.
    Issuing_cardholder_id_document? document?;
};

public type Issuing\.authorization record {
    int amount;
    Issuing_authorization_amount_details? amount_details?;
    boolean approved;
    "chip"|"contactless"|"keyed_in"|"online"|"swipe" authorization_method;
    Balance_transaction[] balance_transactions;
    Issuing\.card card;
    string|Issuing\.cardholder? cardholder?;
    int created;
    string currency;
    Issuing_authorization_fleet_data? fleet?;
    Issuing_authorization_fuel_data? fuel?;
    string id;
    boolean livemode;
    int merchant_amount;
    string merchant_currency;
    Issuing_authorization_merchant_data merchant_data;
    record {|string...;|} metadata;
    Issuing_authorization_network_data? network_data?;
    "issuing.authorization" 'object;
    Issuing_authorization_pending_request? pending_request?;
    Issuing_authorization_request[] request_history;
    "closed"|"pending"|"reversed" status;
    string|Issuing\.token? token?;
    Issuing\.transaction[] transactions;
    Issuing_authorization_treasury? treasury?;
    Issuing_authorization_verification_data verification_data;
    string? wallet?;
};

# 
public type Issuing_card_spending_limit record {
    # Maximum amount allowed to spend per interval. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) this limit applies to. Omitting this field will apply the limit to all categories.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? categories?;
    # Interval (or event) to which the amount applies.
    "all_time"|"daily"|"monthly"|"per_authorization"|"weekly"|"yearly" interval;
};

public type credit_notes_id_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetTaxSettings
public type GetTaxSettingsQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxSettingsQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetSigmaScheduledQueryRunsScheduledQueryRunQueriesExpandItemsString string;

# 
public type Payment_intent_next_action_boleto record {
    # The timestamp after which the boleto expires.
    int? expires_at?;
    # The URL to the hosted boleto voucher page, which allows customers to view the boleto voucher.
    string? hosted_voucher_url?;
    # The boleto number.
    string? number?;
    # The URL to the downloadable boleto voucher PDF.
    string? pdf?;
};

public type tax_rates_body record {|
    # Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.
    boolean active?;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country?;
    # An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.
    @constraint:String {maxLength: 5000}
    string description?;
    # The display name of the tax rate, which will be shown to users.
    @constraint:String {maxLength: 50}
    string display_name;
    # Specifies which fields in the response should be expanded.
    tax_rates_bodyExpandItemsString[] expand?;
    # This specifies if the tax rate is inclusive or exclusive.
    boolean inclusive;
    # The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.
    @constraint:String {maxLength: 50}
    string jurisdiction?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # This represents the tax rate percent out of 100.
    decimal percentage;
    # [ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, "NY" for New York, United States.
    @constraint:String {maxLength: 2}
    string state?;
    # The high-level tax type, such as `vat` or `sales_tax`.
    "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;
|};

# 
public type Mandate_au_becs_debit record {
    # The URL of the mandate. This URL generally contains sensitive information about the customer and should be shared with them exclusively.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Payment_pages_checkout_session_total_details_resource_breakdown record {
    # The aggregated discounts.
    Line_items_discount_amount[] discounts;
    # The aggregated tax amounts by rate.
    Line_items_tax_amount[] taxes;
};

public type invoice_add_lines_bodyExpandItemsString string;

# 
public type TreasuryReceivedCreditsResourceReceivedCreditList record {
    # Details about each object.
    Treasury\.received_credit[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type authorization_controls_paramBlockedmerchantcountriesItemsString string;

public type review_approve_body record {|
    # Specifies which fields in the response should be expanded.
    review_approve_bodyExpandItemsString[] expand?;
|};

# 
public type Reserve_transaction record {
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "reserve_transaction" 'object;
};

# Represents the Queries record for the operation: GetTerminalReadersReader
public type GetTerminalReadersReaderQueries record {
    # Specifies which fields in the response should be expanded.
    GetTerminalReadersReaderQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type Account_requirementsCurrentlydueItemsString string;

# 
public type Tax_product_registrations_resource_country_options_ca_province_standard record {
    # Two-letter CA province code ([ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)).
    @constraint:String {maxLength: 5000}
    string province;
};

# 
public type Payment_pages_checkout_session_custom_fields_option record {
    # The label for the option, displayed to the customer. Up to 100 characters.
    @constraint:String {maxLength: 5000}
    string label;
    # The value for this option, not displayed to the customer, used by your integration to reconcile the option selected by the customer. Must be unique to this option, alphanumeric, and up to 100 characters.
    @constraint:String {maxLength: 5000}
    string value;
};

@constraint:String {maxLength: 5000}
public type GetTaxCodesIdQueriesExpandItemsString string;

public type legal_entity_and_kyc_address_specs record {
    @constraint:String {maxLength: 100}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 200}
    string line1?;
    @constraint:String {maxLength: 200}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

# Represents the Queries record for the operation: GetTaxIdsId
public type GetTaxIdsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxIdsIdQueriesExpandItemsString[] expand?;
};

# 
public type Payment_method_config_biz_payment_method_configuration_details record {
    # ID of the payment method configuration used.
    @constraint:String {maxLength: 5000}
    string id;
    # ID of the parent payment method configuration used.
    string? parent?;
};

@constraint:String {maxLength: 5000}
public type GetReviewsQueriesExpandItemsString string;

public type person_verification_param record {
    person_verification_document_param document?;
};

# 
public type Setup_attempt_payment_method_details_acss_debit record {
};

public type custom_unit_amount record {
    boolean enabled;
    int maximum?;
    int minimum?;
    int preset?;
};

public type Issuing\.cardholder record {
    Issuing_cardholder_address billing;
    Issuing_cardholder_company? company?;
    int created;
    string? email?;
    string id;
    Issuing_cardholder_individual? individual?;
    boolean livemode;
    record {|string...;|} metadata;
    string name;
    "issuing.cardholder" 'object;
    string? phone_number?;
    ("de"|"en"|"es"|"fr"|"it")[]? preferred_locales?;
    Issuing_cardholder_requirements requirements;
    Issuing_cardholder_authorization_controls? spending_controls?;
    "active"|"blocked"|"inactive" status;
    "company"|"individual" 'type;
};

# Change to a FinancialAccount's balance
public type Treasury_transactions_resource_balance_impact record {
    # The change made to funds the user can spend right now.
    int cash;
    # The change made to funds that are not spendable yet, but will become available at a later time.
    int inbound_pending;
    # The change made to funds in the account, but not spendable because they are being held for pending outbound flows.
    int outbound_pending;
};

# Generate a post-purchase Invoice for one-time payments.
public type invoice_creation_update_params record {
    boolean enabled;
    invoice_settings_params_1 invoice_data?;
};

# 
public type Confirmation_tokens_resource_shipping record {
    Address address;
    # Recipient name.
    @constraint:String {maxLength: 5000}
    string name;
    # Recipient phone (including extension).
    string? phone?;
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_transferred_to_balance record {
    # The [Balance Transaction](https://stripe.com/docs/api/balance_transactions/object) that corresponds to funds transferred to your Stripe balance.
    string|Balance_transaction balance_transaction;
};

public type intent_confirm_bodyPaymentmethodtypesItemsString string;

public type payment_method_domains_payment_method_domain_bodyExpandItemsString string;

public type shipping_deliver_bodyExpandItemsString string;

# 
public type Issuing_cardholder_authorization_controls record {
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to allow. All other categories will be blocked. Cannot be set with `blocked_categories`.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? allowed_categories?;
    # Array of strings containing representing countries from which authorizations will be allowed. Authorizations from merchants in all other countries will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `blocked_merchant_countries`. Provide an empty value to unset this control.
    Issuing_cardholder_authorization_controlsAllowedmerchantcountriesItemsString[]? allowed_merchant_countries?;
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to decline. All other categories will be allowed. Cannot be set with `allowed_categories`.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? blocked_categories?;
    # Array of strings containing representing countries from which authorizations will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `allowed_merchant_countries`. Provide an empty value to unset this control.
    Issuing_cardholder_authorization_controlsBlockedmerchantcountriesItemsString[]? blocked_merchant_countries?;
    # Limit spending with amount-based rules that apply across this cardholder's cards.
    Issuing_cardholder_spending_limit[]? spending_limits?;
    # Currency of the amounts within `spending_limits`.
    string? spending_limits_currency?;
};

public type invoice_remove_lines_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetPaymentLinksPaymentLink
public type GetPaymentLinksPaymentLinkQueries record {
    # Specifies which fields in the response should be expanded.
    GetPaymentLinksPaymentLinkQueriesExpandItemsString[] expand?;
};

# 
public type Mandate_single_use record {
    # The amount of the payment on a single use mandate.
    int amount;
    # The currency of the payment on a single use mandate.
    string currency;
};

# Subscription items allow you to create customer subscriptions with more than
# one plan, making it easy to represent complex billing relationships.
public type Subscription_item record {
    # Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period
    Subscription_item_billing_thresholds? billing_thresholds?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The discounts applied to the subscription item. Subscription item discounts are applied before subscription discounts. Use `expand[]=discounts` to expand each discount.
    (string|Discount)[] discounts;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "subscription_item" 'object;
    Price price;
    # The [quantity](https://stripe.com/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.
    int quantity?;
    # The `subscription` this `subscription_item` belongs to.
    @constraint:String {maxLength: 5000}
    string subscription;
    # The tax rates which apply to this `subscription_item`. When set, the `default_tax_rates` on the subscription do not apply to this `subscription_item`.
    Tax_rate[]? tax_rates?;
};

public type on_behalf_of_1 string|"";

public type order_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    order_cancel_bodyExpandItemsString[] expand?;
|};

# Shipping information for the charge. Helps prevent fraud on charges for physical goods.
public type optional_fields_shipping record {
    optional_fields_address address;
    @constraint:String {maxLength: 5000}
    string carrier?;
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string tracking_number?;
};

public type method_params record {
    delivery_estimate delivery_estimate?;
    @constraint:String {maxLength: 100}
    string display_name;
    fixed_amount fixed_amount?;
    record {|string...;|} metadata?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    string tax_code?;
    "fixed_amount" 'type?;
};

public type financial_connections_sessions_bodyExpandItemsString string;

public type account_refresh_body_1 record {|
    # Specifies which fields in the response should be expanded.
    account_refresh_body_1ExpandItemsString[] expand?;
    # The list of account features that you would like to refresh.
    ("balance"|"ownership"|"transactions")[] features;
|};

@constraint:String {maxLength: 5000}
public type GetIdentityVerificationSessionsSessionQueriesExpandItemsString string;

# Specifies the requirements that Stripe collects from connected accounts in the Connect Onboarding flow.
public type collection_options_params record {
    "currently_due"|"eventually_due" fields;
    "include"|"omit" future_requirements?;
};

# 
public type Tax_product_resource_tax_settings_status_details_resource_active record {
};

public type radar_value_lists_bodyExpandItemsString string;

# 
public type Issuing_transaction_receipt_data record {
    # The description of the item. The maximum length of this field is 26 characters.
    string? description?;
    # The quantity of the item.
    decimal? quantity?;
    # The total for this line item in cents.
    int? total?;
    # The unit cost of the item in cents.
    int? unit_cost?;
};

# 
public type Account_business_profile record {
    # The applicant's gross annual revenue for its preceding fiscal year.
    Account_annual_revenue? annual_revenue?;
    # An estimated upper bound of employees, contractors, vendors, etc. currently working for the business.
    int? estimated_worker_count?;
    # [The merchant category code for the account](https://stripe.com/docs/connect/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.
    string? mcc?;
    Account_monthly_estimated_revenue monthly_estimated_revenue?;
    # The customer-facing business name.
    string? name?;
    # Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes.
    string? product_description?;
    # A publicly available mailing address for sending support issues to.
    Address? support_address?;
    # A publicly available email address for sending support issues to.
    string? support_email?;
    # A publicly available phone number to call with support issues.
    string? support_phone?;
    # A publicly available website for handling support issues.
    string? support_url?;
    # The business's publicly available website.
    string? url?;
};

# 
public type Payment_method_details_stripe_account record {
};

# A set of key-value pairs you can attach to a charge giving information about its riskiness. If you believe a charge is fraudulent, include a `user_report` key with a value of `fraudulent`. If you believe a charge is safe, include a `user_report` key with a value of `safe`. Stripe will use the information you send to improve our fraud detection algorithms.
public type fraud_details record {
    ""|"fraudulent"|"safe" user_report;
};

public type terminal_readers_bodyExpandItemsString string;

public type id_refunds_bodyExpandItemsString string;

# A list of refunds that have been applied to the fee.
public type FeeRefundList_1 record {
    # Details about each object.
    Fee_refund[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Configure fields for the Checkout Session to gather active consent from customers.
public type consent_collection_params record {
    payment_method_reuse_agreement_params payment_method_reuse_agreement?;
    "auto"|"none" promotions?;
    "none"|"required" terms_of_service?;
};

public type credit_notes_body record {|
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note.
    int amount?;
    # The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.
    int credit_amount?;
    # The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.
    int effective_at?;
    # Type of email to send to the customer, one of `credit_note` or `none` and the default is `credit_note`.
    "credit_note"|"none" email_type?;
    # Specifies which fields in the response should be expanded.
    credit_notes_bodyExpandItemsString[] expand?;
    # ID of the invoice.
    @constraint:String {maxLength: 5000}
    string invoice;
    # Line items that make up the credit note.
    credit_note_line_item_params[] lines?;
    # The credit note's memo appears on the credit note PDF.
    @constraint:String {maxLength: 5000}
    string memo?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.
    int out_of_band_amount?;
    # Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    "duplicate"|"fraudulent"|"order_change"|"product_unsatisfactory" reason?;
    # ID of an existing refund to link this credit note to.
    string refund?;
    # The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
    int refund_amount?;
    credit_note_shipping_cost shipping_cost?;
|};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer record {
    # The BIC of the bank of the sender of the funding.
    string? bic?;
    # The last 4 digits of the IBAN of the sender of the funding.
    string? iban_last4?;
    # The full name of the sender, as supplied by the sending bank.
    string? sender_name?;
};

# 
public type Treasury_outbound_transfers_resource_outbound_transfer_resource_tracking_details record {
    Treasury_outbound_transfers_resource_ach_tracking_details ach?;
    # The US bank account network used to send funds.
    "ach"|"us_domestic_wire" 'type;
    Treasury_outbound_transfers_resource_us_domestic_wire_tracking_details us_domestic_wire?;
};

@constraint:String {maxLength: 5000}
public type Account_capability_future_requirementsPastdueItemsString string;

public type account_refresh_body record {|
    # Specifies which fields in the response should be expanded.
    account_refresh_bodyExpandItemsString[] expand?;
    # The list of account features that you would like to refresh.
    ("balance"|"ownership"|"transactions")[] features;
|};

# 
public type PromotionCodesResourcePromotionCodeList record {
    Promotion_code[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/promotion_codes`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetApplicationFeesIdQueriesExpandItemsString string;

# 
public type Dispute_payment_method_details_paypal record {
    # The ID of the dispute in PayPal.
    string? case_id?;
    # The reason for the dispute as defined by PayPal
    string? reason_code?;
};

# 
public type Checkout_sepa_debit_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

public type Radar\.value_list_item record {
    int created;
    string created_by;
    string id;
    boolean livemode;
    "radar.value_list_item" 'object;
    string value;
    string value_list;
};

# Represents the Queries record for the operation: GetRefundsRefund
public type GetRefundsRefundQueries record {
    # Specifies which fields in the response should be expanded.
    GetRefundsRefundQueriesExpandItemsString[] expand?;
};

# 
public type Invoices_resource_invoice_rendering record {
    # How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.
    string? amount_tax_display?;
    # Invoice pdf rendering options
    Invoice_rendering_pdf? pdf?;
};

public type applies_to_paramsProductsItemsString string;

# The `Charge` object represents a single attempt to move money into your Stripe account.
# PaymentIntent confirmation is the most common way to create Charges, but transferring
# money to a different Stripe account through Connect also creates Charges.
# Some legacy payment flows create Charges directly, which is not recommended for new integrations.
public type Charge record {
    # Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount;
    # Amount in cents (or local equivalent) captured (can be less than the amount attribute on the charge if a partial capture was made).
    int amount_captured;
    # Amount in cents (or local equivalent) refunded (can be less than the amount attribute on the charge if a partial refund was issued).
    int amount_refunded;
    # ID of the Connect application that created the charge.
    string|Application? application?;
    # The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collect-fees) for details.
    string|Application_fee? application_fee?;
    # The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collect-fees) for details.
    int? application_fee_amount?;
    # ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).
    string|Balance_transaction? balance_transaction?;
    Billing_details billing_details;
    # The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.
    string? calculated_statement_descriptor?;
    # If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.
    boolean captured;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the customer this charge is for if one exists.
    string|Customer|Deleted_customer? customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Whether the charge has been disputed.
    boolean disputed;
    # ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.
    string|Balance_transaction? failure_balance_transaction?;
    # Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/error-codes) for a list of codes).
    string? failure_code?;
    # Message to user further explaining reason for charge failure if available.
    string? failure_message?;
    # Information on fraud assessments for the charge.
    Charge_fraud_details? fraud_details?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # ID of the invoice this charge is for if one exists.
    string|Invoice? invoice?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "charge" 'object;
    # The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers) for details.
    string|Account? on_behalf_of?;
    # Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.
    Charge_outcome? outcome?;
    # `true` if the charge succeeded, or was successfully authorized for later capture.
    boolean paid;
    # ID of the PaymentIntent associated with this charge, if one exists.
    string|Payment_intent? payment_intent?;
    # ID of the payment method used in this charge.
    string? payment_method?;
    # Details about the payment method at the time of the transaction.
    Payment_method_details? payment_method_details?;
    Radar_radar_options radar_options?;
    # This is the email address that the receipt for this charge was sent to.
    string? receipt_email?;
    # This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.
    string? receipt_number?;
    # This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.
    string? receipt_url?;
    # Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.
    boolean refunded;
    RefundList_1? refunds?;
    # ID of the review associated with this charge if one exists.
    string|Review? review?;
    # Shipping information for the charge.
    Shipping? shipping?;
    # The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.
    string|Transfer? source_transfer?;
    # For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters.
    string? statement_descriptor?;
    # Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    string? statement_descriptor_suffix?;
    # The status of the payment is either `succeeded`, `pending`, or `failed`.
    "failed"|"pending"|"succeeded" status;
    # ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).
    string|Transfer transfer?;
    # An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.
    Charge_transfer_data? transfer_data?;
    # A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.
    string? transfer_group?;
};

# 
public type PersonList record {
    Person[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountQueriesExpandItemsString string;

public type payment_method_domains_bodyExpandItemsString string;

# 
public type Automatic_tax record {
    # Whether Stripe automatically computes tax on this invoice. Note that incompatible invoice items (invoice items with manually specified [tax rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`) cannot be added to automatic tax invoices.
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
    # The status of the most recent automated tax calculation for this invoice.
    "complete"|"failed"|"requires_location_inputs"? status?;
};

@constraint:String {maxLength: 5000}
public type GetSourcesSourceSourceTransactionsQueriesExpandItemsString string;

public type product_features_body record {|
    # The ID of the [Feature](https://stripe.com/docs/api/entitlements/feature) object attached to this product.
    @constraint:String {maxLength: 5000}
    string entitlement_feature;
    # Specifies which fields in the response should be expanded.
    product_features_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_flows_private_payment_methods_alipay record {
};

# 
public type Issuing_transaction_flight_data_leg record {
    # The three-letter IATA airport code of the flight's destination.
    string? arrival_airport_code?;
    # The airline carrier code.
    string? carrier?;
    # The three-letter IATA airport code that the flight departed from.
    string? departure_airport_code?;
    # The flight number.
    string? flight_number?;
    # The flight's service class.
    string? service_class?;
    # Whether a stopover is allowed on this flight.
    boolean? stopover_allowed?;
};

# 
public type NotificationEventList record {
    Event[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/events`}
    string url;
};

# Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports](https://stripe.com/docs/reporting/statements/api) documentation.
public type run_parameter_specs record {
    run_parameter_specsColumnsItemsString[] columns?;
    string connected_account?;
    string currency?;
    int interval_end?;
    int interval_start?;
    string payout?;
    "advance"|"advance_funding"|"anticipation_repayment"|"charge"|"charge_failure"|"climate_order_purchase"|"climate_order_refund"|"connect_collection_transfer"|"connect_reserved_funds"|"contribution"|"dispute"|"dispute_reversal"|"fee"|"financing_paydown"|"financing_paydown_reversal"|"financing_payout"|"financing_payout_reversal"|"issuing_authorization_hold"|"issuing_authorization_release"|"issuing_dispute"|"issuing_transaction"|"network_cost"|"other_adjustment"|"partial_capture_reversal"|"payout"|"payout_reversal"|"platform_earning"|"platform_earning_refund"|"refund"|"refund_failure"|"risk_reserved_funds"|"tax"|"topup"|"topup_reversal"|"transfer"|"transfer_reversal"|"unreconciled_customer_funds" reporting_category?;
    "Africa/Abidjan"|"Africa/Accra"|"Africa/Addis_Ababa"|"Africa/Algiers"|"Africa/Asmara"|"Africa/Asmera"|"Africa/Bamako"|"Africa/Bangui"|"Africa/Banjul"|"Africa/Bissau"|"Africa/Blantyre"|"Africa/Brazzaville"|"Africa/Bujumbura"|"Africa/Cairo"|"Africa/Casablanca"|"Africa/Ceuta"|"Africa/Conakry"|"Africa/Dakar"|"Africa/Dar_es_Salaam"|"Africa/Djibouti"|"Africa/Douala"|"Africa/El_Aaiun"|"Africa/Freetown"|"Africa/Gaborone"|"Africa/Harare"|"Africa/Johannesburg"|"Africa/Juba"|"Africa/Kampala"|"Africa/Khartoum"|"Africa/Kigali"|"Africa/Kinshasa"|"Africa/Lagos"|"Africa/Libreville"|"Africa/Lome"|"Africa/Luanda"|"Africa/Lubumbashi"|"Africa/Lusaka"|"Africa/Malabo"|"Africa/Maputo"|"Africa/Maseru"|"Africa/Mbabane"|"Africa/Mogadishu"|"Africa/Monrovia"|"Africa/Nairobi"|"Africa/Ndjamena"|"Africa/Niamey"|"Africa/Nouakchott"|"Africa/Ouagadougou"|"Africa/Porto-Novo"|"Africa/Sao_Tome"|"Africa/Timbuktu"|"Africa/Tripoli"|"Africa/Tunis"|"Africa/Windhoek"|"America/Adak"|"America/Anchorage"|"America/Anguilla"|"America/Antigua"|"America/Araguaina"|"America/Argentina/Buenos_Aires"|"America/Argentina/Catamarca"|"America/Argentina/ComodRivadavia"|"America/Argentina/Cordoba"|"America/Argentina/Jujuy"|"America/Argentina/La_Rioja"|"America/Argentina/Mendoza"|"America/Argentina/Rio_Gallegos"|"America/Argentina/Salta"|"America/Argentina/San_Juan"|"America/Argentina/San_Luis"|"America/Argentina/Tucuman"|"America/Argentina/Ushuaia"|"America/Aruba"|"America/Asuncion"|"America/Atikokan"|"America/Atka"|"America/Bahia"|"America/Bahia_Banderas"|"America/Barbados"|"America/Belem"|"America/Belize"|"America/Blanc-Sablon"|"America/Boa_Vista"|"America/Bogota"|"America/Boise"|"America/Buenos_Aires"|"America/Cambridge_Bay"|"America/Campo_Grande"|"America/Cancun"|"America/Caracas"|"America/Catamarca"|"America/Cayenne"|"America/Cayman"|"America/Chicago"|"America/Chihuahua"|"America/Ciudad_Juarez"|"America/Coral_Harbour"|"America/Cordoba"|"America/Costa_Rica"|"America/Creston"|"America/Cuiaba"|"America/Curacao"|"America/Danmarkshavn"|"America/Dawson"|"America/Dawson_Creek"|"America/Denver"|"America/Detroit"|"America/Dominica"|"America/Edmonton"|"America/Eirunepe"|"America/El_Salvador"|"America/Ensenada"|"America/Fort_Nelson"|"America/Fort_Wayne"|"America/Fortaleza"|"America/Glace_Bay"|"America/Godthab"|"America/Goose_Bay"|"America/Grand_Turk"|"America/Grenada"|"America/Guadeloupe"|"America/Guatemala"|"America/Guayaquil"|"America/Guyana"|"America/Halifax"|"America/Havana"|"America/Hermosillo"|"America/Indiana/Indianapolis"|"America/Indiana/Knox"|"America/Indiana/Marengo"|"America/Indiana/Petersburg"|"America/Indiana/Tell_City"|"America/Indiana/Vevay"|"America/Indiana/Vincennes"|"America/Indiana/Winamac"|"America/Indianapolis"|"America/Inuvik"|"America/Iqaluit"|"America/Jamaica"|"America/Jujuy"|"America/Juneau"|"America/Kentucky/Louisville"|"America/Kentucky/Monticello"|"America/Knox_IN"|"America/Kralendijk"|"America/La_Paz"|"America/Lima"|"America/Los_Angeles"|"America/Louisville"|"America/Lower_Princes"|"America/Maceio"|"America/Managua"|"America/Manaus"|"America/Marigot"|"America/Martinique"|"America/Matamoros"|"America/Mazatlan"|"America/Mendoza"|"America/Menominee"|"America/Merida"|"America/Metlakatla"|"America/Mexico_City"|"America/Miquelon"|"America/Moncton"|"America/Monterrey"|"America/Montevideo"|"America/Montreal"|"America/Montserrat"|"America/Nassau"|"America/New_York"|"America/Nipigon"|"America/Nome"|"America/Noronha"|"America/North_Dakota/Beulah"|"America/North_Dakota/Center"|"America/North_Dakota/New_Salem"|"America/Nuuk"|"America/Ojinaga"|"America/Panama"|"America/Pangnirtung"|"America/Paramaribo"|"America/Phoenix"|"America/Port-au-Prince"|"America/Port_of_Spain"|"America/Porto_Acre"|"America/Porto_Velho"|"America/Puerto_Rico"|"America/Punta_Arenas"|"America/Rainy_River"|"America/Rankin_Inlet"|"America/Recife"|"America/Regina"|"America/Resolute"|"America/Rio_Branco"|"America/Rosario"|"America/Santa_Isabel"|"America/Santarem"|"America/Santiago"|"America/Santo_Domingo"|"America/Sao_Paulo"|"America/Scoresbysund"|"America/Shiprock"|"America/Sitka"|"America/St_Barthelemy"|"America/St_Johns"|"America/St_Kitts"|"America/St_Lucia"|"America/St_Thomas"|"America/St_Vincent"|"America/Swift_Current"|"America/Tegucigalpa"|"America/Thule"|"America/Thunder_Bay"|"America/Tijuana"|"America/Toronto"|"America/Tortola"|"America/Vancouver"|"America/Virgin"|"America/Whitehorse"|"America/Winnipeg"|"America/Yakutat"|"America/Yellowknife"|"Antarctica/Casey"|"Antarctica/Davis"|"Antarctica/DumontDUrville"|"Antarctica/Macquarie"|"Antarctica/Mawson"|"Antarctica/McMurdo"|"Antarctica/Palmer"|"Antarctica/Rothera"|"Antarctica/South_Pole"|"Antarctica/Syowa"|"Antarctica/Troll"|"Antarctica/Vostok"|"Arctic/Longyearbyen"|"Asia/Aden"|"Asia/Almaty"|"Asia/Amman"|"Asia/Anadyr"|"Asia/Aqtau"|"Asia/Aqtobe"|"Asia/Ashgabat"|"Asia/Ashkhabad"|"Asia/Atyrau"|"Asia/Baghdad"|"Asia/Bahrain"|"Asia/Baku"|"Asia/Bangkok"|"Asia/Barnaul"|"Asia/Beirut"|"Asia/Bishkek"|"Asia/Brunei"|"Asia/Calcutta"|"Asia/Chita"|"Asia/Choibalsan"|"Asia/Chongqing"|"Asia/Chungking"|"Asia/Colombo"|"Asia/Dacca"|"Asia/Damascus"|"Asia/Dhaka"|"Asia/Dili"|"Asia/Dubai"|"Asia/Dushanbe"|"Asia/Famagusta"|"Asia/Gaza"|"Asia/Harbin"|"Asia/Hebron"|"Asia/Ho_Chi_Minh"|"Asia/Hong_Kong"|"Asia/Hovd"|"Asia/Irkutsk"|"Asia/Istanbul"|"Asia/Jakarta"|"Asia/Jayapura"|"Asia/Jerusalem"|"Asia/Kabul"|"Asia/Kamchatka"|"Asia/Karachi"|"Asia/Kashgar"|"Asia/Kathmandu"|"Asia/Katmandu"|"Asia/Khandyga"|"Asia/Kolkata"|"Asia/Krasnoyarsk"|"Asia/Kuala_Lumpur"|"Asia/Kuching"|"Asia/Kuwait"|"Asia/Macao"|"Asia/Macau"|"Asia/Magadan"|"Asia/Makassar"|"Asia/Manila"|"Asia/Muscat"|"Asia/Nicosia"|"Asia/Novokuznetsk"|"Asia/Novosibirsk"|"Asia/Omsk"|"Asia/Oral"|"Asia/Phnom_Penh"|"Asia/Pontianak"|"Asia/Pyongyang"|"Asia/Qatar"|"Asia/Qostanay"|"Asia/Qyzylorda"|"Asia/Rangoon"|"Asia/Riyadh"|"Asia/Saigon"|"Asia/Sakhalin"|"Asia/Samarkand"|"Asia/Seoul"|"Asia/Shanghai"|"Asia/Singapore"|"Asia/Srednekolymsk"|"Asia/Taipei"|"Asia/Tashkent"|"Asia/Tbilisi"|"Asia/Tehran"|"Asia/Tel_Aviv"|"Asia/Thimbu"|"Asia/Thimphu"|"Asia/Tokyo"|"Asia/Tomsk"|"Asia/Ujung_Pandang"|"Asia/Ulaanbaatar"|"Asia/Ulan_Bator"|"Asia/Urumqi"|"Asia/Ust-Nera"|"Asia/Vientiane"|"Asia/Vladivostok"|"Asia/Yakutsk"|"Asia/Yangon"|"Asia/Yekaterinburg"|"Asia/Yerevan"|"Atlantic/Azores"|"Atlantic/Bermuda"|"Atlantic/Canary"|"Atlantic/Cape_Verde"|"Atlantic/Faeroe"|"Atlantic/Faroe"|"Atlantic/Jan_Mayen"|"Atlantic/Madeira"|"Atlantic/Reykjavik"|"Atlantic/South_Georgia"|"Atlantic/St_Helena"|"Atlantic/Stanley"|"Australia/ACT"|"Australia/Adelaide"|"Australia/Brisbane"|"Australia/Broken_Hill"|"Australia/Canberra"|"Australia/Currie"|"Australia/Darwin"|"Australia/Eucla"|"Australia/Hobart"|"Australia/LHI"|"Australia/Lindeman"|"Australia/Lord_Howe"|"Australia/Melbourne"|"Australia/NSW"|"Australia/North"|"Australia/Perth"|"Australia/Queensland"|"Australia/South"|"Australia/Sydney"|"Australia/Tasmania"|"Australia/Victoria"|"Australia/West"|"Australia/Yancowinna"|"Brazil/Acre"|"Brazil/DeNoronha"|"Brazil/East"|"Brazil/West"|"CET"|"CST6CDT"|"Canada/Atlantic"|"Canada/Central"|"Canada/Eastern"|"Canada/Mountain"|"Canada/Newfoundland"|"Canada/Pacific"|"Canada/Saskatchewan"|"Canada/Yukon"|"Chile/Continental"|"Chile/EasterIsland"|"Cuba"|"EET"|"EST"|"EST5EDT"|"Egypt"|"Eire"|"Etc/GMT"|"Etc/GMT+0"|"Etc/GMT+1"|"Etc/GMT+10"|"Etc/GMT+11"|"Etc/GMT+12"|"Etc/GMT+2"|"Etc/GMT+3"|"Etc/GMT+4"|"Etc/GMT+5"|"Etc/GMT+6"|"Etc/GMT+7"|"Etc/GMT+8"|"Etc/GMT+9"|"Etc/GMT-0"|"Etc/GMT-1"|"Etc/GMT-10"|"Etc/GMT-11"|"Etc/GMT-12"|"Etc/GMT-13"|"Etc/GMT-14"|"Etc/GMT-2"|"Etc/GMT-3"|"Etc/GMT-4"|"Etc/GMT-5"|"Etc/GMT-6"|"Etc/GMT-7"|"Etc/GMT-8"|"Etc/GMT-9"|"Etc/GMT0"|"Etc/Greenwich"|"Etc/UCT"|"Etc/UTC"|"Etc/Universal"|"Etc/Zulu"|"Europe/Amsterdam"|"Europe/Andorra"|"Europe/Astrakhan"|"Europe/Athens"|"Europe/Belfast"|"Europe/Belgrade"|"Europe/Berlin"|"Europe/Bratislava"|"Europe/Brussels"|"Europe/Bucharest"|"Europe/Budapest"|"Europe/Busingen"|"Europe/Chisinau"|"Europe/Copenhagen"|"Europe/Dublin"|"Europe/Gibraltar"|"Europe/Guernsey"|"Europe/Helsinki"|"Europe/Isle_of_Man"|"Europe/Istanbul"|"Europe/Jersey"|"Europe/Kaliningrad"|"Europe/Kiev"|"Europe/Kirov"|"Europe/Kyiv"|"Europe/Lisbon"|"Europe/Ljubljana"|"Europe/London"|"Europe/Luxembourg"|"Europe/Madrid"|"Europe/Malta"|"Europe/Mariehamn"|"Europe/Minsk"|"Europe/Monaco"|"Europe/Moscow"|"Europe/Nicosia"|"Europe/Oslo"|"Europe/Paris"|"Europe/Podgorica"|"Europe/Prague"|"Europe/Riga"|"Europe/Rome"|"Europe/Samara"|"Europe/San_Marino"|"Europe/Sarajevo"|"Europe/Saratov"|"Europe/Simferopol"|"Europe/Skopje"|"Europe/Sofia"|"Europe/Stockholm"|"Europe/Tallinn"|"Europe/Tirane"|"Europe/Tiraspol"|"Europe/Ulyanovsk"|"Europe/Uzhgorod"|"Europe/Vaduz"|"Europe/Vatican"|"Europe/Vienna"|"Europe/Vilnius"|"Europe/Volgograd"|"Europe/Warsaw"|"Europe/Zagreb"|"Europe/Zaporozhye"|"Europe/Zurich"|"Factory"|"GB"|"GB-Eire"|"GMT"|"GMT+0"|"GMT-0"|"GMT0"|"Greenwich"|"HST"|"Hongkong"|"Iceland"|"Indian/Antananarivo"|"Indian/Chagos"|"Indian/Christmas"|"Indian/Cocos"|"Indian/Comoro"|"Indian/Kerguelen"|"Indian/Mahe"|"Indian/Maldives"|"Indian/Mauritius"|"Indian/Mayotte"|"Indian/Reunion"|"Iran"|"Israel"|"Jamaica"|"Japan"|"Kwajalein"|"Libya"|"MET"|"MST"|"MST7MDT"|"Mexico/BajaNorte"|"Mexico/BajaSur"|"Mexico/General"|"NZ"|"NZ-CHAT"|"Navajo"|"PRC"|"PST8PDT"|"Pacific/Apia"|"Pacific/Auckland"|"Pacific/Bougainville"|"Pacific/Chatham"|"Pacific/Chuuk"|"Pacific/Easter"|"Pacific/Efate"|"Pacific/Enderbury"|"Pacific/Fakaofo"|"Pacific/Fiji"|"Pacific/Funafuti"|"Pacific/Galapagos"|"Pacific/Gambier"|"Pacific/Guadalcanal"|"Pacific/Guam"|"Pacific/Honolulu"|"Pacific/Johnston"|"Pacific/Kanton"|"Pacific/Kiritimati"|"Pacific/Kosrae"|"Pacific/Kwajalein"|"Pacific/Majuro"|"Pacific/Marquesas"|"Pacific/Midway"|"Pacific/Nauru"|"Pacific/Niue"|"Pacific/Norfolk"|"Pacific/Noumea"|"Pacific/Pago_Pago"|"Pacific/Palau"|"Pacific/Pitcairn"|"Pacific/Pohnpei"|"Pacific/Ponape"|"Pacific/Port_Moresby"|"Pacific/Rarotonga"|"Pacific/Saipan"|"Pacific/Samoa"|"Pacific/Tahiti"|"Pacific/Tarawa"|"Pacific/Tongatapu"|"Pacific/Truk"|"Pacific/Wake"|"Pacific/Wallis"|"Pacific/Yap"|"Poland"|"Portugal"|"ROC"|"ROK"|"Singapore"|"Turkey"|"UCT"|"US/Alaska"|"US/Aleutian"|"US/Arizona"|"US/Central"|"US/East-Indiana"|"US/Eastern"|"US/Hawaii"|"US/Indiana-Starke"|"US/Michigan"|"US/Mountain"|"US/Pacific"|"US/Pacific-New"|"US/Samoa"|"UTC"|"Universal"|"W-SU"|"WET"|"Zulu" timezone?;
};

# If you populate this hash, this SetupIntent generates a `single_use` mandate after successful completion.
public type setup_intent_single_use_params record {
    int amount;
    string currency;
};

# 
public type Issuing_authorization_pending_request record {
    # The additional amount Stripe will hold if the authorization is approved, in the card's [currency](https://stripe.com/docs/api#issuing_authorization_object-pending-request-currency) and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    Issuing_authorization_amount_details? amount_details?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.
    boolean is_amount_controllable;
    # The amount the merchant is requesting to be authorized in the `merchant_currency`. The amount is in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int merchant_amount;
    # The local currency the merchant is requesting to authorize.
    string merchant_currency;
    # The card network's estimate of the likelihood that an authorization is fraudulent. Takes on values between 1 and 99.
    int? network_risk_score?;
};

public type plans_plan_bodyExpandItemsString string;

public type refunds_refund_body_1 record {|
    # Specifies which fields in the response should be expanded.
    refunds_refund_body_1ExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

@constraint:String {maxLength: 5000}
public type Person_requirementsPendingverificationItemsString string;

@constraint:String {maxLength: 200}
public type GetIssuingPersonalizationDesignsQueriesLookupkeysItemsString string;

public type subscription_default_tax_rates SubscriptiondefaulttaxratesItemsString[]|"";

# 
public type Payment_intent_next_action_alipay_handle_redirect record {
    # The native data to be used with Alipay SDK you must redirect your customer to in order to authenticate the payment in an Android App.
    string? native_data?;
    # The native URL you must redirect your customer to in order to authenticate the payment in an iOS App.
    string? native_url?;
    # If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.
    string? return_url?;
    # The URL you must redirect your customer to in order to authenticate the payment.
    string? url?;
};

public type payment_method_domain_validate_bodyExpandItemsString string;

public type shipping_rates_shipping_rate_token_body record {|
    # Whether the shipping rate can be used for new purchases. Defaults to `true`.
    boolean active?;
    # Specifies which fields in the response should be expanded.
    shipping_rates_shipping_rate_token_bodyExpandItemsString[] expand?;
    fixed_amount_update fixed_amount?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
|};

# InboundTransfers contains inbound transfers features for a FinancialAccount.
public type Treasury_financial_accounts_resource_inbound_transfers record {
    Treasury_financial_accounts_resource_ach_toggle_settings ach?;
};

# 
public type Mandate_amazon_pay record {
};

# 
public type Payment_flows_private_payment_methods_alipay_details record {
    # Uniquely identifies this particular Alipay account. You can use this attribute to check whether two Alipay accounts are the same.
    @constraint:String {maxLength: 5000}
    string buyer_id?;
    # Uniquely identifies this particular Alipay account. You can use this attribute to check whether two Alipay accounts are the same.
    string? fingerprint?;
    # Transaction ID of this particular Alipay transaction.
    string? transaction_id?;
};

# 
public type Subscription_schedules_resource_default_settings record {
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account during this phase of the schedule.
    decimal? application_fee_percent?;
    Subscription_schedules_resource_default_settings_automatic_tax automatic_tax?;
    # Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    "automatic"|"phase_start" billing_cycle_anchor;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period
    Subscription_billing_thresholds? billing_thresholds?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.
    "charge_automatically"|"send_invoice"? collection_method?;
    # ID of the default payment method for the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings.
    string|Payment_method? default_payment_method?;
    # Subscription description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    string? description?;
    Invoice_setting_subscription_schedule_setting invoice_settings;
    # The account (if any) the charge was made on behalf of for charges associated with the schedule's subscription. See the Connect documentation for details.
    string|Account? on_behalf_of?;
    # The account (if any) the associated subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.
    Subscription_transfer_data? transfer_data?;
};

# 
public type Payment_method_options_wechat_pay record {
    # The app ID registered with WeChat Pay. Only required when client is ios or android.
    string? app_id?;
    # The client type that the end customer will pay from
    "android"|"ios"|"web"? 'client?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type TaxratesItemsString string;

# Represents the Queries record for the operation: GetTerminalLocationsLocation
public type GetTerminalLocationsLocationQueries record {
    # Specifies which fields in the response should be expanded.
    GetTerminalLocationsLocationQueriesExpandItemsString[] expand?;
};

# 
public type Tax_product_resource_line_item_tax_breakdown record {
    # The amount of tax, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    Tax_product_resource_jurisdiction jurisdiction;
    # Indicates whether the jurisdiction was determined by the origin (merchant's address) or destination (customer's address).
    "destination"|"origin" sourcing;
    # Details regarding the rate for this tax. This field will be `null` when the tax is not imposed, for example if the product is exempt from tax.
    Tax_product_resource_line_item_tax_rate_details? tax_rate_details?;
    # The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.
    "customer_exempt"|"not_collecting"|"not_subject_to_tax"|"not_supported"|"portion_product_exempt"|"portion_reduced_rated"|"portion_standard_rated"|"product_exempt"|"product_exempt_holiday"|"proportionally_rated"|"reduced_rated"|"reverse_charge"|"standard_rated"|"taxable_basis_reduced"|"zero_rated" taxability_reason;
    # The amount on which tax is calculated, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int taxable_amount;
};

public type shipping_return_bodyExpandItemsString string;

# Toggle settings for enabling/disabling a feature
public type Treasury_financial_accounts_resource_toggle_settings record {
    # Whether the FinancialAccount should have the Feature.
    boolean requested;
    # Whether the Feature is operational.
    "active"|"pending"|"restricted" status;
    # Additional details; includes at least one entry when the status is not `active`.
    Treasury_financial_accounts_resource_toggles_setting_status_details[] status_details;
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_adjusted_for_overdraft record {
    # The [Balance Transaction](https://stripe.com/docs/api/balance_transactions/object) that corresponds to funds taken out of your Stripe balance.
    string|Balance_transaction balance_transaction;
    # The [Cash Balance Transaction](https://stripe.com/docs/api/cash_balance_transactions/object) that brought the customer balance negative, triggering the clawback of funds.
    string|Customer_cash_balance_transaction linked_transaction;
};

public type invoices_settings_specs record {
    DefaultaccounttaxidsItemsString[]|"" default_account_tax_ids?;
};

# Represents the Queries record for the operation: GetApplicationFees
public type GetApplicationFeesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetApplicationFeesQueriesExpandItemsString[] expand?;
    # Only return application fees for the charge specified by this charge ID.
    @constraint:String {maxLength: 5000}
    string charge?;
    # Only return applications fees that were created during the given date interval.
    created_1 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Payment_method_details_card_wallet_apple_pay record {
};

# 
public type Setup_intent_payment_method_options_link record {
};

# 
public type Portal_flows_coupon_offer record {
    # The ID of the coupon to be offered.
    @constraint:String {maxLength: 5000}
    string coupon;
};

# 
public type Payment_intent_next_action_card_await_notification record {
    # The time that payment will be attempted. If customer approval is required, they need to provide approval before this time.
    int? charge_attempt_at?;
    # For payments greater than INR 15000, the customer must provide explicit approval of the payment with their bank. For payments of lower amount, no customer action is required.
    boolean? customer_approval_required?;
};

# 
public type Payment_method_options_amazon_pay record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

public type documents_param record {
    documents_paramFilesItemsString[] files?;
};

# 
public type Source_transaction_chf_credit_transfer_data record {
    # Reference associated with the transfer.
    @constraint:String {maxLength: 5000}
    string reference?;
    # Sender's country address.
    @constraint:String {maxLength: 5000}
    string sender_address_country?;
    # Sender's line 1 address.
    @constraint:String {maxLength: 5000}
    string sender_address_line1?;
    # Sender's bank account IBAN.
    @constraint:String {maxLength: 5000}
    string sender_iban?;
    # Sender's name.
    @constraint:String {maxLength: 5000}
    string sender_name?;
};

# Represents a per-setup override of a reader configuration
public type Terminal_reader_reader_resource_process_setup_config record {
    # Enable customer initiated cancellation when processing this SetupIntent.
    boolean enable_customer_cancellation?;
};

# 
public type IssuingAuthorizationList record {
    Issuing\.authorization[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/authorizations`}
    string url;
};

# 
public type Payment_method_mobilepay record {
};

# Represents the Queries record for the operation: GetTreasuryInboundTransfers
public type GetTreasuryInboundTransfersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryInboundTransfersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return InboundTransfers that have the given status: `processing`, `succeeded`, `failed` or `canceled`.
    "canceled"|"failed"|"processing"|"succeeded" status?;
};

# You can configure [webhook endpoints](https://docs.stripe.com/webhooks/) via the API to be
# notified about events that happen in your Stripe account or connected
# accounts.
# 
# Most users configure webhooks from [the dashboard](https://dashboard.stripe.com/webhooks), which provides a user interface for registering and testing your webhook endpoints.
# 
# Related guide: [Setting up webhooks](https://docs.stripe.com/webhooks/configure)
public type Webhook_endpoint record {
    # The API version events are rendered as for this webhook endpoint.
    string? api_version?;
    # The ID of the associated Connect application.
    string? application?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # An optional description of what the webhook is used for.
    string? description?;
    # The list of events to enable for this endpoint. `['*']` indicates that all events are enabled, except those that require explicit selection.
    Webhook_endpointEnabledeventsItemsString[] enabled_events;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "webhook_endpoint" 'object;
    # The endpoint's secret, used to generate [webhook signatures](https://docs.stripe.com/webhooks/signatures). Only returned at creation.
    @constraint:String {maxLength: 5000}
    string secret?;
    # The status of the webhook. It can be `enabled` or `disabled`.
    @constraint:String {maxLength: 5000}
    string status;
    # The URL of the webhook endpoint.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type IssuingCardholderList record {
    Issuing\.cardholder[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/cardholders`}
    string url;
};

public type payment_method_domain_validate_body record {|
    # Specifies which fields in the response should be expanded.
    payment_method_domain_validate_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_links_resource_custom_fields_numeric record {
    # The maximum character length constraint for the customer's input.
    int? maximum_length?;
    # The minimum character length requirement for the customer's input.
    int? minimum_length?;
};

# 
public type Payment_intent_next_action_wechat_pay_redirect_to_ios_app record {
    # An universal link that redirect to WeChat Pay app
    @constraint:String {maxLength: 5000}
    string native_url;
};

# Represents the Queries record for the operation: GetTreasuryTransactions
public type GetTreasuryTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryTransactionsQueriesExpandItemsString[] expand?;
    # Only return Transactions that were created during the given date interval.
    created_46 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # The results are in reverse chronological order by `created` or `posted_at`. The default is `created`.
    "created"|"posted_at" order_by?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # A filter for the `status_transitions.posted_at` timestamp. When using this filter, `status=posted` and `order_by=posted_at` must also be specified.
    status_transition_timestamp_specs status_transitions?;
    # Only return Transactions that have the given status: `open`, `posted`, or `void`.
    "open"|"posted"|"void" status?;
};

public type SubscriptiondefaulttaxratesItemsString string;

public type settlements_settlement_bodyExpandItemsString string;

# 
public type Connect_embedded_account_session_create_components record {
    Connect_embedded_account_config_claim account_management;
    Connect_embedded_account_config_claim account_onboarding;
    Connect_embedded_payouts_config_claim balances;
    Connect_embedded_base_config_claim documents;
    Connect_embedded_account_config_claim notification_banner;
    Connect_embedded_payments_config_claim payment_details;
    Connect_embedded_payments_config_claim payments;
    Connect_embedded_payouts_config_claim payouts;
    Connect_embedded_base_config_claim payouts_list;
};

# 
public type Treasury_received_debits_resource_debit_reversal_linked_flows record {
    # Set if there is an Issuing dispute associated with the DebitReversal.
    string? issuing_dispute?;
};

public type after_completion_redirect_param record {
    string return_url;
};

@constraint:String {maxLength: 5000}
public type GetFinancialConnectionsAccountsQueriesExpandItemsString string;

# Represents a per-transaction tipping configuration
public type Terminal_reader_reader_resource_tipping_config record {
    # Amount used to calculate tip suggestions on tipping selection screen for this transaction. Must be a positive integer in the smallest currency unit (e.g., 100 cents to represent $1.00 or 100 to represent ¥100, a zero-decimal currency).
    int amount_eligible?;
};

# 
public type TreasuryOutboundPaymentsResourceOutboundPaymentList record {
    # Details about each object.
    Treasury\.outbound_payment[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/treasury/outbound_payments`}
    string url;
};

# 
public type Legal_entity_person_verification record {
    # A document showing address, either a passport, local ID card, or utility bill from a well-known utility company.
    Legal_entity_person_verification_document? additional_document?;
    # A user-displayable string describing the verification state for the person. For example, this may say "Provided identity information could not be verified".
    string? details?;
    # One of `document_address_mismatch`, `document_dob_mismatch`, `document_duplicate_type`, `document_id_number_mismatch`, `document_name_mismatch`, `document_nationality_mismatch`, `failed_keyed_identity`, or `failed_other`. A machine-readable code specifying the verification state for the person.
    string? details_code?;
    Legal_entity_person_verification_document document?;
    # The state of verification for the person. Possible values are `unverified`, `pending`, or `verified`.
    @constraint:String {maxLength: 5000}
    string status;
};

# 
public type Internal_card record {
    # Brand of the card used in the transaction
    string? brand?;
    # Two-letter ISO code representing the country of the card
    string? country?;
    # Two digit number representing the card's expiration month
    int? exp_month?;
    # Two digit number representing the card's expiration year
    int? exp_year?;
    # The last 4 digits of the card
    string? last4?;
};

public type plans_bodyExpandItemsString string;

# 
public type BankConnectionsResourceTransactionList record {
    # Details about each object.
    Financial_connections\.transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/financial_connections/transactions`}
    string url;
};

public type locations_location_body record {|
    optional_fields_address_1 address?;
    # The ID of a configuration that will be used to customize all readers in this location.
    string|"" configuration_overrides?;
    # A name for the location.
    @constraint:String {maxLength: 1000}
    string display_name?;
    # Specifies which fields in the response should be expanded.
    locations_location_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

@constraint:String {maxLength: 5000}
public type GetBillingMetersIdEventSummariesQueriesExpandItemsString string;

# 
public type PlatformEarningList record {
    Application_fee[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/application_fees`}
    string url;
};

# 
public type PaymentLinksResourcePaymentLinkList record {
    Payment_link[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/payment_links`}
    string url;
};

# Represents the Queries record for the operation: GetSubscriptions
public type GetSubscriptionsQueries record {
    # Filter for subscriptions that are associated with the specified test clock. The response will not include subscriptions with test clocks if this and the customer parameter is not set.
    @constraint:String {maxLength: 5000}
    string test_clock?;
    # Only return subscriptions that were created during the given date interval.
    created_39 created?;
    current_period_end current_period_end?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSubscriptionsQueriesExpandItemsString[] expand?;
    # Filter subscriptions by their automatic tax settings.
    automatic_tax_filter_params automatic_tax?;
    # Filter for subscriptions that contain this recurring price ID.
    @constraint:String {maxLength: 5000}
    string price?;
    # The collection method of the subscriptions to retrieve. Either `charge_automatically` or `send_invoice`.
    "charge_automatically"|"send_invoice" collection_method?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    current_period_start current_period_start?;
    # The ID of the customer whose subscriptions will be retrieved.
    @constraint:String {maxLength: 5000}
    string customer?;
    # The status of the subscriptions to retrieve. Passing in a value of `canceled` will return all canceled subscriptions, including those belonging to deleted customers. Pass `ended` to find subscriptions that are canceled and subscriptions that are expired due to [incomplete payment](https://stripe.com/docs/billing/subscriptions/overview#subscription-statuses). Passing in a value of `all` will return subscriptions of all statuses. If no value is supplied, all subscriptions that have not been canceled are returned.
    "active"|"all"|"canceled"|"ended"|"incomplete"|"incomplete_expired"|"past_due"|"paused"|"trialing"|"unpaid" status?;
};

# When set, provides configuration for Checkout to collect a shipping address from a customer.
public type shipping_address_collection_params record {
    ("AC"|"AD"|"AE"|"AF"|"AG"|"AI"|"AL"|"AM"|"AO"|"AQ"|"AR"|"AT"|"AU"|"AW"|"AX"|"AZ"|"BA"|"BB"|"BD"|"BE"|"BF"|"BG"|"BH"|"BI"|"BJ"|"BL"|"BM"|"BN"|"BO"|"BQ"|"BR"|"BS"|"BT"|"BV"|"BW"|"BY"|"BZ"|"CA"|"CD"|"CF"|"CG"|"CH"|"CI"|"CK"|"CL"|"CM"|"CN"|"CO"|"CR"|"CV"|"CW"|"CY"|"CZ"|"DE"|"DJ"|"DK"|"DM"|"DO"|"DZ"|"EC"|"EE"|"EG"|"EH"|"ER"|"ES"|"ET"|"FI"|"FJ"|"FK"|"FO"|"FR"|"GA"|"GB"|"GD"|"GE"|"GF"|"GG"|"GH"|"GI"|"GL"|"GM"|"GN"|"GP"|"GQ"|"GR"|"GS"|"GT"|"GU"|"GW"|"GY"|"HK"|"HN"|"HR"|"HT"|"HU"|"ID"|"IE"|"IL"|"IM"|"IN"|"IO"|"IQ"|"IS"|"IT"|"JE"|"JM"|"JO"|"JP"|"KE"|"KG"|"KH"|"KI"|"KM"|"KN"|"KR"|"KW"|"KY"|"KZ"|"LA"|"LB"|"LC"|"LI"|"LK"|"LR"|"LS"|"LT"|"LU"|"LV"|"LY"|"MA"|"MC"|"MD"|"ME"|"MF"|"MG"|"MK"|"ML"|"MM"|"MN"|"MO"|"MQ"|"MR"|"MS"|"MT"|"MU"|"MV"|"MW"|"MX"|"MY"|"MZ"|"NA"|"NC"|"NE"|"NG"|"NI"|"NL"|"NO"|"NP"|"NR"|"NU"|"NZ"|"OM"|"PA"|"PE"|"PF"|"PG"|"PH"|"PK"|"PL"|"PM"|"PN"|"PR"|"PS"|"PT"|"PY"|"QA"|"RE"|"RO"|"RS"|"RU"|"RW"|"SA"|"SB"|"SC"|"SE"|"SG"|"SH"|"SI"|"SJ"|"SK"|"SL"|"SM"|"SN"|"SO"|"SR"|"SS"|"ST"|"SV"|"SX"|"SZ"|"TA"|"TC"|"TD"|"TF"|"TG"|"TH"|"TJ"|"TK"|"TL"|"TM"|"TN"|"TO"|"TR"|"TT"|"TV"|"TW"|"TZ"|"UA"|"UG"|"US"|"UY"|"UZ"|"VA"|"VC"|"VE"|"VG"|"VN"|"VU"|"WF"|"WS"|"XK"|"YE"|"YT"|"ZA"|"ZM"|"ZW"|"ZZ")[] allowed_countries;
};

# Data used for generating a Mandate.
public type Confirmation_tokens_resource_mandate_data record {
    Confirmation_tokens_resource_mandate_data_resource_customer_acceptance customer_acceptance;
};

# Represents the Queries record for the operation: GetIdentityVerificationSessionsSession
public type GetIdentityVerificationSessionsSessionQueries record {
    # Specifies which fields in the response should be expanded.
    GetIdentityVerificationSessionsSessionQueriesExpandItemsString[] expand?;
};

public type checkout_sessions_body record {|
    after_expiration_params after_expiration?;
    # Enables user redeemable promotion codes.
    boolean allow_promotion_codes?;
    automatic_tax_params automatic_tax?;
    # Specify whether Checkout should collect the customer's billing address. Defaults to `auto`.
    "auto"|"required" billing_address_collection?;
    # If set, Checkout displays a back button and customers will be directed to this URL if they decide to cancel payment and return to your website.
    @constraint:String {maxLength: 5000}
    string cancel_url?;
    # A unique string to reference the Checkout Session. This can be a
    # customer ID, a cart ID, or similar, and can be used to reconcile the
    # session with your internal systems.
    @constraint:String {maxLength: 200}
    string client_reference_id?;
    consent_collection_params consent_collection?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Required in `setup` mode when `payment_method_types` is not set.
    string currency?;
    # Collect additional information from your customer using custom fields. Up to 3 fields are supported.
    custom_field_param[] custom_fields?;
    custom_text_param custom_text?;
    # ID of an existing Customer, if one exists. In `payment` mode, the customer’s most recently saved card
    # payment method will be used to prefill the email, name, card details, and billing address
    # on the Checkout page. In `subscription` mode, the customer’s [default payment method](https://stripe.com/docs/api/customers/update#update_customer-invoice_settings-default_payment_method)
    # will be used if it’s a card, otherwise the most recently saved card will be used. A valid billing address, billing name and billing email are required on the payment method for Checkout to prefill the customer's card details.
    # 
    # If the Customer already has a valid [email](https://stripe.com/docs/api/customers/object#customer_object-email) set, the email will be prefilled and not editable in Checkout.
    # If the Customer does not have a valid `email`, Checkout will set the email entered during the session on the Customer.
    # 
    # If blank for Checkout Sessions in `subscription` mode or with `customer_creation` set as `always` in `payment` mode, Checkout will create a new Customer object based on information provided during the payment flow.
    # 
    # You can set [`payment_intent_data.setup_future_usage`](https://stripe.com/docs/api/checkout/sessions/create#create_checkout_session-payment_intent_data-setup_future_usage) to have Checkout automatically attach the payment method to the Customer you pass in for future reuse.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Configure whether a Checkout Session creates a [Customer](https://stripe.com/docs/api/customers) during Session confirmation.
    # 
    # When a Customer is not created, you can still retrieve email, address, and other customer data entered in Checkout
    # with [customer_details](https://stripe.com/docs/api/checkout/sessions/object#checkout_session_object-customer_details).
    # 
    # Sessions that don't create Customers instead are grouped by [guest customers](https://stripe.com/docs/payments/checkout/guest-customers)
    # in the Dashboard. Promotion codes limited to first time customers will return invalid for these Sessions.
    # 
    # Can only be set in `payment` and `setup` mode.
    "always"|"if_required" customer_creation?;
    # If provided, this value will be used when the Customer object is created.
    # If not provided, customers will be asked to enter their email address.
    # Use this parameter to prefill customer data if you already have an email
    # on file. To access information about the customer once a session is
    # complete, use the `customer` field.
    string customer_email?;
    customer_update_params customer_update?;
    # The coupon or promotion code to apply to this Session. Currently, only up to one may be specified.
    discount_params[] discounts?;
    # Specifies which fields in the response should be expanded.
    checkout_sessions_bodyExpandItemsString[] expand?;
    # The Epoch time in seconds at which the Checkout Session will expire. It can be anywhere from 30 minutes to 24 hours after Checkout Session creation. By default, this value is 24 hours from creation.
    int expires_at?;
    invoice_creation_params invoice_creation?;
    # A list of items the customer is purchasing. Use this parameter to pass one-time or recurring [Prices](https://stripe.com/docs/api/prices).
    # 
    # For `payment` mode, there is a maximum of 100 line items, however it is recommended to consolidate line items if there are more than a few dozen.
    # 
    # For `subscription` mode, there is a maximum of 20 line items with recurring Prices and 20 line items with one-time Prices. Line items with one-time Prices will be on the initial invoice only.
    line_item_params[] line_items?;
    # The IETF language tag of the locale Checkout is displayed in. If blank or `auto`, the browser's locale is used.
    "auto"|"bg"|"cs"|"da"|"de"|"el"|"en"|"en-GB"|"es"|"es-419"|"et"|"fi"|"fil"|"fr"|"fr-CA"|"hr"|"hu"|"id"|"it"|"ja"|"ko"|"lt"|"lv"|"ms"|"mt"|"nb"|"nl"|"pl"|"pt"|"pt-BR"|"ro"|"ru"|"sk"|"sl"|"sv"|"th"|"tr"|"vi"|"zh"|"zh-HK"|"zh-TW" locale?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The mode of the Checkout Session. Pass `subscription` if the Checkout Session includes at least one recurring item.
    "payment"|"setup"|"subscription" mode?;
    payment_intent_data_params payment_intent_data?;
    # Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.
    # This may occur if the Checkout Session includes a free trial or a discount.
    # 
    # Can only be set in `subscription` mode. Defaults to `always`.
    # 
    # If you'd like information on how to collect a payment method outside of Checkout, read the guide on configuring [subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).
    "always"|"if_required" payment_method_collection?;
    # The ID of the payment method configuration to use with this Checkout session.
    @constraint:String {maxLength: 100}
    string payment_method_configuration?;
    payment_method_data_param payment_method_data?;
    payment_method_options_param payment_method_options?;
    # A list of the types of payment methods (e.g., `card`) this Checkout Session can accept.
    # 
    # You can omit this attribute to manage your payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).
    # See [Dynamic Payment Methods](https://stripe.com/docs/payments/payment-methods/integration-options#using-dynamic-payment-methods) for more details.
    # 
    # Read more about the supported payment methods and their requirements in our [payment
    # method details guide](/docs/payments/checkout/payment-methods).
    # 
    # If multiple payment methods are passed, Checkout will dynamically reorder them to
    # prioritize the most relevant payment methods based on the customer's location and
    # other characteristics.
    ("acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip")[] payment_method_types?;
    phone_number_collection_params phone_number_collection?;
    # This parameter applies to `ui_mode: embedded`. Learn more about the [redirect behavior](https://stripe.com/docs/payments/checkout/custom-redirect-behavior) of embedded sessions. Defaults to `always`.
    "always"|"if_required"|"never" redirect_on_completion?;
    # The URL to redirect your customer back to after they authenticate or cancel their payment on the
    # payment method's app or site. This parameter is required if ui_mode is `embedded`
    # and redirect-based payment methods are enabled on the session.
    @constraint:String {maxLength: 5000}
    string return_url?;
    saved_payment_method_options_param saved_payment_method_options?;
    setup_intent_data_param setup_intent_data?;
    shipping_address_collection_params shipping_address_collection?;
    # The shipping rate options to apply to this Session. Up to a maximum of 5.
    shipping_option_params[] shipping_options?;
    # Describes the type of transaction being performed by Checkout in order to customize
    # relevant text on the page, such as the submit button. `submit_type` can only be
    # specified on Checkout Sessions in `payment` mode. If blank or `auto`, `pay` is used.
    "auto"|"book"|"donate"|"pay" submit_type?;
    subscription_data_params subscription_data?;
    # The URL to which Stripe should send customers when payment or setup
    # is complete.
    # This parameter is not allowed if ui_mode is `embedded`. If you’d like to use
    # information from the successful Checkout Session on your page, read the
    # guide on [customizing your success page](https://stripe.com/docs/payments/checkout/custom-success-page).
    @constraint:String {maxLength: 5000}
    string success_url?;
    tax_id_collection_params tax_id_collection?;
    # The UI mode of the Session. Defaults to `hosted`.
    "embedded"|"hosted" ui_mode?;
|};

public type refunds_id_body record {|
    # Specifies which fields in the response should be expanded.
    refunds_id_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# Represents the Queries record for the operation: GetPromotionCodesPromotionCode
public type GetPromotionCodesPromotionCodeQueries record {
    # Specifies which fields in the response should be expanded.
    GetPromotionCodesPromotionCodeQueriesExpandItemsString[] expand?;
};

public type payment_method_detach_bodyExpandItemsString string;

public type persons_person_body record {|
    person_additional_tos_acceptances_specs additional_tos_acceptances?;
    legal_entity_and_kyc_address_specs_1 address?;
    japan_address_kana_specs_1 address_kana?;
    japan_address_kanji_specs_1 address_kanji?;
    # The person's date of birth.
    record {int day; int month; int year;}|"" dob?;
    person_documents_specs documents?;
    # The person's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    persons_person_bodyExpandItemsString[] expand?;
    # The person's first name.
    @constraint:String {maxLength: 5000}
    string first_name?;
    # The Kana variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    # The Kanji variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    # A list of alternate names or aliases that the person is known by.
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    # The person's gender (International regulations require either "male" or "female").
    string gender?;
    # The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number?;
    # The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    # The person's last name.
    @constraint:String {maxLength: 5000}
    string last_name?;
    # The Kana variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    # The Kanji variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    # The person's maiden name.
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or "XX" if unavailable.
    @constraint:String {maxLength: 5000}
    string nationality?;
    # A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.
    @constraint:String {maxLength: 5000}
    string person_token?;
    # The person's phone number.
    string phone?;
    # Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
    @constraint:String {maxLength: 5000}
    string political_exposure?;
    address_specs_1 registered_address?;
    relationship_specs relationship?;
    # The last four digits of the person's Social Security number (U.S. only).
    string ssn_last_4?;
    person_verification_specs_1 verification?;
|};

public type europe record {
    standard standard?;
    "ioss"|"oss_non_union"|"oss_union"|"standard" 'type;
};

# 
public type Portal_flows_subscription_update_confirm_item record {
    # The ID of the [subscription item](https://stripe.com/docs/api/subscriptions/object#subscription_object-items-data-id) to be updated.
    string? id?;
    # The price the customer should subscribe to through this flow. The price must also be included in the configuration's [`features.subscription_update.products`](https://stripe.com/docs/api/customer_portal/configuration#portal_configuration_object-features-subscription_update-products).
    string? price?;
    # [Quantity](https://stripe.com/docs/subscriptions/quantities) for this item that the customer should subscribe to through this flow.
    int quantity?;
};

public type authorization_reverse_body record {|
    # Specifies which fields in the response should be expanded.
    authorization_reverse_bodyExpandItemsString[] expand?;
    # The amount to reverse from the authorization. If not provided, the full amount of the authorization will be reversed. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int reverse_amount?;
|};

# 
public type TreasuryReceivedDebitsResourceReceivedDebitList record {
    # Details about each object.
    Treasury\.received_debit[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Payment_method_options_affirm record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Preferred language of the Affirm authorization page that the customer is redirected to.
    @constraint:String {maxLength: 30}
    string preferred_locale?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type treasury_settings_specs record {
    settings_terms_of_service_specs tos_acceptance?;
};

# Represents the Queries record for the operation: GetAccountsAccountPeople
public type GetAccountsAccountPeopleQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountPeopleQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Filters on the list of people returned based on the person's relationship to the account's company.
    all_people_relationship_specs relationship?;
};

# 
public type Checkout_konbini_payment_method_options record {
    # The number of calendar days (between 1 and 60) after which Konbini payment instructions will expire. For example, if a PaymentIntent is confirmed with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions will expire on Wednesday 23:59:59 JST.
    int? expires_after_days?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Payment_method_card_wallet_apple_pay record {
};

public type QuoteDefaulttaxratesItemsnull string|Tax_rate;

# Result from a phone check
public type Gelato_phone_report record {
    # Details on the verification error. Present when status is `unverified`.
    Gelato_phone_report_error? 'error?;
    # Phone to be verified.
    string? phone?;
    # Status of this `phone` check.
    "unverified"|"verified" status;
};

public type issuing_personalization_designs_body record {|
    # The file for the card logo, for use with physical bundles that support card logos. Must have a `purpose` value of `issuing_logo`.
    string card_logo?;
    carrier_text_param carrier_text?;
    # Specifies which fields in the response should be expanded.
    issuing_personalization_designs_bodyExpandItemsString[] expand?;
    # A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.
    @constraint:String {maxLength: 200}
    string lookup_key?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Friendly display name.
    @constraint:String {maxLength: 200}
    string name?;
    # The physical bundle object belonging to this personalization design.
    @constraint:String {maxLength: 5000}
    string physical_bundle;
    preferences_param preferences?;
    # If set to true, will atomically remove the lookup key from the existing personalization design, and assign it to this personalization design.
    boolean transfer_lookup_key?;
|};

# Mutually exclusive with billing_cycle_anchor and only valid with monthly and yearly price intervals. When provided, the billing_cycle_anchor is set to the next occurence of the day_of_month at the hour, minute, and second UTC.
public type billing_cycle_anchor_config_param record {
    int day_of_month;
    int hour?;
    int minute?;
    int month?;
    int second?;
};

# 
public type Shipping_rate_delivery_estimate_bound record {
    # A unit of time.
    "business_day"|"day"|"hour"|"month"|"week" unit;
    # Must be greater than 0.
    int value;
};

public type file_links_link_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Account_requirementsPendingverificationItemsString string;

public type id_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    id_cancel_bodyExpandItemsString[] expand?;
|};

# 
public type Invoice_setting_subscription_schedule_phase_setting record {
    # The account tax IDs associated with this phase of the subscription schedule. Will be set on invoices generated by this phase of the subscription schedule.
    (string|Tax_id|Deleted_tax_id)[]? account_tax_ids?;
    # Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.
    int? days_until_due?;
    # The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.
    Connect_account_reference? issuer?;
};

# SWIFT Records contain U.S. bank account details per the SWIFT format.
public type Funding_instructions_bank_transfer_swift_record record {
    # The account number
    @constraint:String {maxLength: 5000}
    string account_number;
    # The bank name
    @constraint:String {maxLength: 5000}
    string bank_name;
    # The SWIFT code
    @constraint:String {maxLength: 5000}
    string swift_code;
};

public type id_verify_bodyExpandItemsString string;

public type Test_helpers\.test_clock record {
    int created;
    int deletes_after;
    int frozen_time;
    string id;
    boolean livemode;
    string? name?;
    "test_helpers.test_clock" 'object;
    "advancing"|"internal_failure"|"ready" status;
};

public type all_people_relationship_specs record {
    boolean director?;
    boolean executive?;
    boolean legal_guardian?;
    boolean owner?;
    boolean representative?;
};

public type mandate_online_acceptance_params record {
    int date?;
    string ip?;
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

public type authorization_controls_param_v2AllowedcategoriesItemsString "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards";

public type shipping_ship_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetEventsIdQueriesExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_card record {
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? brand?;
    # Check results by Card networks on Card address and CVC at the time of authorization
    Setup_attempt_payment_method_details_card_checks? checks?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Two-digit number representing the card's expiration month.
    int? exp_month?;
    # Four-digit number representing the card's expiration year.
    int? exp_year?;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    # The last four digits of the card.
    string? last4?;
    # Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? network?;
    # Populated if this authorization used 3D Secure authentication.
    Three_d_secure_details? three_d_secure?;
    # If this Card is part of a card wallet, this contains the details of the card wallet.
    Setup_attempt_payment_method_details_card_wallet? wallet?;
};

public type secrets_delete_body record {|
    # Specifies which fields in the response should be expanded.
    secrets_delete_bodyExpandItemsString[] expand?;
    # A name for the secret that's unique within the scope.
    @constraint:String {maxLength: 5000}
    string name;
    scope_param_1 scope;
|};

# An object containing device type specific settings for Stripe S700 readers
public type stripe_s700 record {
    string|"" splashscreen?;
};

public type radar_value_lists_body record {|
    # The name of the value list for use in rules.
    @constraint:String {maxLength: 100}
    string alias;
    # Specifies which fields in the response should be expanded.
    radar_value_lists_bodyExpandItemsString[] expand?;
    # Type of the items in the value list. One of `card_fingerprint`, `us_bank_account_fingerprint`, `sepa_debit_fingerprint`, `card_bin`, `email`, `ip_address`, `country`, `string`, `case_sensitive_string`, or `customer_id`. Use `string` if the item type is unknown or mixed.
    "card_bin"|"card_fingerprint"|"case_sensitive_string"|"country"|"customer_id"|"email"|"ip_address"|"sepa_debit_fingerprint"|"string"|"us_bank_account_fingerprint" item_type?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The human-readable name of the value list.
    @constraint:String {maxLength: 100}
    string name;
|};

# 
public type Outbound_payments_payment_method_details_us_bank_account record {
    # Account holder type: individual or company.
    "company"|"individual"? account_holder_type?;
    # Account type: checkings or savings. Defaults to checking if omitted.
    "checking"|"savings"? account_type?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    string|Mandate mandate?;
    # The network rails used. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.
    "ach"|"us_domestic_wire" network;
    # Routing number of the bank account.
    string? routing_number?;
};

public type filtersAccountsubcategoriesItemsString "checking"|"savings";

# 
public type BillingMeterResourceBillingMeterEventSummaryList record {
    Billing\.meter_event_summary[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/billing/meters/[^/]+/event_summaries`}
    string url;
};

public type cardholders_cardholder_bodyExpandItemsString string;

# 
public type Bank_connections_resource_accountholder record {
    # The ID of the Stripe account this account belongs to. Should only be present if `account_holder.type` is `account`.
    string|Account account?;
    # ID of the Stripe customer this account belongs to. Present if and only if `account_holder.type` is `customer`.
    string|Customer customer?;
    # Type of account holder that this account belongs to.
    "account"|"customer" 'type;
};

public type lines_data_param_1 record {
    "delete"|"unassign" behavior;
    @constraint:String {maxLength: 5000}
    string id;
};

public type lines_data_param_2 record {
    int amount?;
    @constraint:String {maxLength: 5000}
    string description?;
    boolean discountable?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string id;
    record {|string...;|}|"" metadata?;
    period_1 period?;
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data_with_product_data price_data?;
    int quantity?;
    record {int amount; record {string country?; string description?; string display_name; boolean inclusive; string jurisdiction?; decimal percentage; string state?; "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;} tax_rate_data; int taxable_amount;}[]|"" tax_amounts?;
    TaxratesItemsString[]|"" tax_rates?;
};

# 
public type Checkout_giropay_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type payment_intents_body record {|
    # Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    int application_fee_amount?;
    automatic_payment_methods_param automatic_payment_methods?;
    # Controls when the funds will be captured from the customer's account.
    "automatic"|"automatic_async"|"manual" capture_method?;
    # Set to `true` to attempt to [confirm this PaymentIntent](https://stripe.com/docs/api/payment_intents/confirm) immediately. This parameter defaults to `false`. When creating and confirming a PaymentIntent at the same time, you can also provide the parameters available in the [Confirm API](https://stripe.com/docs/api/payment_intents/confirm).
    boolean confirm?;
    # Describes whether we can confirm this PaymentIntent automatically, or if it requires customer action to confirm the payment.
    "automatic"|"manual" confirmation_method?;
    # ID of the ConfirmationToken used to confirm this PaymentIntent.
    # 
    # If the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.
    @constraint:String {maxLength: 5000}
    string confirmation_token?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the Customer this PaymentIntent belongs to, if one exists.
    # 
    # Payment methods attached to other Customers cannot be used with this PaymentIntent.
    # 
    # If present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 1000}
    string description?;
    # Set to `true` to fail the payment attempt if the PaymentIntent transitions into `requires_action`. Use this parameter for simpler integrations that don't handle customer actions, such as [saving cards without authentication](https://stripe.com/docs/payments/save-card-without-authentication). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
    boolean error_on_requires_action?;
    # Specifies which fields in the response should be expanded.
    payment_intents_bodyExpandItemsString[] expand?;
    # ID of the mandate that's used for this payment. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
    @constraint:String {maxLength: 5000}
    string mandate?;
    # This hash contains details about the Mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
    record {record {int accepted_at?; record {} offline?; record {string ip_address; string user_agent;} online?; "offline"|"online" 'type;} customer_acceptance;}|"" mandate_data?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Set to `true` to indicate that the customer isn't in your checkout flow during this payment attempt and can't authenticate. Use this parameter in scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
    boolean|"one_off"|"recurring" off_session?;
    # The Stripe account ID that these funds are intended for. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    string on_behalf_of?;
    # ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.
    # 
    # If you omit this parameter with `confirm=true`, `customer.default_source` attaches as this PaymentIntent's payment instrument to improve migration for users of the Charges API. We recommend that you explicitly provide the `payment_method` moving forward.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # The ID of the payment method configuration to use with this PaymentIntent.
    @constraint:String {maxLength: 100}
    string payment_method_configuration?;
    payment_method_data_params payment_method_data?;
    payment_method_options_param_14 payment_method_options?;
    # The list of payment method types (for example, a card) that this PaymentIntent can use. If you don't provide this, it defaults to ["card"]. Use `automatic_payment_methods` to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).
    payment_intents_bodyPaymentmethodtypesItemsString[] payment_method_types?;
    radar_options_with_hidden_options_2 radar_options?;
    # Email address to send the receipt to. If you specify `receipt_email` for a payment in live mode, you send a receipt regardless of your [email settings](https://dashboard.stripe.com/account/emails).
    string receipt_email?;
    # The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
    string return_url?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "off_session"|"on_session" setup_future_usage?;
    optional_fields_shipping_1 shipping?;
    # For card charges, use [statement_descriptor_suffix](https://stripe.com/docs/payments/account/statement-descriptors#dynamic). Otherwise, you can use this value as the complete description of a charge on your customers' statements. It must contain at least one letter and be 1–22 characters long.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. The concatenated descriptor must contain 1-22 characters.
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_creation_params transfer_data?;
    # A string that identifies the resulting payment as part of a group. Learn more about the [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers).
    string transfer_group?;
    # Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.
    boolean use_stripe_sdk?;
|};

# Represents the Queries record for the operation: GetCustomersCustomerCards
public type GetCustomersCustomerCardsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerCardsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

# 
public type Payment_method_options_paypal record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Preferred locale of the PayPal checkout page that the customer is redirected to.
    string? preferred_locale?;
    # A reference of the PayPal transaction visible to customer which is mapped to PayPal's invoice ID. This must be a globally unique ID if you have configured in your PayPal settings to block multiple payments per invoice ID.
    string? reference?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# The dimensions of this product for shipping purposes.
public type package_dimensions_specs record {
    decimal height;
    decimal length;
    decimal weight;
    decimal width;
};

# 
public type Bank_connections_resource_balance_refresh record {
    # The time at which the last refresh attempt was initiated. Measured in seconds since the Unix epoch.
    int last_attempted_at;
    # Time at which the next balance refresh can be initiated. This value will be `null` when `status` is `pending`. Measured in seconds since the Unix epoch.
    int? next_refresh_available_at?;
    # The status of the last refresh attempt.
    "failed"|"pending"|"succeeded" status;
};

@constraint:String {maxLength: 5000}
public type GetIssuingPhysicalBundlesPhysicalBundleQueriesExpandItemsString string;

# 
public type QuotesResourceListLineItems record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Represents the Queries record for the operation: GetPayoutsPayout
public type GetPayoutsPayoutQueries record {
    # Specifies which fields in the response should be expanded.
    GetPayoutsPayoutQueriesExpandItemsString[] expand?;
};

# 
public type Person_relationship record {
    # Whether the person is a director of the account's legal entity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations.
    boolean? director?;
    # Whether the person has significant responsibility to control, manage, or direct the organization.
    boolean? executive?;
    # Whether the person is the legal guardian of the account's representative.
    boolean? legal_guardian?;
    # Whether the person is an owner of the account’s legal entity.
    boolean? owner?;
    # The percent owned by the person of the account's legal entity.
    decimal? percent_ownership?;
    # Whether the person is authorized as the primary representative of the account. This is the person nominated by the business to provide information about themselves, and general information about the account. There can only be one representative at any given time. At the time the account is created, this person should be set to the person responsible for opening the account.
    boolean? representative?;
    # The person's title (e.g., CEO, Support Engineer).
    string? title?;
};

# 
public type Tax_product_registrations_resource_country_options_europe record {
    Tax_product_registrations_resource_country_options_eu_standard standard?;
    # Type of registration in an EU country.
    "ioss"|"oss_non_union"|"oss_union"|"standard" 'type;
};

# 
public type PaymentLinksResourceListLineItems record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetTaxRatesTaxRateQueriesExpandItemsString string;

public type reader_process_setup_intent_bodyExpandItemsString string;

public type reader_process_payment_intent_body record {|
    # Specifies which fields in the response should be expanded.
    reader_process_payment_intent_bodyExpandItemsString[] expand?;
    # PaymentIntent ID
    @constraint:String {maxLength: 5000}
    string payment_intent;
    process_config process_config?;
|};

@constraint:String {maxLength: 5000}
public type Payment_method_interac_presentPreferredlocalesItemsString string;

# Encodes whether a FinancialAccount has access to a particular feature, with a status enum and associated `status_details`. Stripe or the platform may control features via the requested field.
public type feature_access_1 record {
    access card_issuing?;
    access deposit_insurance?;
    financial_addresses financial_addresses?;
    inbound_transfers inbound_transfers?;
    access intra_stripe_flows?;
    outbound_payments outbound_payments?;
    outbound_transfers outbound_transfers?;
};

public type plans_body record {|
    # Whether the plan is currently available for new subscriptions. Defaults to `true`.
    boolean active?;
    # Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.
    "last_during_period"|"last_ever"|"max"|"sum" aggregate_usage?;
    # A positive integer in cents (or local equivalent) (or 0 for a free plan) representing how much to charge on a recurring basis.
    int amount?;
    # Same as `amount`, but accepts a decimal value with at most 12 decimal places. Only one of `amount` and `amount_decimal` can be set.
    string amount_decimal?;
    # Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.
    "per_unit"|"tiered" billing_scheme?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Specifies which fields in the response should be expanded.
    plans_bodyExpandItemsString[] expand?;
    # An identifier randomly generated by Stripe. Used to identify this plan when subscribing a customer. You can optionally override this ID, but the ID must be unique across all plans in your Stripe account. You can, however, use the same plan ID in both live and test modes.
    @constraint:String {maxLength: 5000}
    string id?;
    # Specifies billing frequency. Either `day`, `week`, `month` or `year`.
    "day"|"month"|"week"|"year" interval;
    # The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of three years interval allowed (3 years, 36 months, or 156 weeks).
    int interval_count?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The meter tracking the usage of a metered price
    @constraint:String {maxLength: 5000}
    string meter?;
    # A brief description of the plan, hidden from customers.
    @constraint:String {maxLength: 5000}
    string nickname?;
    record {boolean active?; string id?; record {|string...;|} metadata?; string name; string statement_descriptor?; string tax_code?; string unit_label?;}|string product?;
    # Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    tier[] tiers?;
    # Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows.
    "graduated"|"volume" tiers_mode?;
    transform_usage_param transform_usage?;
    # Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
    int trial_period_days?;
    # Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.
    "licensed"|"metered" usage_type?;
|};

# Invoice Items represent the component lines of an [invoice](https://stripe.com/docs/api/invoices). An invoice item is added to an
# invoice by creating or updating it with an `invoice` field, at which point it will be included as
# [an invoice line item](https://stripe.com/docs/api/invoices/line_item) within
# [invoice.lines](https://stripe.com/docs/api/invoices/object#invoice_object-lines).
# 
# Invoice Items can be created before you are ready to actually send the invoice. This can be particularly useful when combined
# with a [subscription](https://stripe.com/docs/api/subscriptions). Sometimes you want to add a charge or credit to a customer, but actually charge
# or credit the customer’s card only at the end of a regular billing cycle. This is useful for combining several charges
# (to minimize per-transaction fees), or for having Stripe tabulate your usage-based billing totals.
# 
# Related guides: [Integrate with the Invoicing API](https://stripe.com/docs/invoicing/integration), [Subscription Invoices](https://stripe.com/docs/billing/invoices/subscription#adding-upcoming-invoice-items).
public type Invoiceitem record {
    # Amount (in the `currency` specified) of the invoice item. This should always be equal to `unit_amount * quantity`.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # The ID of the customer who will be billed when this invoice item is billed.
    string|Customer|Deleted_customer customer;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int date;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # If true, discounts will apply to this invoice item. Always false for prorations.
    boolean discountable;
    # The discounts which apply to the invoice item. Item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.
    (string|Discount)[]? discounts?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The ID of the invoice this invoice item belongs to.
    string|Invoice? invoice?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "invoiceitem" 'object;
    Invoice_line_item_period period;
    # The price of the invoice item.
    Price? price?;
    # Whether the invoice item was created automatically as a proration adjustment when the customer switched plans.
    boolean proration;
    # Quantity of units for the invoice item. If the invoice item is a proration, the quantity of the subscription that the proration was computed for.
    int quantity;
    # The subscription that this invoice item has been created for, if any.
    string|Subscription? subscription?;
    # The subscription item that this invoice item has been created for, if any.
    @constraint:String {maxLength: 5000}
    string subscription_item?;
    # The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.
    Tax_rate[]? tax_rates?;
    # ID of the test clock this invoice item belongs to.
    string|Test_helpers\.test_clock? test_clock?;
    # Unit amount (in the `currency` specified) of the invoice item.
    int? unit_amount?;
    # Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.
    string? unit_amount_decimal?;
};

public type cards_id_bodyExpandItemsString string;

# 
public type Quotes_resource_total_details record {
    # This is the sum of all the discounts.
    int amount_discount;
    # This is the sum of all the shipping amounts.
    int? amount_shipping?;
    # This is the sum of all the tax amounts.
    int amount_tax;
    Quotes_resource_total_details_resource_breakdown breakdown?;
};

# Represents the Queries record for the operation: GetCustomersCustomerCardsId
public type GetCustomersCustomerCardsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerCardsIdQueriesExpandItemsString[] expand?;
};

# Balance transactions represent funds moving through your Stripe account.
# Stripe creates them for every type of transaction that enters or leaves your Stripe account balance.
# 
# Related guide: [Balance transaction types](https://stripe.com/docs/reports/balance-transaction-types)
public type Balance_transaction record {
    # Gross amount of this transaction (in cents (or local equivalent)). A positive value represents funds charged to another party, and a negative value represents funds sent to another party.
    int amount;
    # The date that the transaction's net funds become available in the Stripe balance.
    int available_on;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # If applicable, this transaction uses an exchange rate. If money converts from currency A to currency B, then the `amount` in currency A, multipled by the `exchange_rate`, equals the `amount` in currency B. For example, if you charge a customer 10.00 EUR, the PaymentIntent's `amount` is `1000` and `currency` is `eur`. If this converts to 12.34 USD in your Stripe account, the BalanceTransaction's `amount` is `1234`, its `currency` is `usd`, and the `exchange_rate` is `1.234`.
    decimal? exchange_rate?;
    # Fees (in cents (or local equivalent)) paid for this transaction. Represented as a positive integer when assessed.
    int fee;
    # Detailed breakdown of fees (in cents (or local equivalent)) paid for this transaction.
    Fee[] fee_details;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Net impact to a Stripe balance (in cents (or local equivalent)). A positive value represents incrementing a Stripe balance, and a negative value decrementing a Stripe balance. You can calculate the net impact of a transaction on a balance by `amount` - `fee`
    int net;
    # String representing the object's type. Objects of the same type share the same value.
    "balance_transaction" 'object;
    # Learn more about how [reporting categories](https://stripe.com/docs/reports/reporting-categories) can help you understand balance transactions from an accounting perspective.
    @constraint:String {maxLength: 5000}
    string reporting_category;
    # This transaction relates to the Stripe object.
    string|Application_fee|Charge|Connect_collection_transfer|Customer_cash_balance_transaction|Dispute|Fee_refund|Issuing\.authorization|Issuing\.dispute|Issuing\.transaction|Payout|Refund|Reserve_transaction|Tax_deducted_at_source|Topup|Transfer|Transfer_reversal? 'source?;
    # The transaction's net funds status in the Stripe balance, which are either `available` or `pending`.
    @constraint:String {maxLength: 5000}
    string status;
    # Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`, `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. Learn more about [balance transaction types and what they represent](https://stripe.com/docs/reports/balance-transaction-types). To classify transactions for accounting purposes, consider `reporting_category` instead.
    "adjustment"|"advance"|"advance_funding"|"anticipation_repayment"|"application_fee"|"application_fee_refund"|"charge"|"climate_order_purchase"|"climate_order_refund"|"connect_collection_transfer"|"contribution"|"issuing_authorization_hold"|"issuing_authorization_release"|"issuing_dispute"|"issuing_transaction"|"obligation_outbound"|"obligation_reversal_inbound"|"payment"|"payment_failure_refund"|"payment_network_reserve_hold"|"payment_network_reserve_release"|"payment_refund"|"payment_reversal"|"payment_unreconciled"|"payout"|"payout_cancel"|"payout_failure"|"refund"|"refund_failure"|"reserve_transaction"|"reserved_funds"|"stripe_fee"|"stripe_fx_fee"|"tax_fee"|"topup"|"topup_reversal"|"transfer"|"transfer_cancel"|"transfer_failure"|"transfer_refund" 'type;
};

public type refunds_refund_body record {|
    # Specifies which fields in the response should be expanded.
    refunds_refund_bodyExpandItemsString[] expand?;
    record {|string...;|}|"" metadata?;
|};

@constraint:String {maxLength: 5000}
public type GetAppsSecretsQueriesExpandItemsString string;

public type fuel_specs_1 record {
    @constraint:String {maxLength: 5000}
    string industry_product_code?;
    string quantity_decimal?;
    "diesel"|"other"|"unleaded_plus"|"unleaded_regular"|"unleaded_super" 'type?;
    "charging_minute"|"imperial_gallon"|"kilogram"|"kilowatt_hour"|"liter"|"other"|"pound"|"us_gallon" unit?;
    string unit_cost_decimal?;
};

public type flow_data_subscription_cancel_param record {
    retention_param retention?;
    @constraint:String {maxLength: 5000}
    string subscription;
};

# 
public type Setup_attempt_payment_method_details record {
    Setup_attempt_payment_method_details_acss_debit acss_debit?;
    Setup_attempt_payment_method_details_amazon_pay amazon_pay?;
    Setup_attempt_payment_method_details_au_becs_debit au_becs_debit?;
    Setup_attempt_payment_method_details_bacs_debit bacs_debit?;
    Setup_attempt_payment_method_details_bancontact bancontact?;
    Setup_attempt_payment_method_details_boleto boleto?;
    Setup_attempt_payment_method_details_card card?;
    Setup_attempt_payment_method_details_card_present card_present?;
    Setup_attempt_payment_method_details_cashapp cashapp?;
    Setup_attempt_payment_method_details_ideal ideal?;
    Setup_attempt_payment_method_details_klarna klarna?;
    Setup_attempt_payment_method_details_link link?;
    Setup_attempt_payment_method_details_paypal paypal?;
    Setup_attempt_payment_method_details_revolut_pay revolut_pay?;
    Setup_attempt_payment_method_details_sepa_debit sepa_debit?;
    Setup_attempt_payment_method_details_sofort sofort?;
    # The type of the payment method used in the SetupIntent (e.g., `card`). An additional hash is included on `payment_method_details` with a name matching this value. It contains confirmation-specific information for the payment method.
    @constraint:String {maxLength: 5000}
    string 'type;
    Setup_attempt_payment_method_details_us_bank_account us_bank_account?;
};

# Represents the Queries record for the operation: GetEntitlementsFeaturesId
public type GetEntitlementsFeaturesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetEntitlementsFeaturesIdQueriesExpandItemsString[] expand?;
};

public type id_verify_body_1 record {|
    # Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.
    int[] amounts?;
    # Specifies which fields in the response should be expanded.
    id_verify_body_1ExpandItemsString[] expand?;
|};

# Represents the Queries record for the operation: GetAccountsAccountPeoplePerson
public type GetAccountsAccountPeoplePersonQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountPeoplePersonQueriesExpandItemsString[] expand?;
};

public type CustomfieldsItemsObject record {
    string name;
    string value;
};

# 
public type Issuing_card_shipping_address_validation record {
    # The address validation capabilities to use.
    "disabled"|"normalization_only"|"validation_and_normalization" mode;
    # The normalized shipping address.
    Address? normalized_address?;
    # The validation result for the shipping address.
    "indeterminate"|"likely_deliverable"|"likely_undeliverable"? result?;
};

# 
public type Deleted_card record {
    # Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.
    string? currency?;
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "card" 'object;
};

# 
public type Issuing_authorization_amount_details record {
    # The fee charged by the ATM for the cash withdrawal.
    int? atm_fee?;
    # The amount of cash requested by the cardholder.
    int? cashback_amount?;
};

public type id_post_bodyExpandItemsString string;

# `Source` objects allow you to accept a variety of payment methods. They
# represent a customer's payment instrument, and can be used with the Stripe API
# just like a `Card` object: once chargeable, they can be charged, or can be
# attached to customers.
# 
# Stripe doesn't recommend using the deprecated [Sources API](https://stripe.com/docs/api/sources).
# We recommend that you adopt the [PaymentMethods API](https://stripe.com/docs/api/payment_methods).
# This newer API provides access to our latest features and payment method types.
# 
# Related guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).
public type Source record {
    Source_type_ach_credit_transfer ach_credit_transfer?;
    Source_type_ach_debit ach_debit?;
    Source_type_acss_debit acss_debit?;
    Source_type_alipay alipay?;
    # A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.
    int? amount?;
    Source_type_au_becs_debit au_becs_debit?;
    Source_type_bancontact bancontact?;
    Source_type_card card?;
    Source_type_card_present card_present?;
    # The client secret of the source. Used for client-side retrieval using a publishable key.
    @constraint:String {maxLength: 5000}
    string client_secret;
    Source_code_verification_flow code_verification?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.
    string? currency?;
    # The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.
    @constraint:String {maxLength: 5000}
    string customer?;
    Source_type_eps eps?;
    # The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.
    @constraint:String {maxLength: 5000}
    string flow;
    Source_type_giropay giropay?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    Source_type_ideal ideal?;
    Source_type_klarna klarna?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    Source_type_multibanco multibanco?;
    # String representing the object's type. Objects of the same type share the same value.
    "source" 'object;
    # Information about the owner of the payment instrument that may be used or required by particular source types.
    Source_owner? owner?;
    Source_type_p24 p24?;
    Source_receiver_flow receiver?;
    Source_redirect_flow redirect?;
    Source_type_sepa_debit sepa_debit?;
    Source_type_sofort sofort?;
    Source_order source_order?;
    # Extra information about a source. This will appear on your customer's statement every time you charge the source.
    string? statement_descriptor?;
    # The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.
    @constraint:String {maxLength: 5000}
    string status;
    Source_type_three_d_secure three_d_secure?;
    # The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.
    "ach_credit_transfer"|"ach_debit"|"acss_debit"|"alipay"|"au_becs_debit"|"bancontact"|"card"|"card_present"|"eps"|"giropay"|"ideal"|"klarna"|"multibanco"|"p24"|"sepa_debit"|"sofort"|"three_d_secure"|"wechat" 'type;
    # Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.
    string? usage?;
    Source_type_wechat wechat?;
};

public type account_people_bodyExpandItemsString string;

public type inbound_transfer_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    inbound_transfer_cancel_bodyExpandItemsString[] expand?;
|};

# 
public type Verification_session_redaction record {
    # Indicates whether this object and its related objects have been redacted or not.
    "processing"|"redacted" status;
};

public type id_fail_body record {|
    # Specifies which fields in the response should be expanded.
    id_fail_bodyExpandItemsString[] expand?;
    failure_details_params failure_details?;
|};

# A `Payout` object is created when you receive funds from Stripe, or when you
# initiate a payout to either a bank account or debit card of a [connected
# Stripe account](/docs/connect/bank-debit-card-payouts). You can retrieve individual payouts,
# and list all payouts. Payouts are made on [varying
# schedules](/docs/connect/manage-payout-schedule), depending on your country and
# industry.
# 
# Related guide: [Receiving payouts](https://stripe.com/docs/payouts)
public type Payout record {
    # The amount (in cents (or local equivalent)) that transfers to your bank account or debit card.
    int amount;
    # The application fee (if any) for the payout. [See the Connect documentation](https://stripe.com/docs/connect/instant-payouts#monetization-and-fees) for details.
    string|Application_fee? application_fee?;
    # The amount of the application fee (if any) requested for the payout. [See the Connect documentation](https://stripe.com/docs/connect/instant-payouts#monetization-and-fees) for details.
    int? application_fee_amount?;
    # Date that you can expect the payout to arrive in the bank. This factors in delays to account for weekends or bank holidays.
    int arrival_date;
    # Returns `true` if the payout is created by an [automated payout schedule](https://stripe.com/docs/payouts#payout-schedule) and `false` if it's [requested manually](https://stripe.com/docs/payouts#manual-payouts).
    boolean automatic;
    # ID of the balance transaction that describes the impact of this payout on your account balance.
    string|Balance_transaction? balance_transaction?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # ID of the bank account or card the payout is sent to.
    string|Bank_account|Card|Deleted_bank_account|Deleted_card? destination?;
    # If the payout fails or cancels, this is the ID of the balance transaction that reverses the initial balance transaction and returns the funds from the failed payout back in your balance.
    string|Balance_transaction? failure_balance_transaction?;
    # Error code that provides a reason for a payout failure, if available. View our [list of failure codes](https://stripe.com/docs/api#payout_failures).
    string? failure_code?;
    # Message that provides the reason for a payout failure, if available.
    string? failure_message?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # The method used to send this payout, which can be `standard` or `instant`. `instant` is supported for payouts to debit cards and bank accounts in certain countries. Learn more about [bank support for Instant Payouts](https://stripe.com/docs/payouts/instant-payouts-banks).
    @constraint:String {maxLength: 5000}
    string method;
    # String representing the object's type. Objects of the same type share the same value.
    "payout" 'object;
    # If the payout reverses another, this is the ID of the original payout.
    string|Payout? original_payout?;
    # If `completed`, you can use the [Balance Transactions API](https://stripe.com/docs/api/balance_transactions/list#balance_transaction_list-payout) to list all balance transactions that are paid out in this payout.
    "completed"|"in_progress"|"not_applicable" reconciliation_status;
    # If the payout reverses, this is the ID of the payout that reverses this payout.
    string|Payout? reversed_by?;
    # The source balance this payout came from, which can be one of the following: `card`, `fpx`, or `bank_account`.
    @constraint:String {maxLength: 5000}
    string source_type;
    # Extra information about a payout that displays on the user's bank statement.
    string? statement_descriptor?;
    # Current status of the payout: `paid`, `pending`, `in_transit`, `canceled` or `failed`. A payout is `pending` until it's submitted to the bank, when it becomes `in_transit`. The status changes to `paid` if the transaction succeeds, or to `failed` or `canceled` (within 5 business days). Some payouts that fail might initially show as `paid`, then change to `failed`.
    @constraint:String {maxLength: 5000}
    string status;
    # Can be `bank_account` or `card`.
    "bank_account"|"card" 'type;
};

# 
public type Payment_method_zip record {
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerCardsIdQueriesExpandItemsString string;

# 
public type PayoutList record {
    Payout[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/payouts`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountCapabilitiesQueriesExpandItemsString string;

public type intent_capture_bodyExpandItemsString string;

# All invoices will be billed using the specified settings.
public type invoice_settings_param_1 record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    param_3 issuer?;
};

# Represents the Queries record for the operation: GetCustomersCustomerSourcesId
public type GetCustomersCustomerSourcesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerSourcesIdQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_card_google_pay record {
    # Google Pay Eligibility
    boolean eligible;
    # Reason the card is ineligible for Google Pay
    "missing_agreement"|"missing_cardholder_contact"|"unsupported_region"? ineligible_reason?;
};

public type invoice_pay_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_pay_bodyExpandItemsString[] expand?;
    # In cases where the source used to pay the invoice has insufficient funds, passing `forgive=true` controls whether a charge should be attempted for the full amount available on the source, up to the amount to fully pay the invoice. This effectively forgives the difference between the amount available on the source and the amount due. 
    # 
    # Passing `forgive=false` will fail the charge if the source hasn't been pre-funded with the right amount. An example for this case is with ACH Credit Transfers and wires: if the amount wired is less than the amount due by a small amount, you might want to forgive the difference. Defaults to `false`.
    boolean forgive?;
    # ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the payment_method param or the invoice's default_payment_method or default_source, if set.
    string|"" mandate?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to `true` (off-session).
    boolean off_session?;
    # Boolean representing whether an invoice is paid outside of Stripe. This will result in no charge being made. Defaults to `false`.
    boolean paid_out_of_band?;
    # A PaymentMethod to be charged. The PaymentMethod must be the ID of a PaymentMethod belonging to the customer associated with the invoice being paid.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # A payment source to be charged. The source must be the ID of a source belonging to the customer associated with the invoice being paid.
    @constraint:String {maxLength: 5000}
    string 'source?;
|};

# 
public type Payment_method_afterpay_clearpay record {
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_gb_bank_transfer record {
    # The last 4 digits of the account number of the sender of the funding.
    string? account_number_last4?;
    # The full name of the sender, as supplied by the sending bank.
    string? sender_name?;
    # The sort code of the bank of the sender of the funding
    string? sort_code?;
};

# Settings for the cost of shipping for this invoice.
public type shipping_cost record {
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
    method_params shipping_rate_data?;
};

# 
public type Connect_embedded_payments_config_claim record {
    # Whether the embedded component is enabled.
    boolean enabled;
    Connect_embedded_payments_features features;
};

# 
public type Payment_method_card_wallet_amex_express_checkout record {
};

# 
public type Tax_product_resource_postal_address record {
    # City, district, suburb, town, or village.
    string? city?;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country;
    # Address line 1 (e.g., street, PO Box, or company name).
    string? line1?;
    # Address line 2 (e.g., apartment, suite, unit, or building).
    string? line2?;
    # ZIP or postal code.
    string? postal_code?;
    # State/province as an [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) subdivision code, without country prefix. Example: "NY" or "TX".
    string? state?;
};

# Business information about the account.
public type business_profile_specs record {
    annual_revenue_specs annual_revenue?;
    int estimated_worker_count?;
    @constraint:String {maxLength: 4}
    string mcc?;
    monthly_estimated_revenue_specs monthly_estimated_revenue?;
    @constraint:String {maxLength: 5000}
    string name?;
    @constraint:String {maxLength: 40000}
    string product_description?;
    address_specs support_address?;
    string support_email?;
    @constraint:String {maxLength: 5000}
    string support_phone?;
    string|"" support_url?;
    string url?;
};

# Represents the Queries record for the operation: GetTreasuryFinancialAccounts
public type GetTreasuryFinancialAccountsQueries record {
    # An object ID cursor for use in pagination.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTreasuryFinancialAccountsQueriesExpandItemsString[] expand?;
    # Only return FinancialAccounts that were created during the given date interval.
    created_43 created?;
    # A limit ranging from 1 to 100 (defaults to 10).
    int 'limit?;
    # An object ID cursor for use in pagination.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Setup_intent_payment_method_options_us_bank_account record {
    Linked_account_options_us_bank_account financial_connections?;
    Payment_method_options_us_bank_account_mandate_options mandate_options?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

public type Tax\.settings record {
    Tax_product_resource_tax_settings_defaults defaults;
    Tax_product_resource_tax_settings_head_office? head_office?;
    boolean livemode;
    "tax.settings" 'object;
    "active"|"pending" status;
    Tax_product_resource_tax_settings_status_details status_details;
};

# 
public type Payment_flows_amount_details record {
    Payment_flows_amount_details_resource_tip tip?;
};

# A phase describes the plans, coupon, and trialing status of a subscription for a predefined time period.
public type Subscription_schedule_phase_configuration record {
    # A list of prices and quantities that will generate invoice items appended to the next invoice for this phase.
    Subscription_schedule_add_invoice_item[] add_invoice_items;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account during this phase of the schedule.
    decimal? application_fee_percent?;
    Schedules_phase_automatic_tax automatic_tax?;
    # Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    "automatic"|"phase_start"? billing_cycle_anchor?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period
    Subscription_billing_thresholds? billing_thresholds?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.
    "charge_automatically"|"send_invoice"? collection_method?;
    # ID of the coupon to use during this phase of the subscription schedule.
    string|Coupon|Deleted_coupon? coupon?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the default payment method for the subscription schedule. It must belong to the customer associated with the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings.
    string|Payment_method? default_payment_method?;
    # The default tax rates to apply to the subscription during this phase of the subscription schedule.
    Tax_rate[]? default_tax_rates?;
    # Subscription description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    string? description?;
    # The stackable discounts that will be applied to the subscription on this phase. Subscription item discounts are applied before subscription discounts.
    Discounts_resource_stackable_discount[] discounts;
    # The end of this phase of the subscription schedule.
    int end_date;
    # The invoice settings applicable during this phase.
    Invoice_setting_subscription_schedule_phase_setting? invoice_settings?;
    # Subscription items to configure the subscription to during this phase of the subscription schedule.
    Subscription_schedule_configuration_item[] items;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to a phase. Metadata on a schedule's phase will update the underlying subscription's `metadata` when the phase is entered. Updating the underlying subscription's `metadata` directly will not affect the current phase's `metadata`.
    record {|string...;|}? metadata?;
    # The account (if any) the charge was made on behalf of for charges associated with the schedule's subscription. See the Connect documentation for details.
    string|Account? on_behalf_of?;
    # If the subscription schedule will prorate when transitioning to this phase. Possible values are `create_prorations` and `none`.
    "always_invoice"|"create_prorations"|"none" proration_behavior;
    # The start of this phase of the subscription schedule.
    int start_date;
    # The account (if any) the associated subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.
    Subscription_transfer_data? transfer_data?;
    # When the trial ends within the phase.
    int? trial_end?;
};

public type invoice_send_bodyExpandItemsString string;

# 
public type Deleted_plan record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "plan" 'object;
};

public type accounts_body record {|
    # An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.
    @constraint:String {maxLength: 5000}
    string account_token?;
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; "checking"|"futsu"|"savings"|"toza" account_type?; string country; string currency?; record {record {bank_account_ownership_verificationFilesItemsString[] files?;} bank_account_ownership_verification?;} documents?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    business_profile_specs business_profile?;
    # The business type. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    "company"|"government_entity"|"individual"|"non_profit" business_type?;
    capabilities_param capabilities?;
    company_specs company?;
    controller_specs controller?;
    # The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you're creating an account is legally represented in Canada, you would use `CA` as the country for the account being created. Available countries include [Stripe's global markets](https://stripe.com/global) as well as countries where [cross-border payouts](https://stripe.com/docs/connect/cross-border-payouts) are supported.
    @constraint:String {maxLength: 5000}
    string country?;
    # Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://docs.stripe.com/payouts).
    string default_currency?;
    documents_specs documents?;
    # The email address of the account holder. This is only to make the account easier to identify to you. If [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, Stripe doesn't email the account without your consent.
    string email?;
    # Specifies which fields in the response should be expanded.
    accounts_bodyExpandItemsString[] expand?;
    # A card or bank account to attach to the account for receiving [payouts](/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](/js), or a dictionary, as documented in the `external_account` parameter for [bank account](/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](/api#account_create_bank_account) or [card creation](/api#account_create_card) APIs. After you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    @constraint:String {maxLength: 5000}
    string external_account?;
    individual_specs individual?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    settings_specs settings?;
    tos_acceptance_specs tos_acceptance?;
    # The type of Stripe account to create. May be one of `custom`, `express` or `standard`.
    "custom"|"express"|"standard" 'type?;
|};

# A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.
public type payment_intent_data_update_params record {
    string|"" description?;
    record {|string...;|}|"" metadata?;
    string|"" statement_descriptor?;
    string|"" statement_descriptor_suffix?;
    string|"" transfer_group?;
};

public type reader_set_reader_display_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetFinancialConnectionsAccountsAccountOwners
public type GetFinancialConnectionsAccountsAccountOwnersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetFinancialConnectionsAccountsAccountOwnersQueriesExpandItemsString[] expand?;
    # The ID of the ownership object to fetch owners from.
    @constraint:String {maxLength: 5000}
    string ownership;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type financial_accounts_financial_account_bodyExpandItemsString string;

public type Financial_connections\.session record {
    Bank_connections_resource_accountholder? account_holder?;
    BankConnectionsResourceLinkedAccountList_1 accounts;
    string client_secret;
    Bank_connections_resource_link_account_session_filters filters?;
    string id;
    boolean livemode;
    "financial_connections.session" 'object;
    ("balances"|"ownership"|"payment_method"|"transactions")[] permissions;
    ("balances"|"ownership"|"transactions")[]? prefetch?;
    string return_url?;
};

# 
public type Issuing_cardholder_spending_limit record {
    # Maximum amount allowed to spend per interval. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) this limit applies to. Omitting this field will apply the limit to all categories.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? categories?;
    # Interval (or event) to which the amount applies.
    "all_time"|"daily"|"monthly"|"per_authorization"|"weekly"|"yearly" interval;
};

# 
public type Legal_entity_person_verification_document record {
    # The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.
    string|File? back?;
    # A user-displayable string describing the verification state of this document. For example, if a document is uploaded and the picture is too fuzzy, this may say "Identity document is too unclear to read".
    string? details?;
    # One of `document_corrupt`, `document_country_not_supported`, `document_expired`, `document_failed_copy`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_failed_greyscale`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`, `document_not_readable`, `document_not_uploaded`, `document_photo_mismatch`, `document_too_large`, or `document_type_not_supported`. A machine-readable code specifying the verification state for this document.
    string? details_code?;
    # The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.
    string|File? front?;
};

# 
public type Payment_method_details_konbini_store record {
    # The name of the convenience store chain where the payment was completed.
    "familymart"|"lawson"|"ministop"|"seicomart"? chain?;
};

public type documents_param_1FilesItemsnull string|"";

# Generate a post-purchase Invoice for one-time payments.
public type invoice_creation_params record {
    boolean enabled;
    invoice_data_params invoice_data?;
};

@constraint:String {maxLength: 5000}
public type GetApplePayDomainsQueriesExpandItemsString string;

public type reader_process_setup_intent_body record {|
    # Customer Consent Collected
    boolean customer_consent_collected;
    # Specifies which fields in the response should be expanded.
    reader_process_setup_intent_bodyExpandItemsString[] expand?;
    process_setup_config process_config?;
    # SetupIntent ID
    @constraint:String {maxLength: 5000}
    string setup_intent;
|};

public type subscription_billing_cycle_anchor "now"|"unchanged"|int;

public type flight_segment_specs record {
    @constraint:String {maxLength: 3}
    string arrival_airport_code?;
    @constraint:String {maxLength: 5000}
    string carrier?;
    @constraint:String {maxLength: 3}
    string departure_airport_code?;
    @constraint:String {maxLength: 5000}
    string flight_number?;
    @constraint:String {maxLength: 5000}
    string service_class?;
    boolean stopover_allowed?;
};

@constraint:String {maxLength: 5000}
public type Account_future_requirementsCurrentlydueItemsString string;

# Issue a credit note to adjust an invoice's amount after the invoice is finalized.
# 
# Related guide: [Credit notes](https://stripe.com/docs/billing/invoices/credit-notes)
public type Credit_note record {
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note, including tax.
    int amount;
    # This is the sum of all the shipping amounts.
    int amount_shipping;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the customer.
    string|Customer|Deleted_customer customer;
    # Customer balance transaction related to this credit note.
    string|Customer_balance_transaction? customer_balance_transaction?;
    # The integer amount in cents (or local equivalent) representing the total amount of discount that was credited.
    int discount_amount;
    # The aggregate amounts calculated per discount for all line items.
    Discounts_resource_discount_amount[] discount_amounts;
    # The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.
    int? effective_at?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # ID of the invoice.
    string|Invoice invoice;
    CreditNoteLinesList_1 lines;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Customer-facing text that appears on the credit note PDF.
    string? memo?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice.
    @constraint:String {maxLength: 5000}
    string number;
    # String representing the object's type. Objects of the same type share the same value.
    "credit_note" 'object;
    # Amount that was credited outside of Stripe.
    int? out_of_band_amount?;
    # The link to download the PDF of the credit note.
    @constraint:String {maxLength: 5000}
    string pdf;
    # Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    "duplicate"|"fraudulent"|"order_change"|"product_unsatisfactory"? reason?;
    # Refund related to this credit note.
    string|Refund? refund?;
    # The details of the cost of shipping, including the ShippingRate applied to the invoice.
    Invoices_resource_shipping_cost? shipping_cost?;
    # Status of this credit note, one of `issued` or `void`. Learn more about [voiding credit notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).
    "issued"|"void" status;
    # The integer amount in cents (or local equivalent) representing the amount of the credit note, excluding exclusive tax and invoice level discounts.
    int subtotal;
    # The integer amount in cents (or local equivalent) representing the amount of the credit note, excluding all tax and invoice level discounts.
    int? subtotal_excluding_tax?;
    # The aggregate amounts calculated per tax rate for all line items.
    Credit_note_tax_amount[] tax_amounts;
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note, including tax and all discount.
    int total;
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note, excluding tax, but including discounts.
    int? total_excluding_tax?;
    # Type of this credit note, one of `pre_payment` or `post_payment`. A `pre_payment` credit note means it was issued when the invoice was open. A `post_payment` credit note means it was issued when the invoice was paid.
    "post_payment"|"pre_payment" 'type;
    # The time that the credit note was voided.
    int? voided_at?;
};

# 
public type Checkout_multibanco_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.
public type custom_unit_amount_1 record {
    boolean enabled;
    int maximum?;
    int minimum?;
    int preset?;
};

public type account_subscribe_body record {|
    # Specifies which fields in the response should be expanded.
    account_subscribe_bodyExpandItemsString[] expand?;
    # The list of account features to which you would like to subscribe.
    ("transactions")[] features;
|};

# Details about the customer, including address and tax IDs.
public type customer_details record {
    postal_address address?;
    "billing"|"shipping" address_source?;
    string ip_address?;
    data_params[] tax_ids?;
    "customer_exempt"|"none"|"reverse_charge" taxability_override?;
};

public type charges_bodyExpandItemsString string;

public type customer_fund_cash_balance_body record {|
    # Amount to be used for this test cash balance transaction. A positive integer representing how much to fund in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to fund $1.00 or 100 to fund ¥100, a zero-decimal currency).
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Specifies which fields in the response should be expanded.
    customer_fund_cash_balance_bodyExpandItemsString[] expand?;
    # A description of the test funding. This simulates free-text references supplied by customers when making bank transfers to their cash balance. You can use this to test how Stripe's [reconciliation algorithm](https://stripe.com/docs/payments/customer-balance/reconciliation) applies to different user inputs.
    @constraint:String {maxLength: 5000}
    string reference?;
|};

# List of ForwardingRequest data.
public type ForwardingRequestList record {
    Forwarding\.request[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Represents the ability for the FinancialAccount to send money to, or receive money from other FinancialAccounts (for example, via OutboundPayment).
public type access_3 record {
    boolean requested;
};

public type schedule_release_body record {|
    # Specifies which fields in the response should be expanded.
    schedule_release_bodyExpandItemsString[] expand?;
    # Keep any cancellation on the subscription that the schedule has set
    boolean preserve_cancel_date?;
|};

# Represents whether this FinancialAccount is eligible for deposit insurance. Various factors determine the insurance amount.
public type access_2 record {
    boolean requested;
};

# Encodes the FinancialAccount's ability to be used with the Issuing product, including attaching cards to and drawing funds from the FinancialAccount.
public type access_1 record {
    boolean requested;
};

# Represents the Queries record for the operation: GetCreditNotesCreditNoteLines
public type GetCreditNotesCreditNoteLinesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCreditNotesCreditNoteLinesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Portal_flows_flow_after_completion record {
    # Configuration when `after_completion.type=hosted_confirmation`.
    Portal_flows_after_completion_hosted_confirmation? hosted_confirmation?;
    # Configuration when `after_completion.type=redirect`.
    Portal_flows_after_completion_redirect? redirect?;
    # The specified type of behavior after the flow is completed.
    "hosted_confirmation"|"portal_homepage"|"redirect" 'type;
};

# Represents the Queries record for the operation: GetCustomers
public type GetCustomersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersQueriesExpandItemsString[] expand?;
    # Provides a list of customers that are associated with the specified test clock. The response will not include customers with test clocks if this parameter is not set.
    @constraint:String {maxLength: 5000}
    string test_clock?;
    # Only return customers that were created during the given date interval.
    created_8 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # A case-sensitive filter on the list based on the customer's `email` field. The value must be a string.
    @constraint:String {maxLength: 512}
    string email?;
};

# 
public type Source_redirect_flow record {
    # The failure reason for the redirect, either `user_abort` (the customer aborted or dropped out of the redirect flow), `declined` (the authentication failed or the transaction was declined), or `processing_error` (the redirect failed due to a technical error). Present only if the redirect status is `failed`.
    string? failure_reason?;
    # The URL you provide to redirect the customer to after they authenticated their payment.
    @constraint:String {maxLength: 5000}
    string return_url;
    # The status of the redirect, either `pending` (ready to be used by your customer to authenticate the transaction), `succeeded` (succesful authentication, cannot be reused) or `not_required` (redirect should not be used) or `failed` (failed authentication, cannot be reused).
    @constraint:String {maxLength: 5000}
    string status;
    # The URL provided to you to redirect a customer to as part of a `redirect` authentication flow.
    @constraint:String {maxLength: 2048}
    string url;
};

# Represents the Queries record for the operation: GetBalanceHistoryId
public type GetBalanceHistoryIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetBalanceHistoryIdQueriesExpandItemsString[] expand?;
};

public type after_completion_hosted_confirmation_param record {
    @constraint:String {maxLength: 500}
    string custom_message?;
};

@constraint:String {maxLength: 5000}
public type GetPromotionCodesPromotionCodeQueriesExpandItemsString string;

# Each key of the dictionary represents an embedded component, and each embedded component maps to its configuration (e.g. whether it has been enabled or not).
public type account_session_create_components_param record {
    account_config_param account_management?;
    account_config_param account_onboarding?;
    payouts_config_param balances?;
    base_config_param documents?;
    account_config_param notification_banner?;
    payments_config_param payment_details?;
    payments_config_param payments?;
    payouts_config_param payouts?;
    base_config_param payouts_list?;
};

# 
public type TreasuryInboundTransfersResourceInboundTransferList record {
    # Details about each object.
    Treasury\.inbound_transfer[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Represents the Queries record for the operation: GetEntitlementsActiveEntitlementsId
public type GetEntitlementsActiveEntitlementsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetEntitlementsActiveEntitlementsIdQueriesExpandItemsString[] expand?;
};

# 
public type Treasury_outbound_transfers_resource_us_domestic_wire_tracking_details record {
    # IMAD of the OutboundTransfer for transfers sent over the `us_domestic_wire` network.
    @constraint:String {maxLength: 5000}
    string imad;
    # OMAD of the OutboundTransfer for transfers sent over the `us_domestic_wire` network.
    string? omad?;
};

# 
public type Payment_flows_private_payment_methods_klarna_dob record {
    # The day of birth, between 1 and 31.
    int? day?;
    # The month of birth, between 1 and 12.
    int? month?;
    # The four-digit year of birth.
    int? year?;
};

# 
public type Issuing_transaction_fleet_data record {
    # Answers to prompts presented to cardholder at point of sale.
    Issuing_transaction_fleet_cardholder_prompt_data? cardholder_prompt_data?;
    # The type of purchase. One of `fuel_purchase`, `non_fuel_purchase`, or `fuel_and_non_fuel_purchase`.
    string? purchase_type?;
    # More information about the total amount. This information is not guaranteed to be accurate as some merchants may provide unreliable data.
    Issuing_transaction_fleet_reported_breakdown? reported_breakdown?;
    # The type of fuel service. One of `non_fuel_transaction`, `full_service`, or `self_service`.
    string? service_type?;
};

# 
public type Payment_links_resource_custom_fields_dropdown record {
    # The options available for the customer to select. Up to 200 options allowed.
    Payment_links_resource_custom_fields_dropdown_option[] options;
};

# Represents the Queries record for the operation: GetProducts
public type GetProductsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetProductsQueriesExpandItemsString[] expand?;
    # Only return products that can be shipped (i.e., physical, not digital products).
    boolean shippable?;
    # Only return products that were created during the given date interval.
    created_27 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return products that are active or inactive (e.g., pass `false` to list all inactive products).
    boolean active?;
    # Only return products with the given IDs. Cannot be used with [starting_after](https://stripe.com/docs/api#list_products-starting_after) or [ending_before](https://stripe.com/docs/api#list_products-ending_before).
    GetProductsQueriesIdsItemsString[] ids?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return products with the given url.
    @constraint:String {maxLength: 5000}
    string url?;
};

# The PII this token represents.
public type pii_token_specs record {
    @constraint:String {maxLength: 5000}
    string id_number?;
};

public type capabilities_capability_body record {|
    # Specifies which fields in the response should be expanded.
    capabilities_capability_bodyExpandItemsString[] expand?;
    # To request a new capability for an account, pass true. There can be a delay before the requested capability becomes active. If the capability has any activation requirements, the response includes them in the `requirements` arrays.
    # 
    # If a capability isn't permanent, you can remove it from the account by passing false. Some capabilities are permanent after they've been requested. Attempting to remove a permanent capability returns an error.
    boolean requested?;
|};

public type Source_type_three_d_secure record {
    string? address_line1_check?;
    string? address_zip_check?;
    boolean? authenticated?;
    string? brand?;
    string? card?;
    string? country?;
    string? customer?;
    string? cvc_check?;
    string? dynamic_last4?;
    int? exp_month?;
    int? exp_year?;
    string fingerprint?;
    string? funding?;
    string? last4?;
    string? name?;
    string three_d_secure?;
    string? tokenization_method?;
};

public type reader_refund_payment_body record {|
    # A positive integer in __cents__ representing how much of this charge to refund.
    int amount?;
    # ID of the Charge to refund.
    @constraint:String {maxLength: 5000}
    string charge?;
    # Specifies which fields in the response should be expanded.
    reader_refund_payment_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # ID of the PaymentIntent to refund.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.
    boolean refund_application_fee?;
    refund_payment_config refund_payment_config?;
    # Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.
    boolean reverse_transfer?;
|};

public type quotes_quote_body record {|
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. There cannot be any line items with recurring prices when using this field.
    int|"" application_fee_amount?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field.
    decimal|"" application_fee_percent?;
    automatic_tax_param_5 automatic_tax?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or at invoice finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The customer for which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.
    @constraint:String {maxLength: 5000}
    string customer?;
    # The tax rates that will apply to any line item that does not have `tax_rates` set.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # A description that will be displayed on the quote PDF.
    string|"" description?;
    # The discounts applied to the quote. You can only set up to one discount.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    quotes_quote_bodyExpandItemsString[] expand?;
    # A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.
    int expires_at?;
    # A footer that will be displayed on the quote PDF.
    string|"" footer?;
    # A header that will be displayed on the quote PDF.
    string|"" header?;
    quote_param invoice_settings?;
    # A list of line items the customer is being quoted for. Each line item includes information about the product, the quantity, and the resulting cost.
    line_item_update_params[] line_items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The account on behalf of which to charge.
    string|"" on_behalf_of?;
    subscription_data_update_params_1 subscription_data?;
    # The data with which to automatically create a Transfer for each of the invoices.
    record {int amount?; decimal amount_percent?; string destination;}|"" transfer_data?;
|};

# To share the contents of a `File` object with non-Stripe users, you can
# create a `FileLink`. `FileLink`s contain a URL that you can use to
# retrieve the contents of the file without authentication.
public type File_link record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Returns if the link is already expired.
    boolean expired;
    # Time that the link expires.
    int? expires_at?;
    # The file object this link points to.
    string|File file;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "file_link" 'object;
    # The publicly accessible URL to download the file.
    string? url?;
};

public type InvoiceAccounttaxidsItemsnull string|Tax_id|Deleted_tax_id;

# Documents that may be submitted to satisfy various informational requests.
public type documents_specs record {
    documents_param bank_account_ownership_verification?;
    documents_param company_license?;
    documents_param company_memorandum_of_association?;
    documents_param company_ministerial_decree?;
    documents_param company_registration_verification?;
    documents_param company_tax_id_verification?;
    documents_param proof_of_registration?;
};

public type prices_bodyExpandItemsString string;

# 
public type Invoice_payment_method_options_acss_debit_mandate_options record {
    # Transaction type of the mandate.
    "business"|"personal"? transaction_type?;
};

# Represents the Queries record for the operation: GetCustomersCustomerTaxIds
public type GetCustomersCustomerTaxIdsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerTaxIdsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# Represents the Queries record for the operation: GetTreasuryReceivedDebits
public type GetTreasuryReceivedDebitsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # The FinancialAccount that funds were pulled from.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryReceivedDebitsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return ReceivedDebits that have the given status: `succeeded` or `failed`.
    "failed"|"succeeded" status?;
};

# 
public type Payment_method_options_konbini record {
    # An optional 10 to 11 digit numeric-only string determining the confirmation code at applicable convenience stores.
    string? confirmation_number?;
    # The number of calendar days (between 1 and 60) after which Konbini payment instructions will expire. For example, if a PaymentIntent is confirmed with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions will expire on Wednesday 23:59:59 JST.
    int? expires_after_days?;
    # The timestamp at which the Konbini payment instructions will expire. Only one of `expires_after_days` or `expires_at` may be set.
    int? expires_at?;
    # A product descriptor of up to 22 characters, which will appear to customers at the convenience store.
    string? product_description?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type source_verify_body record {|
    # Specifies which fields in the response should be expanded.
    source_verify_bodyExpandItemsString[] expand?;
    # The values needed to verify the source.
    source_verify_bodyValuesItemsString[] values;
|};

public type authorization_decline_body record {|
    # Specifies which fields in the response should be expanded.
    authorization_decline_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# 
public type Checkout_au_becs_debit_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Schedules_phase_automatic_tax record {
    # Whether Stripe automatically computes tax on invoices created during this phase.
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
};

# 
public type Payment_method_options_card_present record {
    # Request ability to capture this payment beyond the standard [authorization validity window](https://stripe.com/docs/terminal/features/extended-authorizations#authorization-validity)
    boolean? request_extended_authorization?;
    # Request ability to [increment](https://stripe.com/docs/terminal/features/incremental-authorizations) this PaymentIntent if the combination of MCC and card brand is eligible. Check [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported) in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm) response to verify support.
    boolean? request_incremental_authorization_support?;
    Payment_method_options_card_present_routing routing?;
};

# 
public type Account_card_payments_settings record {
    Account_decline_charge_on decline_on?;
    # The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. `statement_descriptor_prefix` is useful for maximizing descriptor space for the dynamic portion.
    string? statement_descriptor_prefix?;
    # The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.
    string? statement_descriptor_prefix_kana?;
    # The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.
    string? statement_descriptor_prefix_kanji?;
};

public type reporting_report_runs_body record {|
    # Specifies which fields in the response should be expanded.
    reporting_report_runs_bodyExpandItemsString[] expand?;
    run_parameter_specs parameters?;
    # The ID of the [report type](https://stripe.com/docs/reporting/statements/api#report-types) to run, such as `"balance.summary.1"`.
    string report_type;
|};

# Represents the Queries record for the operation: GetProductsProductFeatures
public type GetProductsProductFeaturesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetProductsProductFeaturesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Payment_method_au_becs_debit record {
    # Six-digit number identifying bank and branch associated with this bank account.
    string? bsb_number?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
};

# 
public type NotificationWebhookEndpointList record {
    Webhook_endpoint[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/webhook_endpoints`}
    string url;
};

public type access_with_ach_details record {
    boolean requested;
};

# 
public type Notification_event_data record {
    # Object containing the API resource relevant to the event. For example, an `invoice.created` event will have a full [invoice object](https://stripe.com/docs/api#invoice_object) as the value of the object key.
    record {} 'object;
    # Object containing the names of the updated attributes and their values prior to the event (only included in events of type `*.updated`). If an array attribute has any updated elements, this object contains the entire array. In Stripe API versions 2017-04-06 or earlier, an updated array attribute in this object includes only the updated array elements.
    record {} previous_attributes?;
};

public type linked_account_options_filters_param record {
    (linked_account_options_filters_paramAccountsubcategoriesItemsString)[] account_subcategories?;
};

# 
public type Payment_intent_next_action_display_bank_transfer_instructions record {
    # The remaining amount that needs to be transferred to complete the payment.
    int? amount_remaining?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string? currency?;
    # A list of financial addresses that can be used to fund the customer balance
    Funding_instructions_bank_transfer_financial_address[] financial_addresses?;
    # A link to a hosted page that guides your customer through completing the transfer.
    string? hosted_instructions_url?;
    # A string identifying this payment. Instruct your customer to include this code in the reference or memo field of their bank transfer.
    string? reference?;
    # Type of bank transfer
    "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer" 'type;
};

# 
public type ClimateRemovalsProductsList record {
    Climate\.product[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/climate/products`}
    string url;
};

# 
public type PaymentMethodConfigResourcePaymentMethodConfigurationsList record {
    Payment_method_configuration[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/payment_method_configurations`}
    string url;
};

# 
public type Invoice_setting_subscription_schedule_setting record {
    # The account tax IDs associated with the subscription schedule. Will be set on invoices generated by the subscription schedule.
    (string|Tax_id|Deleted_tax_id)[]? account_tax_ids?;
    # Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.
    int? days_until_due?;
    Connect_account_reference issuer;
};

# 
public type Deleted_discount record {
    # The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.
    string? checkout_session?;
    Coupon coupon;
    # The ID of the customer associated with this discount.
    string|Customer|Deleted_customer? customer?;
    # Always true for a deleted object
    true deleted;
    # The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.
    @constraint:String {maxLength: 5000}
    string id;
    # The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.
    string? invoice?;
    # The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.
    string? invoice_item?;
    # String representing the object's type. Objects of the same type share the same value.
    "discount" 'object;
    # The promotion code applied to create this discount.
    string|Promotion_code? promotion_code?;
    # Date that the coupon was applied.
    int 'start;
    # The subscription that this coupon is applied to, if it is applied to a particular subscription.
    string? subscription?;
    # The subscription item that this coupon is applied to, if it is applied to a particular subscription item.
    string? subscription_item?;
};

public type intent_cancel_body_1 record {|
    # Reason for canceling this SetupIntent. Possible values are: `abandoned`, `requested_by_customer`, or `duplicate`
    "abandoned"|"duplicate"|"requested_by_customer" cancellation_reason?;
    # Specifies which fields in the response should be expanded.
    intent_cancel_body_1ExpandItemsString[] expand?;
|};

# 
public type Payment_method_link record {
    # Account owner's email address.
    string? email?;
};

@constraint:String {maxLength: 5000}
public type Issuing_authorization_treasuryReceivedcreditsItemsString string;

# 
public type Issuing_network_token_network_data record {
    Issuing_network_token_device device?;
    Issuing_network_token_mastercard mastercard?;
    # The network that the token is associated with. An additional hash is included with a name matching this value, containing tokenization data specific to the card network.
    "mastercard"|"visa" 'type;
    Issuing_network_token_visa visa?;
    Issuing_network_token_wallet_provider wallet_provider?;
};

# The updated CVC value this token represents.
public type cvc_params record {
    @constraint:String {maxLength: 5000}
    string cvc;
};

public type payments_features_param record {
    boolean capture_payments?;
    boolean destination_on_behalf_of_charge_management?;
    boolean dispute_management?;
    boolean refund_management?;
};

# Provides settings related to HTTP/1.x protocol.
public type ClientHttp1Settings record {|
    # Specifies whether to reuse a connection for multiple requests
    http:KeepAlive keepAlive = http:KEEPALIVE_AUTO;
    # The chunking behaviour of the request
    http:Chunking chunking = http:CHUNKING_AUTO;
    # Proxy server related options
    ProxyConfig proxy?;
|};

# Controls what fields on Customer can be updated by the Checkout Session. Can only be provided when `customer` is provided.
public type customer_update_params record {
    "auto"|"never" address?;
    "auto"|"never" name?;
    "auto"|"never" shipping?;
};

# 
public type Issuing_network_token_device record {
    # An obfuscated ID derived from the device ID.
    @constraint:String {maxLength: 5000}
    string device_fingerprint?;
    # The IP address of the device at provisioning time.
    @constraint:String {maxLength: 5000}
    string ip_address?;
    # The geographic latitude/longitude coordinates of the device at provisioning time. The format is [+-]decimal/[+-]decimal.
    @constraint:String {maxLength: 5000}
    string location?;
    # The name of the device used for tokenization.
    @constraint:String {maxLength: 5000}
    string name?;
    # The phone number of the device used for tokenization.
    @constraint:String {maxLength: 5000}
    string phone_number?;
    # The type of device used for tokenization.
    "other"|"phone"|"watch" 'type?;
};

# 
public type Source_mandate_notification_acss_debit_data record {
    # The statement descriptor associate with the debit.
    @constraint:String {maxLength: 5000}
    string statement_descriptor?;
};

# A SetupIntent guides you through the process of setting up and saving a customer's payment credentials for future payments.
# For example, you can use a SetupIntent to set up and save your customer's card without immediately collecting a payment.
# Later, you can use [PaymentIntents](https://stripe.com/docs/api#payment_intents) to drive the payment flow.
# 
# Create a SetupIntent when you're ready to collect your customer's payment credentials.
# Don't maintain long-lived, unconfirmed SetupIntents because they might not be valid.
# The SetupIntent transitions through multiple [statuses](https://docs.stripe.com/payments/intents#intent-statuses) as it guides
# you through the setup process.
# 
# Successful SetupIntents result in payment credentials that are optimized for future payments.
# For example, cardholders in [certain regions](https://stripe.com/guides/strong-customer-authentication) might need to be run through
# [Strong Customer Authentication](https://docs.stripe.com/strong-customer-authentication) during payment method collection
# to streamline later [off-session payments](https://docs.stripe.com/payments/setup-intents).
# If you use the SetupIntent with a [Customer](https://stripe.com/docs/api#setup_intent_object-customer),
# it automatically attaches the resulting payment method to that Customer after successful setup.
# We recommend using SetupIntents or [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) on
# PaymentIntents to save payment methods to prevent saving invalid or unoptimized payment methods.
# 
# By using SetupIntents, you can reduce friction for your customers, even as regulations change over time.
# 
# Related guide: [Setup Intents API](https://docs.stripe.com/payments/setup-intents)
public type Setup_intent record {
    # ID of the Connect application that created the SetupIntent.
    string|Application? application?;
    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.
    # 
    # It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    boolean attach_to_self?;
    # Settings for dynamic payment methods compatible with this Setup Intent
    Payment_flows_automatic_payment_methods_setup_intent? automatic_payment_methods?;
    # Reason for cancellation of this SetupIntent, one of `abandoned`, `requested_by_customer`, or `duplicate`.
    "abandoned"|"duplicate"|"requested_by_customer"? cancellation_reason?;
    # The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.
    # 
    # The client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.
    string? client_secret?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # ID of the Customer this SetupIntent belongs to, if one exists.
    # 
    # If present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.
    string|Customer|Deleted_customer? customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Indicates the directions of money movement for which this payment method is intended to be used.
    # 
    # Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
    ("inbound"|"outbound")[]? flow_directions?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The error encountered in the previous SetupIntent confirmation.
    Api_errors? last_setup_error?;
    # The most recent SetupAttempt for this SetupIntent.
    string|Setup_attempt? latest_attempt?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # ID of the multi use Mandate generated by the SetupIntent.
    string|Mandate? mandate?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # If present, this property tells you what actions you need to take in order for your customer to continue payment setup.
    Setup_intent_next_action? next_action?;
    # String representing the object's type. Objects of the same type share the same value.
    "setup_intent" 'object;
    # The account (if any) for which the setup is intended.
    string|Account? on_behalf_of?;
    # ID of the payment method used with this SetupIntent.
    string|Payment_method? payment_method?;
    # Information about the payment method configuration used for this Setup Intent.
    Payment_method_config_biz_payment_method_configuration_details? payment_method_configuration_details?;
    # Payment method-specific configuration for this SetupIntent.
    Setup_intent_payment_method_options? payment_method_options?;
    # The list of payment method types (e.g. card) that this SetupIntent is allowed to set up.
    Setup_intentPaymentmethodtypesItemsString[] payment_method_types;
    # ID of the single_use Mandate generated by the SetupIntent.
    string|Mandate? single_use_mandate?;
    # [Status](https://stripe.com/docs/payments/intents#intent-statuses) of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `canceled`, or `succeeded`.
    "canceled"|"processing"|"requires_action"|"requires_confirmation"|"requires_payment_method"|"succeeded" status;
    # Indicates how the payment method is intended to be used in the future.
    # 
    # Use `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.
    @constraint:String {maxLength: 5000}
    string usage;
};

# 
public type Payment_intent_next_action_konbini_ministop record {
    # The confirmation number.
    @constraint:String {maxLength: 5000}
    string confirmation_number?;
    # The payment code.
    @constraint:String {maxLength: 5000}
    string payment_code;
};

# Default configuration to be used on Stripe Tax calculations.
public type defaults_param record {
    "exclusive"|"inclusive"|"inferred_by_currency" tax_behavior?;
    string tax_code?;
};

public type Discounts1ItemsObject record {
    string coupon?;
    string discount?;
    string promotion_code?;
};

# 
public type Bank_connections_resource_balance_api_resource_credit_balance record {
    # The credit that has been used by the account holder.
    # 
    # Each key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
    # 
    # Each value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.
    record {|int...;|}? used?;
};

public type customs_param record {
    @constraint:String {maxLength: 5000}
    string eori_number?;
};

public type Deleted_terminal\.location record {
    true deleted;
    string id;
    "terminal.location" 'object;
};

# Represents the Queries record for the operation: GetTreasuryReceivedCredits
public type GetTreasuryReceivedCreditsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # The FinancialAccount that received the funds.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryReceivedCreditsQueriesExpandItemsString[] expand?;
    # Only return ReceivedCredits described by the flow.
    linked_flows_param linked_flows?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return ReceivedCredits that have the given status: `succeeded` or `failed`.
    "failed"|"succeeded" status?;
};

# 
public type Tax_product_resource_tax_settings_status_details_resource_pending record {
    # The list of missing fields that are required to perform calculations. It includes the entry `head_office` when the status is `pending`. It is recommended to set the optional values even if they aren't listed as required for calculating taxes. Calculations can fail if missing fields aren't explicitly provided on every call.
    Tax_product_resource_tax_settings_status_details_resource_pendingMissingfieldsItemsString[]? missing_fields?;
};

public type transactions_transaction_body record {|
    # Specifies which fields in the response should be expanded.
    transactions_transaction_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# 
public type Payment_method_options_customer_balance_eu_bank_account record {
    # The desired country code of the bank account information. Permitted values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.
    "BE"|"DE"|"ES"|"FR"|"IE"|"NL" country;
};

public type Subscriptiondefaulttaxrates1ItemsString string;

# 
public type Quotes_resource_computed record {
    # The definitive totals and line items the customer will be charged on a recurring basis. Takes into account the line items with recurring prices and discounts with `duration=forever` coupons only. Defaults to `null` if no inputted line items with recurring prices.
    Quotes_resource_recurring? recurring?;
    Quotes_resource_upfront upfront;
};

# 
public type Payment_intent_next_action_display_multibanco_details record {
    # Entity number associated with this Multibanco payment.
    string? entity?;
    # The timestamp at which the Multibanco voucher expires.
    int? expires_at?;
    # The URL for the hosted Multibanco voucher page, which allows customers to view a Multibanco voucher.
    string? hosted_voucher_url?;
    # Reference number associated with this Multibanco payment.
    string? reference?;
};

# 
public type Payment_pages_checkout_session_consent record {
    # If `opt_in`, the customer consents to receiving promotional communications
    # from the merchant about this Checkout Session.
    "opt_in"|"opt_out"? promotions?;
    # If `accepted`, the customer in this Checkout Session has agreed to the merchant's terms of service.
    "accepted"? terms_of_service?;
};

# 
public type TopupList record {
    Topup[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/topups`}
    string url;
};

public type transactions_create_from_calculation_body record {|
    # Tax Calculation ID to be used as input when creating the transaction.
    @constraint:String {maxLength: 5000}
    string calculation;
    # Specifies which fields in the response should be expanded.
    transactions_create_from_calculation_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The Unix timestamp representing when the tax liability is assumed or reduced, which determines the liability posting period and handling in tax liability reports. The timestamp must fall within the `tax_date` and the current time, unless the `tax_date` is scheduled in advance. Defaults to the current time.
    int posted_at?;
    # A custom order or sale identifier, such as 'myOrder_123'. Must be unique across all transactions, including reversals.
    @constraint:String {maxLength: 500}
    string reference;
|};

# Rules that control spending for this card. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.
public type authorization_controls_param record {
    (authorization_controls_paramAllowedcategoriesItemsString)[] allowed_categories?;
    authorization_controls_paramAllowedmerchantcountriesItemsString[] allowed_merchant_countries?;
    (authorization_controls_paramBlockedcategoriesItemsString)[] blocked_categories?;
    authorization_controls_paramBlockedmerchantcountriesItemsString[] blocked_merchant_countries?;
    spending_limits_param[] spending_limits?;
};

@constraint:String {maxLength: 5000}
public type Bank_connections_resource_link_account_session_filtersCountriesItemsString string;

public type account_unsubscribe_bodyExpandItemsString string;

public type customer_balance_transactions_body record {|
    # The integer amount in **cents (or local equivalent)** to apply to the customer's credit balance.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Specifies the [`invoice_credit_balance`](https://stripe.com/docs/api/customers/object#customer_object-invoice_credit_balance) that this transaction will apply to. If the customer's `currency` is not set, it will be updated to this value.
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 350}
    string description?;
    # Specifies which fields in the response should be expanded.
    customer_balance_transactions_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

public type customer_cash_balance_bodyExpandItemsString string;

public type coupons_bodyExpandItemsString string;

# Configuration settings for the PaymentIntent that is generated when the invoice is finalized.
public type payment_settings_1 record {
    string|"" default_mandate?;
    payment_method_options_1 payment_method_options?;
    ("ach_credit_transfer"|"ach_debit"|"acss_debit"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"konbini"|"link"|"p24"|"paynow"|"paypal"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"us_bank_account"|"wechat_pay")[]|"" payment_method_types?;
};

public type line_item record {
    int amount;
    @constraint:String {maxLength: 5000}
    string description;
    int quantity;
};

# 
public type Payment_method_details_au_becs_debit record {
    # Bank-State-Branch number of the bank account.
    string? bsb_number?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    @constraint:String {maxLength: 5000}
    string mandate?;
};

# 
public type Payment_method_details_card_wallet_amex_express_checkout record {
};

# 
public type Checkout_eps_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type Reporting\.report_run record {
    int created;
    string? 'error?;
    string id;
    boolean livemode;
    "reporting.report_run" 'object;
    Financial_reporting_finance_report_run_run_parameters parameters;
    string report_type;
    File? result?;
    string status;
    int? succeeded_at?;
};

public type Billing\.meter_event_adjustment record {
    Billing_meter_resource_billing_meter_event_adjustment_cancel? cancel?;
    string event_name;
    boolean livemode;
    "billing.meter_event_adjustment" 'object;
    "complete"|"pending" status;
    "cancel" 'type;
};

# 
public type Person_additional_tos_acceptances record {
    Person_additional_tos_acceptance account;
};

public type customer_cards_body record {|
    # A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.
    @constraint:String {maxLength: 5000}
    string alipay_account?;
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; string country; string currency?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    # A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string cvc?; int exp_month; int exp_year; record {|string...;|} metadata?; string name?; string number; "card" 'object?;}|string card?;
    # Specifies which fields in the response should be expanded.
    customer_cards_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Please refer to full [documentation](https://stripe.com/docs/api) instead.
    @constraint:String {maxLength: 5000}
    string 'source?;
|};

@constraint:String {maxLength: 5000}
public type Account_capability_requirementsEventuallydueItemsString string;

public type subscription_schedules_schedule_bodyExpandItemsString string;

public type subscriptions_subscription_exposed_id_bodyExpandItemsString string;

public type Subscription_itemDiscountsItemsnull string|Discount;

# 
public type Billing_meter_resource_billing_meter_event_adjustment_cancel record {
    # Unique identifier for the event.
    string? identifier?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryOutboundTransfersQueriesExpandItemsString string;

# 
public type Account_invoices_settings record {
    # The list of default Account Tax IDs to automatically include on invoices. Account Tax IDs get added when an invoice is finalized.
    (string|Tax_id)[]? default_account_tax_ids?;
};

# 
public type Treasury_received_debits_resource_status_transitions record {
    # Timestamp describing when the DebitReversal changed status to `completed`.
    int? completed_at?;
};

public type payment_links_payment_link_bodyExpandItemsString string;

# 
public type Charge_transfer_data record {
    # The amount transferred to the destination account, if specified. By default, the entire charge amount is transferred to the destination account.
    int? amount?;
    # ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.
    string|Account destination;
};

# ConfirmationTokens help transport client side data collected by Stripe JS over
# to your server for confirming a PaymentIntent or SetupIntent. If the confirmation
# is successful, values present on the ConfirmationToken are written onto the Intent.
# 
# To learn more about how to use ConfirmationToken, visit the related guides:
# - [Finalize payments on the server](https://stripe.com/docs/payments/finalize-payments-on-the-server)
# - [Build two-step confirmation](https://stripe.com/docs/payments/build-a-two-step-confirmation).
public type Confirmation_token record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Time at which this ConfirmationToken expires and can no longer be used to confirm a PaymentIntent or SetupIntent.
    int? expires_at?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Data used for generating a Mandate.
    Confirmation_tokens_resource_mandate_data? mandate_data?;
    # String representing the object's type. Objects of the same type share the same value.
    "confirmation_token" 'object;
    # ID of the PaymentIntent that this ConfirmationToken was used to confirm, or null if this ConfirmationToken has not yet been used.
    string? payment_intent?;
    # Payment-method-specific configuration for this ConfirmationToken.
    Confirmation_tokens_resource_payment_method_options? payment_method_options?;
    # Payment details collected by the Payment Element, used to create a PaymentMethod when a PaymentIntent or SetupIntent is confirmed with this ConfirmationToken.
    Confirmation_tokens_resource_payment_method_preview? payment_method_preview?;
    # Return URL used to confirm the Intent.
    string? return_url?;
    # Indicates that you intend to make future payments with this ConfirmationToken's payment method.
    # 
    # The presence of this property will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete.
    "off_session"|"on_session"? setup_future_usage?;
    # ID of the SetupIntent that this ConfirmationToken was used to confirm, or null if this ConfirmationToken has not yet been used.
    string? setup_intent?;
    # Shipping information collected on this ConfirmationToken.
    Confirmation_tokens_resource_shipping? shipping?;
    # Indicates whether the Stripe SDK is used to handle confirmation flow. Defaults to `true` on ConfirmationToken.
    boolean use_stripe_sdk;
};

public type display_preference_param record {
    "none"|"off"|"on" preference?;
};

@constraint:String {maxLength: 5000}
public type NetworksAvailableItemsString string;

# 
public type Portal_flows_after_completion_redirect record {
    # The URL the customer will be redirected to after the flow is completed.
    @constraint:String {maxLength: 5000}
    string return_url;
};

public type transfer_data_params record {
    int amount?;
    string destination;
};

# 
public type Three_d_secure_usage record {
    # Whether 3D Secure is supported on this card.
    boolean supported;
};

@constraint:String {maxLength: 5000}
public type GetIdentityVerificationSessionsQueriesExpandItemsString string;

# Payment-method-specific configuration.
public type payment_method_options_param record {
    payment_method_options_param acss_debit?;
    payment_method_options_param_1 affirm?;
    payment_method_options_param_1 afterpay_clearpay?;
    payment_method_options_param_1 alipay?;
    payment_method_options_param_2 amazon_pay?;
    payment_method_options_param_1 au_becs_debit?;
    payment_method_options_param_3 bacs_debit?;
    payment_method_options_param_1 bancontact?;
    payment_method_options_param_4 boleto?;
    payment_method_options_param_5 card?;
    payment_method_options_param_3 cashapp?;
    payment_method_options_param_6 customer_balance?;
    payment_method_options_param_1 eps?;
    payment_method_options_param_1 fpx?;
    payment_method_options_param_1 giropay?;
    payment_method_options_param_1 grabpay?;
    payment_method_options_param_1 ideal?;
    payment_method_options_param_1 klarna?;
    payment_method_options_param_7 konbini?;
    payment_method_options_param_2 link?;
    payment_method_options_param_1 mobilepay?;
    payment_method_options_param_1 multibanco?;
    payment_method_options_param_7 oxxo?;
    payment_method_options_param_8 p24?;
    payment_method_options_param_1 paynow?;
    payment_method_options_param_9 paypal?;
    payment_method_options_param_10 pix?;
    payment_method_options_param_2 revolut_pay?;
    payment_method_options_param_3 sepa_debit?;
    payment_method_options_param_1 sofort?;
    payment_method_options_param_11 swish?;
    payment_method_options_param_12 us_bank_account?;
    payment_method_options_param_13 wechat_pay?;
};

public type canada record {
    province_standard province_standard?;
    "province_standard"|"simplified"|"standard" 'type;
};

# Encodes whether a FinancialAccount has access to a particular feature. Stripe or the platform can control features via the requested field.
public type feature_access record {
    access card_issuing?;
    access deposit_insurance?;
    financial_addresses financial_addresses?;
    inbound_transfers inbound_transfers?;
    access intra_stripe_flows?;
    outbound_payments outbound_payments?;
    outbound_transfers outbound_transfers?;
};

# Represents the Queries record for the operation: GetEntitlementsActiveEntitlements
public type GetEntitlementsActiveEntitlementsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetEntitlementsActiveEntitlementsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # The ID of the customer.
    @constraint:String {maxLength: 5000}
    string customer;
};

public type verification_sessions_session_bodyExpandItemsString string;

# 
public type Payment_pages_checkout_session_shipping_cost record {
    # Total shipping cost before any discounts or taxes are applied.
    int amount_subtotal;
    # Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.
    int amount_tax;
    # Total shipping cost after discounts and taxes are applied.
    int amount_total;
    # The ID of the ShippingRate for this order.
    string|Shipping_rate? shipping_rate?;
    # The taxes applied to the shipping rate.
    Line_items_tax_amount[] taxes?;
};

# 
public type CardList record {
    Card[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Country_spec_verification_fields record {
    Country_spec_verification_field_details company;
    Country_spec_verification_field_details individual;
};

# The line items representing what is being sold.
public type PaymentLinksResourceListLineItems_1 record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Information about the features available in the portal.
public type features_creation_param record {
    customer_update_creation_param customer_update?;
    invoice_list_param invoice_history?;
    payment_method_update_param payment_method_update?;
    subscription_cancel_creation_param subscription_cancel?;
    subscription_update_creation_param subscription_update?;
};

# 
public type Account_unification_account_controller_stripe_dashboard record {
    # A value indicating the Stripe dashboard this account has access to independent of the Connect application.
    "express"|"full"|"none" 'type;
};

public type treasury_inbound_transfers_body record {|
    # Amount (in cents) to be transferred.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    treasury_inbound_transfers_bodyExpandItemsString[] expand?;
    # The FinancialAccount to send funds to.
    string financial_account;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The origin payment method to be debited for the InboundTransfer.
    @constraint:String {maxLength: 5000}
    string origin_payment_method;
    # The complete description that appears on your customers' statements. Maximum 10 characters.
    @constraint:String {maxLength: 10}
    string statement_descriptor?;
|};

public type invoice_data_params record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    record {string name; string value;}[]|"" custom_fields?;
    @constraint:String {maxLength: 1500}
    string description?;
    @constraint:String {maxLength: 5000}
    string footer?;
    param issuer?;
    record {|string...;|} metadata?;
    record {""|"exclude_tax"|"include_inclusive_tax" amount_tax_display?;}|"" rendering_options?;
};

# 
public type Refund_destination_details_generic record {
    # The reference assigned to the refund.
    string? reference?;
    # Status of the reference on the refund. This can be `pending`, `available` or `unavailable`.
    string? reference_status?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerBankAccountsQueriesExpandItemsString string;

# 
public type Mandate_us_bank_account record {
    # Mandate collection method
    "paper" collection_method?;
};

@constraint:String {maxLength: 5000}
public type GetBalanceTransactionsQueriesExpandItemsString string;

# 
public type Payment_pages_checkout_session_custom_fields_text record {
    # The value that will pre-fill the field on the payment page.
    string? default_value?;
    # The maximum character length constraint for the customer's input.
    int? maximum_length?;
    # The minimum character length requirement for the customer's input.
    int? minimum_length?;
    # The value entered by the customer.
    string? value?;
};

public type capability_param record {
    boolean requested?;
};

# 
public type Payment_method_ideal record {
    # The customer's bank, if provided. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.
    "abn_amro"|"asn_bank"|"bunq"|"handelsbanken"|"ing"|"knab"|"moneyou"|"n26"|"nn"|"rabobank"|"regiobank"|"revolut"|"sns_bank"|"triodos_bank"|"van_lanschot"|"yoursafe"? bank?;
    # The Bank Identifier Code of the customer's bank, if the bank was provided.
    "ABNANL2A"|"ASNBNL21"|"BITSNL2A"|"BUNQNL2A"|"FVLBNL22"|"HANDNL2A"|"INGBNL2A"|"KNABNL2H"|"MOYONL21"|"NNBANL2G"|"NTSBDEB1"|"RABONL2U"|"RBRBNL21"|"REVOIE23"|"REVOLT21"|"SNSBNL2A"|"TRIONL2U"? bic?;
};

# All invoices will be billed using the specified settings.
public type invoice_settings_param record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    param issuer?;
};

public type discount_params record {
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string promotion_code?;
};

public type prices_price_body record {|
    # Whether the price can be used for new purchases. Defaults to `true`.
    boolean active?;
    # Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|record {record {boolean enabled; int maximum?; int minimum?; int preset?;} custom_unit_amount?; "exclusive"|"inclusive"|"unspecified" tax_behavior?; record {int flat_amount?; string flat_amount_decimal?; int unit_amount?; string unit_amount_decimal?; "inf"|int up_to;}[] tiers?; int unit_amount?; string unit_amount_decimal?;}...;|}|"" currency_options?;
    # Specifies which fields in the response should be expanded.
    prices_price_bodyExpandItemsString[] expand?;
    # A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.
    @constraint:String {maxLength: 200}
    string lookup_key?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # A brief description of the price, hidden from customers.
    @constraint:String {maxLength: 5000}
    string nickname?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    # If set to true, will atomically remove the lookup key from the existing price, and assign it to this price.
    boolean transfer_lookup_key?;
|};

# Documents that may be submitted to satisfy various informational requests.
public type external_account_documents_param record {
    documents_param bank_account_ownership_verification?;
};

# 
public type Payment_links_resource_tax_id_collection record {
    # Indicates whether tax ID collection is enabled for the session.
    boolean enabled;
};

public type sources_id_bodyExpandItemsString string;

# The full address of the location. If you're updating the `address` field, avoid changing the `country`. If you need to modify the `country` field, create a new `Location` object and re-register any existing readers to that location.
public type optional_fields_address_1 record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

# 
public type Treasury_received_credits_resource_reversal_details record {
    # Time before which a ReceivedCredit can be reversed.
    int? deadline?;
    # Set if a ReceivedCredit cannot be reversed.
    "already_reversed"|"deadline_passed"|"network_restricted"|"other"|"source_flow_restricted"? restricted_reason?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerSourcesQueriesExpandItemsString string;

public type customer_funding_instructions_bodyExpandItemsString string;

public type customers_bodyPreferredlocalesItemsString string;

public type price_data_with_product_data record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product?;
    product_data product_data?;
    recurring_adhoc recurring?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

# 
public type Payment_intent_payment_method_options_mobilepay record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Transfer_schedule record {
    # The number of days charges for the account will be held before being paid out.
    int delay_days;
    # How frequently funds will be paid out. One of `manual` (payouts only created via API call), `daily`, `weekly`, or `monthly`.
    @constraint:String {maxLength: 5000}
    string interval;
    # The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.
    int monthly_anchor?;
    # The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly.
    @constraint:String {maxLength: 5000}
    string weekly_anchor?;
};

# 
public type Payment_pages_checkout_session_after_expiration record {
    # When set, configuration used to recover the Checkout Session on expiry.
    Payment_pages_checkout_session_after_expiration_recovery? recovery?;
};

# Represents the Queries record for the operation: GetIdentityVerificationReportsReport
public type GetIdentityVerificationReportsReportQueries record {
    # Specifies which fields in the response should be expanded.
    GetIdentityVerificationReportsReportQueriesExpandItemsString[] expand?;
};

# The delivery of a specified quantity of carbon for an order.
public type Climate_removals_order_deliveries record {
    # Time at which the delivery occurred. Measured in seconds since the Unix epoch.
    int delivered_at;
    # Specific location of this delivery.
    Climate_removals_location? location?;
    # Quantity of carbon removal supplied by this delivery.
    @constraint:String {maxLength: 5000}
    string metric_tons;
    # Once retired, a URL to the registry entry for the tons from this delivery.
    string? registry_url?;
    Climate\.supplier supplier;
};

public type preferences_list_param record {
    boolean is_default?;
    boolean is_platform_default?;
};

@constraint:String {maxLength: 5000}
public type GetPaymentIntentsIntentQueriesExpandItemsString string;

# ABA Records contain U.S. bank account details per the ABA format.
public type Treasury_financial_accounts_resource_aba_record record {
    # The name of the person or business that owns the bank account.
    @constraint:String {maxLength: 5000}
    string account_holder_name;
    # The account number.
    string? account_number?;
    # The last four characters of the account number.
    @constraint:String {maxLength: 5000}
    string account_number_last4;
    # Name of the bank.
    @constraint:String {maxLength: 5000}
    string bank_name;
    # Routing number for the account.
    @constraint:String {maxLength: 5000}
    string routing_number;
};

# List of subscription items, each with an attached price.
public type SubscriptionItemList record {
    # Details about each object.
    Subscription_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type apple_pay_domains_body record {|
    string domain_name;
    # Specifies which fields in the response should be expanded.
    apple_pay_domains_bodyExpandItemsString[] expand?;
|};

public type payment_method_configurations_configuration_body record {|
    payment_method_param_2 acss_debit?;
    # Whether the configuration can be used for new payments.
    boolean active?;
    payment_method_param_3 affirm?;
    payment_method_param_4 afterpay_clearpay?;
    payment_method_param_5 alipay?;
    payment_method_param_6 amazon_pay?;
    payment_method_param_7 apple_pay?;
    payment_method_param_8 apple_pay_later?;
    payment_method_param_9 au_becs_debit?;
    payment_method_param_10 bacs_debit?;
    payment_method_param_11 bancontact?;
    payment_method_param_12 blik?;
    payment_method_param_13 boleto?;
    payment_method_param_14 card?;
    payment_method_param_15 cartes_bancaires?;
    payment_method_param_16 cashapp?;
    payment_method_param_17 customer_balance?;
    payment_method_param_18 eps?;
    # Specifies which fields in the response should be expanded.
    payment_method_configurations_configuration_bodyExpandItemsString[] expand?;
    payment_method_param_19 fpx?;
    payment_method_param_20 giropay?;
    payment_method_param_21 google_pay?;
    payment_method_param_22 grabpay?;
    payment_method_param_23 ideal?;
    payment_method_param_24 jcb?;
    payment_method_param_25 klarna?;
    payment_method_param_26 konbini?;
    payment_method_param_27 link?;
    payment_method_param_28 mobilepay?;
    payment_method_param_29 multibanco?;
    # Configuration name.
    @constraint:String {maxLength: 100}
    string name?;
    payment_method_param_30 oxxo?;
    payment_method_param_31 p24?;
    payment_method_param_32 paynow?;
    payment_method_param_33 paypal?;
    payment_method_param_34 promptpay?;
    payment_method_param_35 revolut_pay?;
    payment_method_param_36 sepa_debit?;
    payment_method_param_37 sofort?;
    payment_method_param_38 swish?;
    payment_method_param_39 us_bank_account?;
    payment_method_param_40 wechat_pay?;
    payment_method_param_41 zip?;
|};

public type spending_limits_paramCategoriesItemsString "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards";

# 
public type Payment_method_details_interac_present_receipt record {
    # The type of account being debited or credited
    "checking"|"savings"|"unknown" account_type?;
    # EMV tag 9F26, cryptogram generated by the integrated circuit chip.
    string? application_cryptogram?;
    # Mnenomic of the Application Identifier.
    string? application_preferred_name?;
    # Identifier for this transaction.
    string? authorization_code?;
    # EMV tag 8A. A code returned by the card issuer.
    string? authorization_response_code?;
    # Describes the method used by the cardholder to verify ownership of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`, `offline_pin_and_signature`, `online_pin`, or `signature`.
    string? cardholder_verification_method?;
    # EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.
    string? dedicated_file_name?;
    # The outcome of a series of EMV functions performed by the card reader.
    string? terminal_verification_results?;
    # An indication of various EMV functions performed during the transaction.
    string? transaction_status_information?;
};

public type account_sessions_body record {|
    # The identifier of the account to create an Account Session for.
    string account;
    account_session_create_components_param components;
    # Specifies which fields in the response should be expanded.
    account_sessions_bodyExpandItemsString[] expand?;
|};

public type FullnamealiasesItemsString string;

public type sources_id_body_1ExpandItemsString string;

# 
public type Payment_links_resource_automatic_tax record {
    # If `true`, tax will be calculated automatically using the customer's location.
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
};

public type TaxamountsItemsObject record {
    int amount;
    record {string country?; string description?; string display_name; boolean inclusive; string jurisdiction?; decimal percentage; string state?; "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;} tax_rate_data;
    int taxable_amount;
};

# 
public type Checkout_alipay_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type subscription_trial_end "now"|int;

# 
public type Payment_method_details_card record {
    # The authorized amount.
    int? amount_authorized?;
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? brand?;
    # When using manual capture, a future timestamp at which the charge will be automatically refunded if uncaptured.
    int capture_before?;
    # Check results by Card networks on Card address and CVC at time of payment.
    Payment_method_details_card_checks? checks?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_extended_authorization_extended_authorization extended_authorization?;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_incremental_authorization_incremental_authorization incremental_authorization?;
    # Installment details for this payment (Mexico only).
    # 
    # For more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).
    Payment_method_details_card_installments? installments?;
    # The last four digits of the card.
    string? last4?;
    # ID of the mandate used to make this payment or created by it.
    string? mandate?;
    Payment_flows_private_payment_methods_card_details_api_resource_multicapture multicapture?;
    # Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? network?;
    # If this card has network token credentials, this contains the details of the network token credentials.
    Payment_method_details_card_network_token? network_token?;
    Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_overcapture_overcapture overcapture?;
    # Populated if this transaction used 3D Secure authentication.
    Three_d_secure_details_charge? three_d_secure?;
    # If this Card is part of a card wallet, this contains the details of the card wallet.
    Payment_method_details_card_wallet? wallet?;
};

public type coupon_offer_param record {
    @constraint:String {maxLength: 5000}
    string coupon;
};

# Represents the Queries record for the operation: GetPlansPlan
public type GetPlansPlanQueries record {
    # Specifies which fields in the response should be expanded.
    GetPlansPlanQueriesExpandItemsString[] expand?;
};

# Settings for automatic tax lookup for this session and resulting payments, invoices, and subscriptions.
public type automatic_tax_params record {
    boolean enabled;
    param liability?;
};

public type transactions_create_force_capture_bodyExpandItemsString string;

public type settlements_settlement_body record {|
    # Specifies which fields in the response should be expanded.
    settlements_settlement_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

public type Source_type_eps record {
    string? reference?;
    string? statement_descriptor?;
};

public type currency_option record {
    int amount;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
};

public type authorization_increment_body record {|
    # Specifies which fields in the response should be expanded.
    authorization_increment_bodyExpandItemsString[] expand?;
    # The amount to increment the authorization by. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int increment_amount;
    # If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.
    boolean is_amount_controllable?;
|};

public type transfer_schedule_specs record {
    "minimum"|int delay_days?;
    "daily"|"manual"|"monthly"|"weekly" interval?;
    int monthly_anchor?;
    "friday"|"monday"|"saturday"|"sunday"|"thursday"|"tuesday"|"wednesday" weekly_anchor?;
};

# Stripe needs to collect certain pieces of information about each account
# created. These requirements can differ depending on the account's country. The
# Country Specs API makes these rules available to your integration.
# 
# You can also view the information from this API call as [an online
# guide](/docs/connect/required-verification-information).
public type Country_spec record {
    # The default currency for this country. This applies to both payment methods and bank accounts.
    @constraint:String {maxLength: 5000}
    string default_currency;
    # Unique identifier for the object. Represented as the ISO country code for this country.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "country_spec" 'object;
    # Currencies that can be accepted in the specific country (for transfers).
    record {|string[]...;|} supported_bank_account_currencies;
    # Currencies that can be accepted in the specified country (for payments).
    Country_specSupportedpaymentcurrenciesItemsString[] supported_payment_currencies;
    # Payment methods available in the specified country. You may need to enable some payment methods (e.g., [ACH](https://stripe.com/docs/ach)) on your account before they appear in this list. The `stripe` payment method refers to [charging through your platform](https://stripe.com/docs/connect/destination-charges).
    Country_specSupportedpaymentmethodsItemsString[] supported_payment_methods;
    # Countries that can accept transfers from the specified country.
    Country_specSupportedtransfercountriesItemsString[] supported_transfer_countries;
    Country_spec_verification_fields verification_fields;
};

public type id_fail_body_1 record {|
    # Specifies which fields in the response should be expanded.
    id_fail_body_1ExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type GetEventsQueriesExpandItemsString string;

public type Issuing\.transaction record {
    int amount;
    Issuing_transaction_amount_details? amount_details?;
    string|Issuing\.authorization? authorization?;
    string|Balance_transaction? balance_transaction?;
    string|Issuing\.card card;
    string|Issuing\.cardholder? cardholder?;
    int created;
    string currency;
    string|Issuing\.dispute? dispute?;
    string id;
    boolean livemode;
    int merchant_amount;
    string merchant_currency;
    Issuing_authorization_merchant_data merchant_data;
    record {|string...;|} metadata;
    Issuing_transaction_network_data? network_data?;
    "issuing.transaction" 'object;
    Issuing_transaction_purchase_details? purchase_details?;
    string|Issuing\.token? token?;
    Issuing_transaction_treasury? treasury?;
    "capture"|"refund" 'type;
    "apple_pay"|"google_pay"|"samsung_pay"? wallet?;
};

# Represents the Queries record for the operation: GetIssuingCards
public type GetIssuingCardsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Only return cards that have the given last four digits.
    @constraint:String {maxLength: 5000}
    string last4?;
    # Specifies which fields in the response should be expanded.
    GetIssuingCardsQueriesExpandItemsString[] expand?;
    @constraint:String {maxLength: 5000}
    string personalization_design?;
    # Only return cards that were issued during the given date interval.
    created_19 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return cards that have the given expiration month.
    int exp_month?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return cards that have the given expiration year.
    int exp_year?;
    # Only return cards belonging to the Cardholder with the provided ID.
    @constraint:String {maxLength: 5000}
    string cardholder?;
    # Only return cards that have the given type. One of `virtual` or `physical`.
    "physical"|"virtual" 'type?;
    # Only return cards that have the given status. One of `active`, `inactive`, or `canceled`.
    "active"|"canceled"|"inactive" status?;
};

public type transactions_create_unlinked_refund_bodyExpandItemsString string;

# Simulated data for the interac_present payment method.
public type interac_present record {
    @constraint:String {maxLength: 5000}
    string number?;
};

# 
public type Payment_intent_next_action_swish_qr_code record {
    # The raw data string used to generate QR code, it should be used together with QR code library.
    @constraint:String {maxLength: 5000}
    string data;
    # The image_url_png string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_png;
    # The image_url_svg string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_svg;
};

@constraint:String {maxLength: 5000}
public type GetCreditNotesQueriesExpandItemsString string;

public type verification_sessions_session_body record {|
    # Specifies which fields in the response should be expanded.
    verification_sessions_session_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    session_options_param options?;
    provided_details_param provided_details?;
    # The type of [verification check](https://stripe.com/docs/identity/verification-checks) to be performed.
    "document"|"id_number" 'type?;
|};

@constraint:String {maxLength: 5000}
public type GetTaxRegistrationsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetInvoiceitems
public type GetInvoiceitemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetInvoiceitemsQueriesExpandItemsString[] expand?;
    # Only return invoice items that were created during the given date interval.
    created_15 created?;
    # Set to `true` to only show pending invoice items, which are not yet attached to any invoices. Set to `false` to only show invoice items already attached to invoices. If unspecified, no filter is applied.
    boolean pending?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return invoice items belonging to this invoice. If none is provided, all invoice items will be returned. If specifying an invoice, no customer identifier is needed.
    @constraint:String {maxLength: 5000}
    string invoice?;
    # The identifier of the customer whose invoice items to return. If none is provided, all invoice items will be returned.
    @constraint:String {maxLength: 5000}
    string customer?;
};

public type intent_verify_microdeposits_body_1ExpandItemsString string;

public type decline_charge_on_specs record {
    boolean avs_failure?;
    boolean cvc_failure?;
};

# Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.
public type Radar_radar_options record {
    # A [Radar Session](https://stripe.com/docs/radar/radar-session) is a snapshot of the browser metadata and device details that help Radar make more accurate predictions on your payments.
    @constraint:String {maxLength: 5000}
    string session?;
};

public type payment_intents_intent_body record {|
    # Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    int|"" application_fee_amount?;
    # Controls when the funds will be captured from the customer's account.
    "automatic"|"automatic_async"|"manual" capture_method?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # ID of the Customer this PaymentIntent belongs to, if one exists.
    # 
    # Payment methods attached to other Customers cannot be used with this PaymentIntent.
    # 
    # If present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 1000}
    string description?;
    # Specifies which fields in the response should be expanded.
    payment_intents_intent_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # The ID of the payment method configuration to use with this PaymentIntent.
    @constraint:String {maxLength: 100}
    string payment_method_configuration?;
    payment_method_data_params payment_method_data?;
    payment_method_options_param_15 payment_method_options?;
    # The list of payment method types (for example, card) that this PaymentIntent can use. Use `automatic_payment_methods` to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).
    payment_intents_intent_bodyPaymentmethodtypesItemsString[] payment_method_types?;
    # Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).
    string|"" receipt_email?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    # 
    # If `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.
    ""|"off_session"|"on_session" setup_future_usage?;
    # Shipping information for this PaymentIntent.
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string carrier?; string name; string phone?; string tracking_number?;}|"" shipping?;
    # For card charges, use [statement_descriptor_suffix](https://stripe.com/docs/payments/account/statement-descriptors#dynamic). Otherwise, you can use this value as the complete description of a charge on your customers' statements. It must contain at least one letter and be 1–22 characters long.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_update_params transfer_data?;
    # A string that identifies the resulting payment as part of a group. You can only provide `transfer_group` if it hasn't been set. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    string transfer_group?;
|};

public type run_parameter_specsColumnsItemsString string;

public type refund_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    refund_cancel_bodyExpandItemsString[] expand?;
|};

public type prices_body record {|
    # Whether the price can be used for new purchases. Defaults to `true`.
    boolean active?;
    # Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.
    "per_unit"|"tiered" billing_scheme?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|currency_option_2...;|} currency_options?;
    custom_unit_amount_1 custom_unit_amount?;
    # Specifies which fields in the response should be expanded.
    prices_bodyExpandItemsString[] expand?;
    # A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.
    @constraint:String {maxLength: 200}
    string lookup_key?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # A brief description of the price, hidden from customers.
    @constraint:String {maxLength: 5000}
    string nickname?;
    # The ID of the product that this price will belong to.
    @constraint:String {maxLength: 5000}
    string product?;
    inline_product_params product_data?;
    recurring recurring?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    # Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    tier[] tiers?;
    # Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows.
    "graduated"|"volume" tiers_mode?;
    # If set to true, will atomically remove the lookup key from the existing price, and assign it to this price.
    boolean transfer_lookup_key?;
    transform_usage_param transform_quantity?;
    # A positive integer in cents (or local equivalent) (or 0 for a free price) representing how much to charge. One of `unit_amount`, `unit_amount_decimal`, or `custom_unit_amount` is required, unless `billing_scheme=tiered`.
    int unit_amount?;
    # Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.
    string unit_amount_decimal?;
|};

# 
public type TreasuryOutboundTransfersResourceOutboundTransferList record {
    # Details about each object.
    Treasury\.outbound_transfer[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type reader_present_payment_method_bodyExpandItemsString string;

public type customer_subscriptions_body record {|
    # A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.
    add_invoice_item_entry[] add_invoice_items?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
    decimal|"" application_fee_percent?;
    automatic_tax_config automatic_tax?;
    # For new subscriptions, a past timestamp to backdate the subscription's start date to. If set, the first invoice will contain a proration for the timespan between the start date and the current time. Can be combined with trials and the billing cycle anchor.
    int backdate_start_date?;
    # A future timestamp in UTC format to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). The anchor is the reference point that aligns future billing cycle dates. It sets the day of week for `week` intervals, the day of month for `month` and `year` intervals, and the month of year for `year` intervals.
    int billing_cycle_anchor?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.
    int cancel_at?;
    # Boolean indicating whether this subscription should cancel at the end of the current period.
    boolean cancel_at_period_end?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.
    int days_until_due?;
    # ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_source?;
    # The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    customer_subscriptions_bodyExpandItemsString[] expand?;
    invoice_settings_param invoice_settings?;
    # A list of up to 20 subscription items, each with an attached price.
    subscription_item_create_params[] items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted.
    boolean off_session?;
    # Only applies to subscriptions with `collection_method=charge_automatically`.
    # 
    # Use `allow_incomplete` to create Subscriptions with `status=incomplete` if the first invoice can't be paid. Creating Subscriptions with this status allows you to manage scenarios where additional customer actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    # 
    # Use `default_incomplete` to create Subscriptions with `status=incomplete` when the first invoice requires payment, otherwise start as active. Subscriptions transition to `status=active` when successfully confirming the PaymentIntent on the first invoice. This allows simpler management of scenarios where additional customer actions are needed to pay a subscription’s invoice, such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the PaymentIntent is not confirmed within 23 hours Subscriptions transition to `status=incomplete_expired`, which is a terminal state.
    # 
    # Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice can't be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further customer action is needed, this parameter doesn't create a Subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
    # 
    # `pending_if_incomplete` is only used with updates and cannot be passed when creating a Subscription.
    # 
    # Subscriptions with `collection_method=send_invoice` are automatically activated regardless of the first Invoice status.
    "allow_incomplete"|"default_incomplete"|"error_if_incomplete"|"pending_if_incomplete" payment_behavior?;
    payment_settings payment_settings?;
    # Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.
    record {"day"|"month"|"week"|"year" interval; int interval_count?;}|"" pending_invoice_item_interval?;
    # The ID of a promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) resulting from the `billing_cycle_anchor`. If no value is passed, the default is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    transfer_data_specs_3 transfer_data?;
    # Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    "now"|int trial_end?;
    # Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    boolean trial_from_plan?;
    # Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    int trial_period_days?;
    trial_settings_config_1 trial_settings?;
|};

public type account_reject_body record {|
    # Specifies which fields in the response should be expanded.
    account_reject_bodyExpandItemsString[] expand?;
    # The reason for rejecting the account. Can be `fraud`, `terms_of_service`, or `other`.
    @constraint:String {maxLength: 5000}
    string reason;
|};

public type transfers_bodyExpandItemsString string;

# 
public type Checkout_boleto_payment_method_options record {
    # The number of calendar days before a Boleto voucher expires. For example, if you create a Boleto voucher on Monday and you set expires_after_days to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo time.
    int expires_after_days;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

public type topups_topup_bodyExpandItemsString string;

# 
public type Invoice_transfer_data record {
    # The amount in cents (or local equivalent) that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.
    int? amount?;
    # The account where funds from the payment will be transferred to upon payment success.
    string|Account destination;
};

# Payment settings to pass to invoices created by the subscription.
public type payment_settings record {
    payment_method_options payment_method_options?;
    ("ach_credit_transfer"|"ach_debit"|"acss_debit"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"konbini"|"link"|"p24"|"paynow"|"paypal"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"us_bank_account"|"wechat_pay")[]|"" payment_method_types?;
    "off"|"on_subscription" save_default_payment_method?;
};

# Header data.
public type Forwarded_request_header record {
    # The header name.
    @constraint:String {maxLength: 5000}
    string name;
    # The header value.
    @constraint:String {maxLength: 5000}
    string value;
};

# 
public type Payment_method_card_wallet_google_pay record {
};

# 
public type Payment_links_resource_consent_collection record {
    # Settings related to the payment method reuse text shown in the Checkout UI.
    Payment_links_resource_payment_method_reuse_agreement? payment_method_reuse_agreement?;
    # If set to `auto`, enables the collection of customer consent for promotional communications.
    "auto"|"none"? promotions?;
    # If set to `required`, it requires cutomers to accept the terms of service before being able to pay. If set to `none`, customers won't be shown a checkbox to accept the terms of service.
    "none"|"required"? terms_of_service?;
};

public type data_params record {
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    string value;
};

# 
public type Treasury_received_debits_resource_linked_flows record {
    # The DebitReversal created as a result of this ReceivedDebit being reversed.
    string? debit_reversal?;
    # Set if the ReceivedDebit is associated with an InboundTransfer's return of funds.
    string? inbound_transfer?;
    # Set if the ReceivedDebit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.
    string? issuing_authorization?;
    # Set if the ReceivedDebit is also viewable as an [Issuing Dispute](https://stripe.com/docs/api#issuing_disputes) object.
    string? issuing_transaction?;
    # Set if the ReceivedDebit was created due to a [Payout](https://stripe.com/docs/api#payouts) object.
    string? payout?;
};

# This is an object representing a capability for a Stripe account.
# 
# Related guide: [Account capabilities](https://stripe.com/docs/connect/account-capabilities)
public type Capability record {
    # The account for which the capability enables functionality.
    string|Account account;
    Account_capability_future_requirements future_requirements?;
    # The identifier for the capability.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "capability" 'object;
    # Whether the capability has been requested.
    boolean requested;
    # Time at which the capability was requested. Measured in seconds since the Unix epoch.
    int? requested_at?;
    Account_capability_requirements requirements?;
    # The status of the capability. Can be `active`, `inactive`, `pending`, or `unrequested`.
    "active"|"disabled"|"inactive"|"pending"|"unrequested" status;
};

public type topup_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    topup_cancel_bodyExpandItemsString[] expand?;
|};

public type fleet_reported_breakdown_tax_specs record {
    string local_amount_decimal?;
    string national_amount_decimal?;
};

# Optional parameters for the receiver flow. Can be set only if the source is a receiver (`flow` is `receiver`).
public type receiver_params record {
    "email"|"manual"|"none" refund_attributes_method?;
};

public type MarketingfeaturesItemsObject record {
    string name;
};

# 
public type SecretServiceResourceSecretList record {
    Apps\.secret[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/apps/secrets`}
    string url;
};

public type person_additional_tos_acceptances_specs_1 record {
    settings_terms_of_service_specs account?;
};

# Represents the Queries record for the operation: GetTaxRegistrationsId
public type GetTaxRegistrationsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxRegistrationsIdQueriesExpandItemsString[] expand?;
};

# Pending Updates store the changes pending from a previous update that will be applied
# to the Subscription upon successful payment.
public type Subscriptions_resource_pending_update record {
    # If the update is applied, determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.
    int? billing_cycle_anchor?;
    # The point after which the changes reflected by this update will be discarded and no longer applied.
    int expires_at;
    # List of subscription items, each with an attached plan, that will be set if the update is applied.
    Subscription_item[]? subscription_items?;
    # Unix timestamp representing the end of the trial period the customer will get before being charged for the first time, if the update is applied.
    int? trial_end?;
    # Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    boolean? trial_from_plan?;
};

# 
public type Invoices_resource_line_items_credited_items record {
    # Invoice containing the credited invoice line items
    @constraint:String {maxLength: 5000}
    string invoice;
    # Credited invoice line items
    Invoices_resource_line_items_credited_itemsInvoicelineitemsItemsString[] invoice_line_items;
};

# 
public type Payment_links_resource_completion_behavior_confirmation_page record {
    # The custom message that is displayed to the customer after the purchase is complete.
    string? custom_message?;
};

# Represents the Queries record for the operation: GetTreasuryInboundTransfersId
public type GetTreasuryInboundTransfersIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryInboundTransfersIdQueriesExpandItemsString[] expand?;
};

# 
public type Account_branding_settings record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An icon for the account. Must be square and at least 128px x 128px.
    string|File? icon?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for the account that will be used in Checkout instead of the icon and without the account's name next to it if provided. Must be at least 128px x 128px.
    string|File? logo?;
    # A CSS hex color value representing the primary branding color for this account
    string? primary_color?;
    # A CSS hex color value representing the secondary branding color for this account
    string? secondary_color?;
};

public type charge_capture_body record {|
    # The amount to capture, which must be less than or equal to the original amount. Any additional amount will be automatically refunded.
    int amount?;
    # An application fee to add on to this charge.
    int application_fee?;
    # An application fee amount to add on to this charge, which must be less than or equal to the original amount.
    int application_fee_amount?;
    # Specifies which fields in the response should be expanded.
    charge_capture_bodyExpandItemsString[] expand?;
    # The email address to send this charge's receipt to. This will override the previously-specified email address for this charge, if one was set. Receipts will not be sent in test mode.
    string receipt_email?;
    # For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_specs_1 transfer_data?;
    # A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.
    string transfer_group?;
|};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerQueriesExpandItemsString string;

# 
public type Customer_balance_customer_balance_settings record {
    # The configuration for how funds that land in the customer cash balance are reconciled.
    "automatic"|"manual" reconciliation_mode;
    # A flag to indicate if reconciliation mode returned is the user's default or is specific to this customer cash balance
    boolean using_merchant_default;
};

@constraint:String {maxLength: 5000}
public type GetApplicationFeesQueriesExpandItemsString string;

public type bank_accounts_id_bodyExpandItemsString string;

public type subscriptions_subscription_exposed_id_body_3ExpandItemsString string;

# This is an object representing a person associated with a Stripe account.
# 
# A platform cannot access a person for an account where [account.controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `stripe`, which includes Standard and Express accounts, after creating an Account Link or Account Session to start Connect onboarding.
# 
# See the [Standard onboarding](/connect/standard-accounts) or [Express onboarding](/connect/express-accounts) documentation for information about prefilling information and account onboarding steps. Learn more about [handling identity verification with the API](/connect/handling-api-verification#person-information).
public type Person record {
    # The account the person is associated with.
    @constraint:String {maxLength: 5000}
    string account;
    Person_additional_tos_acceptances additional_tos_acceptances?;
    Address address?;
    Legal_entity_japan_address? address_kana?;
    Legal_entity_japan_address? address_kanji?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    Legal_entity_dob dob?;
    # The person's email address.
    string? email?;
    # The person's first name.
    string? first_name?;
    # The Kana variation of the person's first name (Japan only).
    string? first_name_kana?;
    # The Kanji variation of the person's first name (Japan only).
    string? first_name_kanji?;
    # A list of alternate names or aliases that the person is known by.
    PersonFullnamealiasesItemsString[] full_name_aliases?;
    Person_future_requirements? future_requirements?;
    # The person's gender (International regulations require either "male" or "female").
    string? gender?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Whether the person's `id_number` was provided. True if either the full ID number was provided or if only the required part of the ID number was provided (ex. last four of an individual's SSN for the US indicated by `ssn_last_4_provided`).
    boolean id_number_provided?;
    # Whether the person's `id_number_secondary` was provided.
    boolean id_number_secondary_provided?;
    # The person's last name.
    string? last_name?;
    # The Kana variation of the person's last name (Japan only).
    string? last_name_kana?;
    # The Kanji variation of the person's last name (Japan only).
    string? last_name_kanji?;
    # The person's maiden name.
    string? maiden_name?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata?;
    # The country where the person is a national.
    string? nationality?;
    # String representing the object's type. Objects of the same type share the same value.
    "person" 'object;
    # The person's phone number.
    string? phone?;
    # Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
    "existing"|"none" political_exposure?;
    Address registered_address?;
    Person_relationship relationship?;
    Person_requirements? requirements?;
    # Whether the last four digits of the person's Social Security number have been provided (U.S. only).
    boolean ssn_last_4_provided?;
    Legal_entity_person_verification verification?;
};

# 
public type Payment_method_paypal record {
    # Owner's email. Values are provided by PayPal directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? payer_email?;
    # PayPal account PayerID. This identifier uniquely identifies the PayPal customer.
    string? payer_id?;
};

# 
public type Outbound_payments_payment_method_details record {
    Treasury_shared_resource_billing_details billing_details;
    Outbound_payments_payment_method_details_financial_account financial_account?;
    # The type of the payment method used in the OutboundPayment.
    "financial_account"|"us_bank_account" 'type;
    Outbound_payments_payment_method_details_us_bank_account us_bank_account?;
};

# Represents the Queries record for the operation: GetExchangeRatesRateId
public type GetExchangeRatesRateIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetExchangeRatesRateIdQueriesExpandItemsString[] expand?;
};

# 
public type Quotes_resource_automatic_tax record {
    # Automatically calculate taxes
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
    # The status of the most recent automated tax calculation for this quote.
    "complete"|"failed"|"requires_location_inputs"? status?;
};

# 
public type IssuingTransactionList record {
    Issuing\.transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/transactions`}
    string url;
};

public type networks_update_api_param record {
    ""|"cartes_bancaires"|"mastercard"|"visa" preferred?;
};

public type calculation_line_item record {
    int amount;
    @constraint:String {maxLength: 5000}
    string product?;
    int quantity?;
    @constraint:String {maxLength: 500}
    string reference?;
    "exclusive"|"inclusive" tax_behavior?;
    string tax_code?;
};

# 
public type Payment_method_klarna record {
    # The customer's date of birth, if provided.
    Payment_flows_private_payment_methods_klarna_dob? dob?;
};

public type connect_js_account_token_company_specs record {
    legal_entity_and_kyc_address_specs address?;
    japan_address_kana_specs address_kana?;
    japan_address_kanji_specs address_kanji?;
    boolean directors_provided?;
    boolean executives_provided?;
    @constraint:String {maxLength: 5000}
    string export_license_id?;
    @constraint:String {maxLength: 5000}
    string export_purpose_code?;
    @constraint:String {maxLength: 100}
    string name?;
    @constraint:String {maxLength: 100}
    string name_kana?;
    @constraint:String {maxLength: 100}
    string name_kanji?;
    boolean owners_provided?;
    company_ownership_declaration ownership_declaration?;
    boolean ownership_declaration_shown_and_signed?;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string registration_number?;
    ""|"free_zone_establishment"|"free_zone_llc"|"government_instrumentality"|"governmental_unit"|"incorporated_non_profit"|"incorporated_partnership"|"limited_liability_partnership"|"llc"|"multi_member_llc"|"private_company"|"private_corporation"|"private_partnership"|"public_company"|"public_corporation"|"public_partnership"|"registered_charity"|"single_member_llc"|"sole_establishment"|"sole_proprietorship"|"tax_exempt_government_instrumentality"|"unincorporated_association"|"unincorporated_non_profit"|"unincorporated_partnership" structure?;
    @constraint:String {maxLength: 5000}
    string tax_id?;
    @constraint:String {maxLength: 5000}
    string tax_id_registrar?;
    @constraint:String {maxLength: 5000}
    string vat_id?;
    verification_specs verification?;
};

public type payment_method_domains_payment_method_domain_body record {|
    # Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.
    boolean enabled?;
    # Specifies which fields in the response should be expanded.
    payment_method_domains_payment_method_domain_bodyExpandItemsString[] expand?;
|};

# Represents the Queries record for the operation: GetCustomersCustomerCashBalanceTransactionsTransaction
public type GetCustomersCustomerCashBalanceTransactionsTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerCashBalanceTransactionsTransactionQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type Payment_intentPaymentmethodtypesItemsString string;

public type personalization_design_deactivate_bodyExpandItemsString string;

# 
public type Payment_intent_next_action_konbini_lawson record {
    # The confirmation number.
    @constraint:String {maxLength: 5000}
    string confirmation_number?;
    # The payment code.
    @constraint:String {maxLength: 5000}
    string payment_code;
};

# 
public type TransferList record {
    # Details about each object.
    Transfer[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/transfers`}
    string url;
};

# 
public type Inbound_transfers record {
    Treasury_shared_resource_billing_details billing_details;
    # The type of the payment method used in the InboundTransfer.
    "us_bank_account" 'type;
    Inbound_transfers_payment_method_details_us_bank_account us_bank_account?;
};

public type terminal_connection_tokens_bodyExpandItemsString string;

public type person_verification_document_param record {
    @constraint:String {maxLength: 5000}
    string back?;
    @constraint:String {maxLength: 5000}
    string front?;
};

public type id_deactivate_bodyExpandItemsString string;

public type outbound_transfer_post_body record {|
    # Specifies which fields in the response should be expanded.
    outbound_transfer_post_bodyExpandItemsString[] expand?;
|};

public type networks_options_param record {
    ("ach"|"us_domestic_wire")[] requested?;
};

# Represents the Queries record for the operation: GetChargesChargeRefundsRefund
public type GetChargesChargeRefundsRefundQueries record {
    # Specifies which fields in the response should be expanded.
    GetChargesChargeRefundsRefundQueriesExpandItemsString[] expand?;
};

public type Source_type_p24 record {
    string? reference?;
};

public type merchant_postal_address record {
    string|"" city?;
    @constraint:String {maxLength: 5000}
    string country;
    string|"" line1?;
    string|"" line2?;
    string|"" postal_code?;
    string|"" state?;
};

# 
public type Account_bacs_debit_payments_settings record {
    # The Bacs Direct Debit display name for this account. For payments made with Bacs Direct Debit, this name appears on the mandate as the statement descriptor. Mobile banking apps display it as the name of the business. To use custom branding, set the Bacs Direct Debit Display Name during or right after creation. Custom branding incurs an additional monthly fee for the platform. The fee appears 5 business days after requesting Bacs. If you don't set the display name before requesting Bacs capability, it's automatically set as "Stripe" and the account is onboarded to Stripe branding, which is free.
    string? display_name?;
    # The Bacs Direct Debit Service user number for this account. For payments made with Bacs Direct Debit, this number is a unique identifier of the account with our banking partners.
    string? service_user_number?;
};

# 
public type Payment_method_options_revolut_pay record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# 
public type CustomerBalanceTransactionList record {
    # Details about each object.
    Customer_balance_transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Checkout_link_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

public type created_param record {
    int gt?;
    int gte?;
    int lt?;
    int lte?;
};

# 
public type Issuing_authorization_fleet_non_fuel_price_data record {
    # Gross non-fuel amount that should equal the sum of the line items, inclusive of taxes.
    string? gross_amount_decimal?;
};

# 
public type Api_errors record {
    # For card errors, the ID of the failed charge.
    @constraint:String {maxLength: 5000}
    string charge?;
    # For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.
    @constraint:String {maxLength: 5000}
    string code?;
    # For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.
    @constraint:String {maxLength: 5000}
    string decline_code?;
    # A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.
    @constraint:String {maxLength: 5000}
    string doc_url?;
    # A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.
    @constraint:String {maxLength: 40000}
    string message?;
    # If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.
    @constraint:String {maxLength: 5000}
    string param?;
    Payment_intent payment_intent?;
    Payment_method payment_method?;
    # If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors.
    @constraint:String {maxLength: 5000}
    string payment_method_type?;
    # A URL to the request log entry in your dashboard.
    @constraint:String {maxLength: 5000}
    string request_log_url?;
    Setup_intent setup_intent?;
    # The [source object](https://stripe.com/docs/api/sources/object) for errors returned on a request involving a source.
    Bank_account|Card|Source 'source?;
    # The type of error returned. One of `api_error`, `card_error`, `idempotency_error`, or `invalid_request_error`
    "api_error"|"card_error"|"idempotency_error"|"invalid_request_error" 'type;
};

# Represents the Queries record for the operation: GetBalanceTransactions
public type GetBalanceTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetBalanceTransactionsQueriesExpandItemsString[] expand?;
    # Only return transactions that were created during the given date interval.
    created_3 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID.
    @constraint:String {maxLength: 5000}
    string payout?;
    # Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only returns the original transaction.
    @constraint:String {maxLength: 5000}
    string 'source?;
    # Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`, `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`.
    @constraint:String {maxLength: 5000}
    string 'type?;
};

public type setup_intents_intent_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPayoutsQueriesExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_au_becs_debit record {
};

@constraint:String {maxLength: 5000}
public type CustomerPreferredlocalesItemsString string;

@constraint:String {maxLength: 5000}
public type Portal_subscription_update_productPricesItemsString string;

# 
public type Tax_product_resource_tax_breakdown record {
    # The amount of tax, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Specifies whether the tax amount is included in the line item amount.
    boolean inclusive;
    Tax_product_resource_tax_rate_details tax_rate_details;
    # The reasoning behind this tax, for example, if the product is tax exempt. We might extend the possible values for this field to support new tax rules.
    "customer_exempt"|"not_collecting"|"not_subject_to_tax"|"not_supported"|"portion_product_exempt"|"portion_reduced_rated"|"portion_standard_rated"|"product_exempt"|"product_exempt_holiday"|"proportionally_rated"|"reduced_rated"|"reverse_charge"|"standard_rated"|"taxable_basis_reduced"|"zero_rated" taxability_reason;
    # The amount on which tax is calculated, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int taxable_amount;
};

public type Payment_pages_checkout_session_invoice_settingsAccounttaxidsItemsnull string|Tax_id|Deleted_tax_id;

# If this is a `card` PaymentMethod, this hash contains the user's card details.
public type update_api_param record {
    int exp_month?;
    int exp_year?;
    networks_update_api_param networks?;
};

@constraint:String {maxLength: 5000}
public type GetIdentityVerificationReportsReportQueriesExpandItemsString string;

public type id_reversals_bodyExpandItemsString string;

# 
public type Payment_method_revolut_pay record {
};

# 
public type Treasury_received_credits_resource_linked_flows record {
    # The CreditReversal created as a result of this ReceivedCredit being reversed.
    string? credit_reversal?;
    # Set if the ReceivedCredit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.
    string? issuing_authorization?;
    # Set if the ReceivedCredit is also viewable as an [Issuing transaction](https://stripe.com/docs/api#issuing_transactions) object.
    string? issuing_transaction?;
    # ID of the source flow. Set if `network` is `stripe` and the source flow is visible to the user. Examples of source flows include OutboundPayments, payouts, or CreditReversals.
    string? source_flow?;
    # The expandable object of the source flow.
    Treasury_received_credits_resource_source_flows_details? source_flow_details?;
    # The type of flow that originated the ReceivedCredit (for example, `outbound_payment`).
    string? source_flow_type?;
};

public type Tax\.calculation_line_item record {
    int amount;
    int amount_tax;
    string id;
    boolean livemode;
    "tax.calculation_line_item" 'object;
    string? product?;
    int quantity;
    string? reference?;
    "exclusive"|"inclusive" tax_behavior;
    Tax_product_resource_line_item_tax_breakdown[]? tax_breakdown?;
    string tax_code;
};

@constraint:String {maxLength: 5000}
public type Account_future_requirementsPastdueItemsString string;

public type invoiceitems_bodyExpandItemsString string;

public type controller_dashboard_specs record {
    "express"|"full"|"none" 'type?;
};

public type Deleted_terminal\.reader record {
    true deleted;
    string id;
    "terminal.reader" 'object;
};

# 
public type Payment_method_blik record {
};

# Information on whether this personalization design is used to create cards when one is not specified.
public type preferences_param record {
    boolean is_default;
};

# 
public type Deleted_apple_pay_domain record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "apple_pay_domain" 'object;
};

# When you enable this parameter, this PaymentIntent accepts payment methods that you enable in the Dashboard and that are compatible with this PaymentIntent's other parameters.
public type automatic_payment_methods_param record {
    "always"|"never" allow_redirects?;
    boolean enabled;
};

@constraint:String {maxLength: 5000}
public type Person_future_requirementsEventuallydueItemsString string;

# Indicates the status of a specific payment method on a payment method domain.
public type Payment_method_domain_resource_payment_method_status record {
    # The status of the payment method on the domain.
    "active"|"inactive" status;
    Payment_method_domain_resource_payment_method_status_details status_details?;
};

# 
public type Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_extended_authorization_extended_authorization record {
    # Indicates whether or not the capture window is extended beyond the standard authorization.
    "disabled"|"enabled" status;
};

# 
public type Invoice_payment_method_options_bancontact record {
    # Preferred language of the Bancontact authorization page that the customer is redirected to.
    "de"|"en"|"fr"|"nl" preferred_language;
};

@constraint:String {maxLength: 5000}
public type GetClimateOrdersQueriesExpandItemsString string;

# 
public type Payment_links_resource_subscription_data_invoice_settings record {
    Connect_account_reference issuer;
};

# 
public type Payment_method_details_promptpay record {
    # Bill reference generated by PromptPay
    string? reference?;
};

public type tokens_token_body record {|
    # Specifies which fields in the response should be expanded.
    tokens_token_bodyExpandItemsString[] expand?;
    # Specifies which status the token should be updated to.
    "active"|"deleted"|"suspended" status;
|};

public type invoice_mark_uncollectible_bodyExpandItemsString string;

# 
public type Customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction record {
    # The [Payment Intent](https://stripe.com/docs/api/payment_intents/object) that funds were unapplied from.
    string|Payment_intent payment_intent;
};

# 
public type Issuing_dispute_canceled_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Date when order was canceled.
    int? canceled_at?;
    # Whether the cardholder was provided with a cancellation policy.
    boolean? cancellation_policy_provided?;
    # Reason for canceling the order.
    string? cancellation_reason?;
    # Date when the cardholder expected to receive the product.
    int? expected_at?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
    # Description of the merchandise or service that was purchased.
    string? product_description?;
    # Whether the product was a merchandise or service.
    "merchandise"|"service"? product_type?;
    # Result of cardholder's attempt to return the product.
    "merchant_rejected"|"successful"? return_status?;
    # Date when the product was returned or attempted to be returned.
    int? returned_at?;
};

# Some payment methods have no required amount that a customer must send.
# Customers can be instructed to send any amount, and it can be made up of
# multiple transactions. As such, sources can have multiple associated
# transactions.
public type Source_transaction record {
    Source_transaction_ach_credit_transfer_data ach_credit_transfer?;
    # A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the amount your customer has pushed to the receiver.
    int amount;
    Source_transaction_chf_credit_transfer_data chf_credit_transfer?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    Source_transaction_gbp_credit_transfer_data gbp_credit_transfer?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "source_transaction" 'object;
    Source_transaction_paper_check_data paper_check?;
    Source_transaction_sepa_credit_transfer_data sepa_credit_transfer?;
    # The ID of the source this transaction is attached to.
    @constraint:String {maxLength: 5000}
    string 'source;
    # The status of the transaction, one of `succeeded`, `pending`, or `failed`.
    @constraint:String {maxLength: 5000}
    string status;
    # The type of source this transaction is attached to.
    "ach_credit_transfer"|"ach_debit"|"alipay"|"bancontact"|"card"|"card_present"|"eps"|"giropay"|"ideal"|"klarna"|"multibanco"|"p24"|"sepa_debit"|"sofort"|"three_d_secure"|"wechat" 'type;
};

# 
public type Mandate_acss_debit record {
    # List of Stripe products where this mandate can be selected automatically.
    ("invoice"|"subscription")[] default_for?;
    # Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.
    string? interval_description?;
    # Payment schedule for the mandate.
    "combined"|"interval"|"sporadic" payment_schedule;
    # Transaction type of the mandate.
    "business"|"personal" transaction_type;
};

@constraint:String {maxLength: 5000}
public type GetCustomersSearchQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Person_requirementsEventuallydueItemsString string;

public type link_account_sessions_bodyExpandItemsString string;

# 
public type Account_payout_settings record {
    # A Boolean indicating if Stripe should try to reclaim negative balances from an attached bank account. See [Understanding Connect account balances](/connect/account-balances) for details. The default value is `false` when [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, otherwise `true`.
    boolean debit_negative_balances;
    Transfer_schedule schedule;
    # The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.
    string? statement_descriptor?;
};

# 
public type Payment_method_details_card_installments record {
    # Installment plan selected for the payment.
    Payment_method_details_card_installments_plan? plan?;
};

# 
public type Payment_links_resource_custom_text record {
    # Custom text that should be displayed after the payment confirmation button.
    Payment_links_resource_custom_text_position? after_submit?;
    # Custom text that should be displayed alongside shipping address collection.
    Payment_links_resource_custom_text_position? shipping_address?;
    # Custom text that should be displayed alongside the payment confirmation button.
    Payment_links_resource_custom_text_position? submit?;
    # Custom text that should be displayed in place of the default terms of service agreement text.
    Payment_links_resource_custom_text_position? terms_of_service_acceptance?;
};

# 
public type Source_mandate_notification_bacs_debit_data record {
    # Last 4 digits of the account number associated with the debit.
    @constraint:String {maxLength: 5000}
    string last4?;
};

public type account_disconnect_bodyExpandItemsString string;

# 
public type Shipping_rate_currency_option record {
    # A non-negative integer in cents representing how much to charge.
    int amount;
    # Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    "exclusive"|"inclusive"|"unspecified" tax_behavior;
};

public type payout_cancel_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetEvents
public type GetEventsQueries record {
    # Filter events by whether all webhooks were successfully delivered. If false, events which are still pending or have failed all delivery attempts to a webhook endpoint will be returned.
    boolean delivery_success?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetEventsQueriesExpandItemsString[] expand?;
    # An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either `type` or `types`, but not both.
    GetEventsQueriesTypesItemsString[] types?;
    # Only return events that were created during the given date interval.
    created_10 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # A string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property.
    @constraint:String {maxLength: 5000}
    string 'type?;
};

# 
public type Deleted_coupon record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "coupon" 'object;
};

# 
public type Gelato_verified_outputs record {
    # The user's verified address.
    Address? address?;
    # The user’s verified date of birth.
    Gelato_data_verified_outputs_date? dob?;
    # The user's verified email address
    string? email?;
    # The user's verified first name.
    string? first_name?;
    # The user's verified id number.
    string? id_number?;
    # The user's verified id number type.
    "br_cpf"|"sg_nric"|"us_ssn"? id_number_type?;
    # The user's verified last name.
    string? last_name?;
    # The user's verified phone number
    string? phone?;
};

# 
public type Payment_method_details_grabpay record {
    # Unique transaction id generated by GrabPay
    string? transaction_id?;
};

public type accounts_account_body record {|
    # An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.
    @constraint:String {maxLength: 5000}
    string account_token?;
    business_profile_specs business_profile?;
    # The business type. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    "company"|"government_entity"|"individual"|"non_profit" business_type?;
    capabilities_param capabilities?;
    company_specs company?;
    # Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://docs.stripe.com/payouts).
    string default_currency?;
    documents_specs documents?;
    # The email address of the account holder. This is only to make the account easier to identify to you. If [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, Stripe doesn't email the account without your consent.
    string email?;
    # Specifies which fields in the response should be expanded.
    accounts_account_bodyExpandItemsString[] expand?;
    # A card or bank account to attach to the account for receiving [payouts](/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](/js), or a dictionary, as documented in the `external_account` parameter for [bank account](/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](/api#account_create_bank_account) or [card creation](/api#account_create_card) APIs. After you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    @constraint:String {maxLength: 5000}
    string external_account?;
    individual_specs individual?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    settings_specs_update settings?;
    tos_acceptance_specs tos_acceptance?;
|};

# Represents the Queries record for the operation: GetTreasuryTransactionsId
public type GetTreasuryTransactionsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryTransactionsIdQueriesExpandItemsString[] expand?;
};

public type postal_address record {
    string|"" city?;
    @constraint:String {maxLength: 5000}
    string country;
    string|"" line1?;
    string|"" line2?;
    string|"" postal_code?;
    string|"" state?;
};

# 
public type Invoice_tax_amount record {
    # The amount, in cents (or local equivalent), of the tax.
    int amount;
    # Whether this tax amount is inclusive or exclusive.
    boolean inclusive;
    # The tax rate that was applied to get this tax amount.
    string|Tax_rate tax_rate;
    # The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.
    "customer_exempt"|"not_collecting"|"not_subject_to_tax"|"not_supported"|"portion_product_exempt"|"portion_reduced_rated"|"portion_standard_rated"|"product_exempt"|"product_exempt_holiday"|"proportionally_rated"|"reduced_rated"|"reverse_charge"|"standard_rated"|"taxable_basis_reduced"|"zero_rated"? taxability_reason?;
    # The amount on which tax is calculated, in cents (or local equivalent).
    int? taxable_amount?;
};

# 
public type TaxProductResourceTaxTransactionLineItemList record {
    # Details about each object.
    Tax\.transaction_line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/tax/transactions/[^/]+/line_items`}
    string url;
};

# 
public type CountrySpecList record {
    Country_spec[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/country_specs`}
    string url;
};

# 
public type Payment_method_eps record {
    # The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.
    "arzte_und_apotheker_bank"|"austrian_anadi_bank_ag"|"bank_austria"|"bankhaus_carl_spangler"|"bankhaus_schelhammer_und_schattera_ag"|"bawag_psk_ag"|"bks_bank_ag"|"brull_kallmus_bank_ag"|"btv_vier_lander_bank"|"capital_bank_grawe_gruppe_ag"|"deutsche_bank_ag"|"dolomitenbank"|"easybank_ag"|"erste_bank_und_sparkassen"|"hypo_alpeadriabank_international_ag"|"hypo_bank_burgenland_aktiengesellschaft"|"hypo_noe_lb_fur_niederosterreich_u_wien"|"hypo_oberosterreich_salzburg_steiermark"|"hypo_tirol_bank_ag"|"hypo_vorarlberg_bank_ag"|"marchfelder_bank"|"oberbank_ag"|"raiffeisen_bankengruppe_osterreich"|"schoellerbank_ag"|"sparda_bank_wien"|"volksbank_gruppe"|"volkskreditbank_ag"|"vr_bank_braunau"? bank?;
};

# Represents the Queries record for the operation: GetAccountsAccount
public type GetAccountsAccountQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountQueriesExpandItemsString[] expand?;
};

public type customer_bank_accounts_bodyExpandItemsString string;

# Specifies which event to cancel.
public type event_adjustment_cancel_settings_param record {
    @constraint:String {maxLength: 100}
    string identifier?;
};

public type Issuing\.dispute record {
    int amount;
    Balance_transaction[]? balance_transactions?;
    int created;
    string currency;
    Issuing_dispute_evidence evidence;
    string id;
    boolean livemode;
    "cardholder_authentication_issuer_liability"|"eci5_token_transaction_with_tavv"|"excess_disputes_in_timeframe"|"has_not_met_the_minimum_dispute_amount_requirements"|"invalid_duplicate_dispute"|"invalid_incorrect_amount_dispute"|"invalid_no_authorization"|"invalid_use_of_disputes"|"merchandise_delivered_or_shipped"|"merchandise_or_service_as_described"|"not_cancelled"|"other"|"refund_issued"|"submitted_beyond_allowable_time_limit"|"transaction_3ds_required"|"transaction_approved_after_prior_fraud_dispute"|"transaction_authorized"|"transaction_electronically_read"|"transaction_qualifies_for_visa_easy_payment_service"|"transaction_unattended" loss_reason?;
    record {|string...;|} metadata;
    "issuing.dispute" 'object;
    "expired"|"lost"|"submitted"|"unsubmitted"|"won" status;
    string|Issuing\.transaction 'transaction;
    Issuing_dispute_treasury? treasury?;
};

public type financial_account_features_bodyExpandItemsString string;

public type customer_balance_transactions_bodyExpandItemsString string;

public type personalization_design_activate_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetSubscriptionItems
public type GetSubscriptionItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSubscriptionItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # The ID of the subscription whose items will be retrieved.
    @constraint:String {maxLength: 5000}
    string subscription;
};

# 
public type Issuing_personalization_design_carrier_text record {
    # The footer body text of the carrier letter.
    string? footer_body?;
    # The footer title text of the carrier letter.
    string? footer_title?;
    # The header body text of the carrier letter.
    string? header_body?;
    # The header title text of the carrier letter.
    string? header_title?;
};

# 
public type Payment_links_resource_shipping_option record {
    # A non-negative integer in cents representing how much to charge.
    int shipping_amount;
    # The ID of the Shipping Rate to use for this shipping option.
    string|Shipping_rate shipping_rate;
};

# Represents the Queries record for the operation: GetAccountsAccountCapabilities
public type GetAccountsAccountCapabilitiesQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountCapabilitiesQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetReportingReportTypesQueriesExpandItemsString string;

public type ProductsItemsObject record {
    ProductsItemsObjectPricesItemsString[] prices;
    string product;
};

public type schedule_cancel_bodyExpandItemsString string;

# This object represents files hosted on Stripe's servers. You can upload
# files with the [create file](https://stripe.com/docs/api#create_file) request
# (for example, when uploading dispute evidence). Stripe also
# creates files independently (for example, the results of a [Sigma scheduled
# query](#scheduled_queries)).
# 
# Related guide: [File upload guide](https://stripe.com/docs/file-upload)
public type File record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The file expires and isn't available at this time in epoch seconds.
    int? expires_at?;
    # The suitable name for saving the file to a filesystem.
    string? filename?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    FileResourceFileLinkList_1? links?;
    # String representing the object's type. Objects of the same type share the same value.
    "file" 'object;
    # The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.
    "account_requirement"|"additional_verification"|"business_icon"|"business_logo"|"customer_signature"|"dispute_evidence"|"document_provider_identity_document"|"finance_report_run"|"identity_document"|"identity_document_downloadable"|"pci_document"|"selfie"|"sigma_scheduled_query"|"tax_document_user_upload"|"terminal_reader_splashscreen" purpose;
    # The size of the file object in bytes.
    int size;
    # A suitable title for the document.
    string? title?;
    # The returned file type (for example, `csv`, `pdf`, `jpg`, or `png`).
    string? 'type?;
    # Use your live secret API key to download the file from this URL.
    string? url?;
};

public type reader_present_payment_method_body record {|
    # Simulated on-reader tip amount.
    int amount_tip?;
    card_present card_present?;
    # Specifies which fields in the response should be expanded.
    reader_present_payment_method_bodyExpandItemsString[] expand?;
    interac_present interac_present?;
    # Simulated payment type.
    "card_present"|"interac_present" 'type?;
|};

# This is an object representing your Stripe balance. You can retrieve it to see
# the balance currently on your Stripe account.
# 
# You can also retrieve the balance history, which contains a list of
# [transactions](https://stripe.com/docs/reporting/balance-transaction-types) that contributed to the balance
# (charges, payouts, and so forth).
# 
# The available and pending amounts for each currency are broken down further by
# payment source types.
# 
# Related guide: [Understanding Connect account balances](https://stripe.com/docs/connect/account-balances)
public type Balance record {
    # Available funds that you can transfer or pay out automatically by Stripe or explicitly through the [Transfers API](https://stripe.com/docs/api#transfers) or [Payouts API](https://stripe.com/docs/api#payouts). You can find the available balance for each currency and payment type in the `source_types` property.
    Balance_amount[] available;
    # Funds held due to negative balances on connected accounts where [account.controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts. You can find the connect reserve balance for each currency and payment type in the `source_types` property.
    Balance_amount[] connect_reserved?;
    # Funds that you can pay out using Instant Payouts.
    Balance_amount_net[] instant_available?;
    Balance_detail issuing?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "balance" 'object;
    # Funds that aren't available in the balance yet. You can find the pending balance for each currency and each payment type in the `source_types` property.
    Balance_amount[] pending;
};

# 
public type Legal_entity_company record {
    Address address?;
    # The Kana variation of the company's primary address (Japan only).
    Legal_entity_japan_address? address_kana?;
    # The Kanji variation of the company's primary address (Japan only).
    Legal_entity_japan_address? address_kanji?;
    # Whether the company's directors have been provided. This Boolean will be `true` if you've manually indicated that all directors are provided via [the `directors_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided).
    boolean directors_provided?;
    # Whether the company's executives have been provided. This Boolean will be `true` if you've manually indicated that all executives are provided via [the `executives_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-executives_provided), or if Stripe determined that sufficient executives were provided.
    boolean executives_provided?;
    # The export license ID number of the company, also referred as Import Export Code (India only).
    @constraint:String {maxLength: 5000}
    string export_license_id?;
    # The purpose code to use for export transactions (India only).
    @constraint:String {maxLength: 5000}
    string export_purpose_code?;
    # The company's legal name.
    string? name?;
    # The Kana variation of the company's legal name (Japan only).
    string? name_kana?;
    # The Kanji variation of the company's legal name (Japan only).
    string? name_kanji?;
    # Whether the company's owners have been provided. This Boolean will be `true` if you've manually indicated that all owners are provided via [the `owners_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided), or if Stripe determined that sufficient owners were provided. Stripe determines ownership requirements using both the number of owners provided and their total percent ownership (calculated by adding the `percent_ownership` of each owner together).
    boolean owners_provided?;
    # This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct.
    Legal_entity_ubo_declaration? ownership_declaration?;
    # The company's phone number (used for verification).
    string? phone?;
    # The category identifying the legal structure of the company or legal entity. See [Business structure](https://stripe.com/docs/connect/identity-verification#business-structure) for more details.
    "free_zone_establishment"|"free_zone_llc"|"government_instrumentality"|"governmental_unit"|"incorporated_non_profit"|"incorporated_partnership"|"limited_liability_partnership"|"llc"|"multi_member_llc"|"private_company"|"private_corporation"|"private_partnership"|"public_company"|"public_corporation"|"public_partnership"|"registered_charity"|"single_member_llc"|"sole_establishment"|"sole_proprietorship"|"tax_exempt_government_instrumentality"|"unincorporated_association"|"unincorporated_non_profit"|"unincorporated_partnership" structure?;
    # Whether the company's business ID number was provided.
    boolean tax_id_provided?;
    # The jurisdiction in which the `tax_id` is registered (Germany-based companies only).
    @constraint:String {maxLength: 5000}
    string tax_id_registrar?;
    # Whether the company's business VAT number was provided.
    boolean vat_id_provided?;
    # Information on the verification state of the company.
    Legal_entity_company_verification? verification?;
};

# 
public type Gelato_session_document_options record {
    # Array of strings of allowed identity document types. If the provided identity document isn’t one of the allowed types, the verification check will fail with a document_type_not_allowed error code.
    ("driving_license"|"id_card"|"passport")[] allowed_types?;
    # Collect an ID number and perform an [ID number check](https://stripe.com/docs/identity/verification-checks?type=id-number) with the document’s extracted name and date of birth.
    boolean require_id_number?;
    # Disable image uploads, identity document images have to be captured using the device’s camera.
    boolean require_live_capture?;
    # Capture a face image and perform a [selfie check](https://stripe.com/docs/identity/verification-checks?type=selfie) comparing a photo ID and a picture of your user’s face. [Learn more](https://stripe.com/docs/identity/selfie).
    boolean require_matching_selfie?;
};

public type setup_intents_intent_body record {|
    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.
    # 
    # It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    boolean attach_to_self?;
    # ID of the Customer this SetupIntent belongs to, if one exists.
    # 
    # If present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 1000}
    string description?;
    # Specifies which fields in the response should be expanded.
    setup_intents_intent_bodyExpandItemsString[] expand?;
    # Indicates the directions of money movement for which this payment method is intended to be used.
    # 
    # Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
    ("inbound"|"outbound")[] flow_directions?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # The ID of the payment method configuration to use with this SetupIntent.
    @constraint:String {maxLength: 100}
    string payment_method_configuration?;
    payment_method_data_params_1 payment_method_data?;
    payment_method_options_param_16 payment_method_options?;
    # The list of payment method types (for example, card) that this SetupIntent can set up. If you don't provide this array, it defaults to ["card"].
    setup_intents_intent_bodyPaymentmethodtypesItemsString[] payment_method_types?;
|};

public type customer_details_param_2 record {
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string phone?;}|"" shipping?;
    tax_param_1 tax?;
    ""|"exempt"|"none"|"reverse" tax_exempt?;
    data_params[] tax_ids?;
};

public type invoice_add_lines_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_add_lines_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" invoice_metadata?;
    # The line items to add.
    lines_data_param[] lines;
|};

public type customer_details_param_1 record {
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string phone?;}|"" shipping?;
    tax_param_1 tax?;
    ""|"exempt"|"none"|"reverse" tax_exempt?;
    data_params[] tax_ids?;
};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountExternalAccountsIdQueriesExpandItemsString string;

public type orders_order_bodyExpandItemsString string;

# 
public type Payment_method_us_bank_account_blocked record {
    # The ACH network code that resulted in this block.
    "R02"|"R03"|"R04"|"R05"|"R07"|"R08"|"R10"|"R11"|"R16"|"R20"|"R29"|"R31"? network_code?;
    # The reason why this PaymentMethod's fingerprint has been blocked
    "bank_account_closed"|"bank_account_frozen"|"bank_account_invalid_details"|"bank_account_restricted"|"bank_account_unusable"|"debit_not_authorized"? reason?;
};

public type id_void_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Account_capability_requirementsPastdueItemsString string;

public type subscription_resume_body record {|
    # Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time (in UTC). Setting the value to `unchanged` advances the subscription's billing cycle anchor to the period that surrounds the current time. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    "now"|"unchanged" billing_cycle_anchor?;
    # Specifies which fields in the response should be expanded.
    subscription_resume_bodyExpandItemsString[] expand?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    # If set, the proration will be calculated as though the subscription was resumed at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.
    int proration_date?;
|};

public type Identity\.verification_report record {
    string? client_reference_id?;
    int created;
    Gelato_document_report document?;
    Gelato_email_report email?;
    string id;
    Gelato_id_number_report id_number?;
    boolean livemode;
    "identity.verification_report" 'object;
    Gelato_verification_report_options options?;
    Gelato_phone_report phone?;
    Gelato_selfie_report selfie?;
    "document"|"id_number"|"verification_flow" 'type;
    string verification_flow?;
    string? verification_session?;
};

public type climate_orders_bodyExpandItemsString string;

# When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.
public type subscription_data_update_params record {
    subscription_data_invoice_settings_params invoice_settings?;
    record {|string...;|}|"" metadata?;
    record {record {"cancel"|"create_invoice"|"pause" missing_payment_method;} end_behavior;}|"" trial_settings?;
};

# 
public type Treasury_outbound_payments_resource_ach_tracking_details record {
    # ACH trace ID of the OutboundPayment for payments sent over the `ach` network.
    @constraint:String {maxLength: 5000}
    string trace_id;
};

# 
public type InvoicesResourceList record {
    Invoice[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/invoices`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetInvoicesUpcomingQueriesExpandItemsString string;

# 
public type Account_capabilities record {
    # The status of the Canadian pre-authorized debits payments capability of the account, or whether the account can directly process Canadian pre-authorized debits charges.
    "active"|"inactive"|"pending" acss_debit_payments?;
    # The status of the Affirm capability of the account, or whether the account can directly process Affirm charges.
    "active"|"inactive"|"pending" affirm_payments?;
    # The status of the Afterpay Clearpay capability of the account, or whether the account can directly process Afterpay Clearpay charges.
    "active"|"inactive"|"pending" afterpay_clearpay_payments?;
    # The status of the AmazonPay capability of the account, or whether the account can directly process AmazonPay payments.
    "active"|"inactive"|"pending" amazon_pay_payments?;
    # The status of the BECS Direct Debit (AU) payments capability of the account, or whether the account can directly process BECS Direct Debit (AU) charges.
    "active"|"inactive"|"pending" au_becs_debit_payments?;
    # The status of the Bacs Direct Debits payments capability of the account, or whether the account can directly process Bacs Direct Debits charges.
    "active"|"inactive"|"pending" bacs_debit_payments?;
    # The status of the Bancontact payments capability of the account, or whether the account can directly process Bancontact charges.
    "active"|"inactive"|"pending" bancontact_payments?;
    # The status of the customer_balance payments capability of the account, or whether the account can directly process customer_balance charges.
    "active"|"inactive"|"pending" bank_transfer_payments?;
    # The status of the blik payments capability of the account, or whether the account can directly process blik charges.
    "active"|"inactive"|"pending" blik_payments?;
    # The status of the boleto payments capability of the account, or whether the account can directly process boleto charges.
    "active"|"inactive"|"pending" boleto_payments?;
    # The status of the card issuing capability of the account, or whether you can use Issuing to distribute funds on cards
    "active"|"inactive"|"pending" card_issuing?;
    # The status of the card payments capability of the account, or whether the account can directly process credit and debit card charges.
    "active"|"inactive"|"pending" card_payments?;
    # The status of the Cartes Bancaires payments capability of the account, or whether the account can directly process Cartes Bancaires card charges in EUR currency.
    "active"|"inactive"|"pending" cartes_bancaires_payments?;
    # The status of the Cash App Pay capability of the account, or whether the account can directly process Cash App Pay payments.
    "active"|"inactive"|"pending" cashapp_payments?;
    # The status of the EPS payments capability of the account, or whether the account can directly process EPS charges.
    "active"|"inactive"|"pending" eps_payments?;
    # The status of the FPX payments capability of the account, or whether the account can directly process FPX charges.
    "active"|"inactive"|"pending" fpx_payments?;
    # The status of the GB customer_balance payments (GBP currency) capability of the account, or whether the account can directly process GB customer_balance charges.
    "active"|"inactive"|"pending" gb_bank_transfer_payments?;
    # The status of the giropay payments capability of the account, or whether the account can directly process giropay charges.
    "active"|"inactive"|"pending" giropay_payments?;
    # The status of the GrabPay payments capability of the account, or whether the account can directly process GrabPay charges.
    "active"|"inactive"|"pending" grabpay_payments?;
    # The status of the iDEAL payments capability of the account, or whether the account can directly process iDEAL charges.
    "active"|"inactive"|"pending" ideal_payments?;
    # The status of the india_international_payments capability of the account, or whether the account can process international charges (non INR) in India.
    "active"|"inactive"|"pending" india_international_payments?;
    # The status of the JCB payments capability of the account, or whether the account (Japan only) can directly process JCB credit card charges in JPY currency.
    "active"|"inactive"|"pending" jcb_payments?;
    # The status of the Japanese customer_balance payments (JPY currency) capability of the account, or whether the account can directly process Japanese customer_balance charges.
    "active"|"inactive"|"pending" jp_bank_transfer_payments?;
    # The status of the Klarna payments capability of the account, or whether the account can directly process Klarna charges.
    "active"|"inactive"|"pending" klarna_payments?;
    # The status of the konbini payments capability of the account, or whether the account can directly process konbini charges.
    "active"|"inactive"|"pending" konbini_payments?;
    # The status of the legacy payments capability of the account.
    "active"|"inactive"|"pending" legacy_payments?;
    # The status of the link_payments capability of the account, or whether the account can directly process Link charges.
    "active"|"inactive"|"pending" link_payments?;
    # The status of the MobilePay capability of the account, or whether the account can directly process MobilePay charges.
    "active"|"inactive"|"pending" mobilepay_payments?;
    # The status of the Multibanco payments capability of the account, or whether the account can directly process Multibanco charges.
    "active"|"inactive"|"pending" multibanco_payments?;
    # The status of the Mexican customer_balance payments (MXN currency) capability of the account, or whether the account can directly process Mexican customer_balance charges.
    "active"|"inactive"|"pending" mx_bank_transfer_payments?;
    # The status of the OXXO payments capability of the account, or whether the account can directly process OXXO charges.
    "active"|"inactive"|"pending" oxxo_payments?;
    # The status of the P24 payments capability of the account, or whether the account can directly process P24 charges.
    "active"|"inactive"|"pending" p24_payments?;
    # The status of the paynow payments capability of the account, or whether the account can directly process paynow charges.
    "active"|"inactive"|"pending" paynow_payments?;
    # The status of the promptpay payments capability of the account, or whether the account can directly process promptpay charges.
    "active"|"inactive"|"pending" promptpay_payments?;
    # The status of the RevolutPay capability of the account, or whether the account can directly process RevolutPay payments.
    "active"|"inactive"|"pending" revolut_pay_payments?;
    # The status of the SEPA customer_balance payments (EUR currency) capability of the account, or whether the account can directly process SEPA customer_balance charges.
    "active"|"inactive"|"pending" sepa_bank_transfer_payments?;
    # The status of the SEPA Direct Debits payments capability of the account, or whether the account can directly process SEPA Direct Debits charges.
    "active"|"inactive"|"pending" sepa_debit_payments?;
    # The status of the Sofort payments capability of the account, or whether the account can directly process Sofort charges.
    "active"|"inactive"|"pending" sofort_payments?;
    # The status of the Swish capability of the account, or whether the account can directly process Swish payments.
    "active"|"inactive"|"pending" swish_payments?;
    # The status of the tax reporting 1099-K (US) capability of the account.
    "active"|"inactive"|"pending" tax_reporting_us_1099_k?;
    # The status of the tax reporting 1099-MISC (US) capability of the account.
    "active"|"inactive"|"pending" tax_reporting_us_1099_misc?;
    # The status of the transfers capability of the account, or whether your platform can transfer funds to the account.
    "active"|"inactive"|"pending" transfers?;
    # The status of the banking capability, or whether the account can have bank accounts.
    "active"|"inactive"|"pending" treasury?;
    # The status of the TWINT capability of the account, or whether the account can directly process TWINT charges.
    "active"|"inactive"|"pending" twint_payments?;
    # The status of the US bank account ACH payments capability of the account, or whether the account can directly process US bank account charges.
    "active"|"inactive"|"pending" us_bank_account_ach_payments?;
    # The status of the US customer_balance payments (USD currency) capability of the account, or whether the account can directly process US customer_balance charges.
    "active"|"inactive"|"pending" us_bank_transfer_payments?;
    # The status of the Zip capability of the account, or whether the account can directly process Zip charges.
    "active"|"inactive"|"pending" zip_payments?;
};

public type payment_intents_bodyPaymentmethodtypesItemsString string;

# 
public type Invoice_line_item_period record {
    # The end of the period, which must be greater than or equal to the start. This value is inclusive.
    int end;
    # The start of the period. This value is inclusive.
    int 'start;
};

# 
public type Payment_intent_next_action_konbini_seicomart record {
    # The confirmation number.
    @constraint:String {maxLength: 5000}
    string confirmation_number?;
    # The payment code.
    @constraint:String {maxLength: 5000}
    string payment_code;
};

# Configure fields to gather active consent from customers.
public type consent_collection_params_1 record {
    payment_method_reuse_agreement_params payment_method_reuse_agreement?;
    "auto"|"none" promotions?;
    "none"|"required" terms_of_service?;
};

# 
public type Tax_product_registrations_resource_country_options_us_local_lease_tax record {
    # A [FIPS code](https://www.census.gov/library/reference/code-lists/ansi.html) representing the local jurisdiction.
    @constraint:String {maxLength: 5000}
    string jurisdiction;
};

# 
public type Payment_intent_next_action_paynow_display_qr_code record {
    # The raw data string used to generate QR code, it should be used together with QR code library.
    @constraint:String {maxLength: 5000}
    string data;
    # The URL to the hosted PayNow instructions page, which allows customers to view the PayNow QR code.
    string? hosted_instructions_url?;
    # The image_url_png string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_png;
    # The image_url_svg string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_svg;
};

public type line_item_params record {
    adjustable_quantity_params adjustable_quantity?;
    line_item_paramsDynamictaxratesItemsString[] dynamic_tax_rates?;
    @constraint:String {maxLength: 5000}
    string price?;
    price_data_with_product_data price_data?;
    int quantity?;
    line_item_paramsTaxratesItemsString[] tax_rates?;
};

@constraint:String {maxLength: 5000}
public type GetPaymentMethodsPaymentMethodQueriesExpandItemsString string;

# FinancialAddresses contain identifying information that resolves to a FinancialAccount.
public type Treasury_financial_accounts_resource_financial_address record {
    Treasury_financial_accounts_resource_aba_record aba?;
    # The list of networks that the address supports
    ("ach"|"us_domestic_wire")[] supported_networks?;
    # The type of financial address
    "aba" 'type;
};

public type due_date record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_intent_payment_method_options_sepa_debit record {
    Payment_intent_payment_method_options_mandate_options_sepa_debit mandate_options?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

public type id_refund_body record {|
    int amount?;
    @constraint:String {maxLength: 5000}
    string directive?;
    # Specifies which fields in the response should be expanded.
    id_refund_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_intent_payment_method_options_card record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Installment details for this payment (Mexico only).
    # 
    # For more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).
    Payment_method_options_card_installments? installments?;
    # Configuration options for setting up an eMandate for cards issued in India.
    Payment_method_options_card_mandate_options? mandate_options?;
    # Selected network to process this payment intent on. Depends on the available networks of the card attached to the payment intent. Can be only set confirm-time.
    "amex"|"cartes_bancaires"|"diners"|"discover"|"eftpos_au"|"interac"|"jcb"|"mastercard"|"unionpay"|"unknown"|"visa"? network?;
    # Request ability to [capture beyond the standard authorization validity window](https://stripe.com/docs/payments/extended-authorization) for this PaymentIntent.
    "if_available"|"never" request_extended_authorization?;
    # Request ability to [increment the authorization](https://stripe.com/docs/payments/incremental-authorization) for this PaymentIntent.
    "if_available"|"never" request_incremental_authorization?;
    # Request ability to make [multiple captures](https://stripe.com/docs/payments/multicapture) for this PaymentIntent.
    "if_available"|"never" request_multicapture?;
    # Request ability to [overcapture](https://stripe.com/docs/payments/overcapture) for this PaymentIntent.
    "if_available"|"never" request_overcapture?;
    # We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. If not provided, this value defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    "any"|"automatic"|"challenge"? request_three_d_secure?;
    # When enabled, using a card that is attached to a customer will require the CVC to be provided again (i.e. using the cvc_token parameter).
    boolean require_cvc_recollection?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the Kana prefix (shortened Kana descriptor) or Kana statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 22 characters.
    @constraint:String {maxLength: 5000}
    string statement_descriptor_suffix_kana?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the Kanji prefix (shortened Kanji descriptor) or Kanji statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 17 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 17 characters.
    @constraint:String {maxLength: 5000}
    string statement_descriptor_suffix_kanji?;
};

public type terminal_readers_body record {|
    # Specifies which fields in the response should be expanded.
    terminal_readers_bodyExpandItemsString[] expand?;
    # Custom label given to the reader for easier identification. If no label is specified, the registration code will be used.
    @constraint:String {maxLength: 5000}
    string label?;
    # The location to assign the reader to.
    @constraint:String {maxLength: 5000}
    string location?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # A code generated by the reader used for registering to an account.
    @constraint:String {maxLength: 5000}
    string registration_code;
|};

public type billing_meters_bodyExpandItemsString string;

# 
public type Connect_embedded_payments_features record {
    # Whether to allow capturing and cancelling payment intents. This is `true` by default.
    boolean capture_payments;
    # Whether to allow connected accounts to manage destination charges that are created on behalf of them. This is `false` by default.
    boolean destination_on_behalf_of_charge_management;
    # Whether to allow responding to disputes, including submitting evidence and accepting disputes. This is `true` by default.
    boolean dispute_management;
    # Whether to allow sending refunds. This is `true` by default.
    boolean refund_management;
};

# 
public type Payment_links_resource_payment_intent_data record {
    # Indicates when the funds will be captured from the customer's account.
    "automatic"|"automatic_async"|"manual"? capture_method?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will set metadata on [Payment Intents](https://stripe.com/docs/api/payment_intents) generated from this payment link.
    record {|string...;|} metadata;
    # Indicates that you intend to make future payments with the payment method collected during checkout.
    "off_session"|"on_session"? setup_future_usage?;
    # Extra information about the payment. This will appear on your customer's statement when this payment succeeds in creating a charge.
    string? statement_descriptor?;
    # Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that's set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    string? statement_descriptor_suffix?;
    # A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers) for details.
    string? transfer_group?;
};

public type application string|"";

# The business information shown to customers in the portal.
public type business_profile_update_param record {
    string|"" headline?;
    string|"" privacy_policy_url?;
    string|"" terms_of_service_url?;
};

# 
public type Gelato_phone_report_error record {
    # A short machine-readable string giving the reason for the verification failure.
    "phone_unverified_other"|"phone_verification_declined"? code?;
    # A human-readable message giving the reason for the failure. These messages can be shown to your users.
    string? reason?;
};

# Represents the Queries record for the operation: GetIssuingPersonalizationDesignsPersonalizationDesign
public type GetIssuingPersonalizationDesignsPersonalizationDesignQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingPersonalizationDesignsPersonalizationDesignQueriesExpandItemsString[] expand?;
};

public type financial_accounts_financial_account_body record {|
    # Specifies which fields in the response should be expanded.
    financial_accounts_financial_account_bodyExpandItemsString[] expand?;
    feature_access_1 features?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    platform_restrictions platform_restrictions?;
|};

public type id_deactivate_body record {|
    # Specifies which fields in the response should be expanded.
    id_deactivate_bodyExpandItemsString[] expand?;
|};

public type bank_transfer_param record {
    eu_bank_transfer_params eu_bank_transfer?;
    ("aba"|"iban"|"sepa"|"sort_code"|"spei"|"swift"|"zengin")[] requested_address_types?;
    "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer" 'type;
};

# Information about a specific flow for the customer to go through. See the [docs](https://stripe.com/docs/customer-management/portal-deep-links) to learn more about using customer portal deep links and flows.
public type flow_data_param record {
    flow_data_after_completion_param after_completion?;
    flow_data_subscription_cancel_param subscription_cancel?;
    flow_data_subscription_update_param subscription_update?;
    flow_data_subscription_update_confirm_param subscription_update_confirm?;
    "payment_method_update"|"subscription_cancel"|"subscription_update"|"subscription_update_confirm" 'type;
};

# 
public type Issuing_transaction_flight_data record {
    # The time that the flight departed.
    int? departure_at?;
    # The name of the passenger.
    string? passenger_name?;
    # Whether the ticket is refundable.
    boolean? refundable?;
    # The legs of the trip.
    Issuing_transaction_flight_data_leg[]? segments?;
    # The travel agency that issued the ticket.
    string? travel_agency?;
};

@constraint:String {maxLength: 5000}
public type GetTerminalReadersQueriesExpandItemsString string;

# 
public type TerminalReaderRetrieveReader record {
    # A list of readers
    Terminal\.reader[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetFinancialConnectionsSessionsSessionQueriesExpandItemsString string;

# 
public type Sepa_debit_generated_from record {
    # The ID of the Charge that generated this PaymentMethod, if any.
    string|Charge? charge?;
    # The ID of the SetupAttempt that generated this PaymentMethod, if any.
    string|Setup_attempt? setup_attempt?;
};

# Represents the Queries record for the operation: GetShippingRatesShippingRateToken
public type GetShippingRatesShippingRateTokenQueries record {
    # Specifies which fields in the response should be expanded.
    GetShippingRatesShippingRateTokenQueriesExpandItemsString[] expand?;
};

public type External_account Bank_account|Card;

# 
public type Payment_method_giropay record {
};

public type dispute_submit_bodyExpandItemsString string;

# The hosted login page for this configuration. Learn more about the portal login page in our [integration docs](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal#share).
public type login_page_create_param record {
    boolean enabled;
};

# Default invoice settings for this customer.
public type customer_param record {
    record {string name; string value;}[]|"" custom_fields?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    @constraint:String {maxLength: 5000}
    string footer?;
    record {""|"exclude_tax"|"include_inclusive_tax" amount_tax_display?;}|"" rendering_options?;
};

public type dispute_close_body record {|
    # Specifies which fields in the response should be expanded.
    dispute_close_bodyExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type GetTopupsQueriesExpandItemsString string;

# 
public type Payment_links_resource_custom_fields record {
    Payment_links_resource_custom_fields_dropdown dropdown?;
    # String of your choice that your integration can use to reconcile this field. Must be unique to this field, alphanumeric, and up to 200 characters.
    @constraint:String {maxLength: 5000}
    string 'key;
    Payment_links_resource_custom_fields_label label;
    Payment_links_resource_custom_fields_numeric numeric?;
    # Whether the customer is required to complete the field before completing the Checkout Session. Defaults to `false`.
    boolean optional;
    Payment_links_resource_custom_fields_text text?;
    # The type of the field.
    "dropdown"|"numeric"|"text" 'type;
};

# 
public type Payment_intent_processing record {
    Payment_intent_card_processing card?;
    # Type of the payment method for which payment is in `processing` state, one of `card`.
    "card" 'type;
};

public type intent_cancel_bodyExpandItemsString string;

# 
public type Checkout_pix_payment_method_options record {
    # The number of seconds after which Pix payment will expire.
    int? expires_after_seconds?;
};

# This hash contains the features the Payment Element supports.
public type Customer_session_resource_components_resource_payment_element_resource_features record {
    # A list of [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay) values that controls which saved payment methods the Payment Element displays by filtering to only show payment methods with an `allow_redisplay` value that is present in this list.
    # 
    # If not specified, defaults to ["always"]. In order to display all saved payment methods, specify ["always", "limited", "unspecified"].
    ("always"|"limited"|"unspecified")[] payment_method_allow_redisplay_filters;
    # Controls whether or not the Payment Element shows saved payment methods. This parameter defaults to `disabled`.
    "disabled"|"enabled" payment_method_redisplay;
    # Determines the max number of saved payment methods for the Payment Element to display. This parameter defaults to `10`.
    int? payment_method_redisplay_limit?;
    # Controls whether the Payment Element displays the option to remove a saved payment method. This parameter defaults to `disabled`.
    # 
    # Allowing buyers to remove their saved payment methods impacts subscriptions that depend on that payment method. Removing the payment method detaches the [`customer` object](https://docs.stripe.com/api/payment_methods/object#payment_method_object-customer) from that [PaymentMethod](https://docs.stripe.com/api/payment_methods).
    "disabled"|"enabled" payment_method_remove;
    # Controls whether the Payment Element displays a checkbox offering to save a new payment method. This parameter defaults to `disabled`.
    # 
    # If a customer checks the box, the [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay) value on the PaymentMethod is set to `'always'` at confirmation time. For PaymentIntents, the [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage) value is also set to the value defined in `payment_method_save_usage`.
    "disabled"|"enabled" payment_method_save;
    # When using PaymentIntents and the customer checks the save checkbox, this field determines the [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage) value used to confirm the PaymentIntent.
    # 
    # When using SetupIntents, directly configure the [`usage`](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-usage) value on SetupIntent creation.
    "off_session"|"on_session"? payment_method_save_usage?;
};

public type linked_account_options_filters_paramAccountsubcategoriesItemsString "checking"|"savings";

public type schedule_details_params_2 record {
    "cancel"|"release" end_behavior?;
    phase_configuration_params_2[] phases?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

public type entitlements_features_body record {|
    # Specifies which fields in the response should be expanded.
    entitlements_features_bodyExpandItemsString[] expand?;
    # A unique key you provide as your own system identifier. This may be up to 80 characters.
    @constraint:String {maxLength: 80}
    string lookup_key;
    # Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata?;
    # The feature's name, for your own purpose, not meant to be displayable to the customer.
    @constraint:String {maxLength: 80}
    string name;
|};

public type schedule_details_params_1 record {
    "cancel"|"release" end_behavior?;
    phase_configuration_params_1[] phases?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

# A Promotion Code represents a customer-redeemable code for a [coupon](https://stripe.com/docs/api#coupons). It can be used to
# create multiple codes for a single coupon.
public type Promotion_code record {
    # Whether the promotion code is currently active. A promotion code is only active if the coupon is also valid.
    boolean active;
    # The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.
    @constraint:String {maxLength: 5000}
    string code;
    Coupon coupon;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The customer that this promotion code can be used by.
    string|Customer|Deleted_customer? customer?;
    # Date at which the promotion code can no longer be redeemed.
    int? expires_at?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Maximum number of times this promotion code can be redeemed.
    int? max_redemptions?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "promotion_code" 'object;
    Promotion_codes_resource_restrictions restrictions;
    # Number of times this promotion code has been used.
    int times_redeemed;
};

@constraint:String {maxLength: 5000}
public type GetPaymentLinksQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetApplePayDomainsDomainQueriesExpandItemsString string;

public type test_helpers_test_clocks_body record {|
    # Specifies which fields in the response should be expanded.
    test_helpers_test_clocks_bodyExpandItemsString[] expand?;
    # The initial frozen time for this test clock.
    int frozen_time;
    # The name for this test clock.
    @constraint:String {maxLength: 300}
    string name?;
|};

@constraint:String {maxLength: 5000}
public type GetCountrySpecsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetFileLinksQueriesExpandItemsString string;

public type transfers_body record {|
    # A positive integer in cents (or local equivalent) representing how much to transfer.
    int amount?;
    # 3-letter [ISO code for currency](https://stripe.com/docs/payouts).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # The ID of a connected Stripe account. <a href="/docs/connect/separate-charges-and-transfers">See the Connect documentation</a> for details.
    string destination;
    # Specifies which fields in the response should be expanded.
    transfers_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # You can use this parameter to transfer funds from a charge before they are added to your available balance. A pending balance will transfer immediately but the funds will not become available until the original charge becomes available. [See the Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-availability) for details.
    string source_transaction?;
    # The source balance to use for this transfer. One of `bank_account`, `card`, or `fpx`. For most users, this will default to `card`.
    "bank_account"|"card"|"fpx" source_type?;
    # A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.
    string transfer_group?;
|};

@constraint:String {maxLength: 5000}
public type GetDisputesQueriesExpandItemsString string;

public type subscription_default_tax_rates_1 Subscriptiondefaulttaxrates1ItemsString[]|"";

# Represents the Queries record for the operation: GetInvoicesInvoiceLines
public type GetInvoicesInvoiceLinesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetInvoicesInvoiceLinesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# Refund objects allow you to refund a previously created charge that isn't
# refunded yet. Funds are refunded to the credit or debit card that's
# initially charged.
# 
# Related guide: [Refunds](https://stripe.com/docs/refunds)
public type Refund record {
    # Amount, in cents (or local equivalent).
    int amount;
    # Balance transaction that describes the impact on your account balance.
    string|Balance_transaction? balance_transaction?;
    # ID of the charge that's refunded.
    string|Charge? charge?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. You can use this for displaying to users (available on non-card refunds only).
    @constraint:String {maxLength: 5000}
    string description?;
    Refund_destination_details destination_details?;
    # After the refund fails, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
    string|Balance_transaction failure_balance_transaction?;
    # Provides the reason for the refund failure. Possible values are: `lost_or_stolen_card`, `expired_or_canceled_card`, `charge_for_pending_refund_disputed`, `insufficient_funds`, `declined`, `merchant_request`, or `unknown`.
    @constraint:String {maxLength: 5000}
    string failure_reason?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # For payment methods without native refund support (for example, Konbini, PromptPay), provide an email address for the customer to receive refund instructions.
    @constraint:String {maxLength: 5000}
    string instructions_email?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    Refund_next_action next_action?;
    # String representing the object's type. Objects of the same type share the same value.
    "refund" 'object;
    # ID of the PaymentIntent that's refunded.
    string|Payment_intent? payment_intent?;
    # Reason for the refund, which is either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).
    "duplicate"|"expired_uncaptured_charge"|"fraudulent"|"requested_by_customer"? reason?;
    # This is the transaction number that appears on email receipts sent for this refund.
    string? receipt_number?;
    # The transfer reversal that's associated with the refund. Only present if the charge came from another Stripe account.
    string|Transfer_reversal? source_transfer_reversal?;
    # Status of the refund. This can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Learn more about [failed refunds](https://stripe.com/docs/refunds#failed-refunds).
    string? status?;
    # This refers to the transfer reversal object if the accompanying transfer reverses. This is only applicable if the charge was created using the destination parameter.
    string|Transfer_reversal? transfer_reversal?;
};

# 
public type Gelato_document_report_error record {
    # A short machine-readable string giving the reason for the verification failure.
    "document_expired"|"document_type_not_supported"|"document_unverified_other"? code?;
    # A human-readable message giving the reason for the failure. These messages can be shown to your users.
    string? reason?;
};

public type Tax\.transaction record {
    int created;
    string currency;
    string? customer?;
    Tax_product_resource_customer_details customer_details;
    string id;
    TaxProductResourceTaxTransactionLineItemList_1? line_items?;
    boolean livemode;
    record {|string...;|}? metadata?;
    "tax.transaction" 'object;
    int posted_at;
    string reference;
    Tax_product_resource_tax_transaction_resource_reversal? reversal?;
    Tax_product_resource_ship_from_details? ship_from_details?;
    Tax_product_resource_tax_transaction_shipping_cost? shipping_cost?;
    int tax_date;
    "reversal"|"transaction" 'type;
};

# 
public type Payment_method_options_bacs_debit record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

public type coupons_coupon_body record {|
    # Coupons defined in each available currency option (only supported if the coupon is amount-based). Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|currency_option_1...;|} currency_options?;
    # Specifies which fields in the response should be expanded.
    coupons_coupon_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.
    @constraint:String {maxLength: 40}
    string name?;
|};

# 
public type Mandate_link record {
};

# 
public type Treasury_outbound_transfers_resource_status_transitions record {
    # Timestamp describing when an OutboundTransfer changed status to `canceled`
    int? canceled_at?;
    # Timestamp describing when an OutboundTransfer changed status to `failed`
    int? failed_at?;
    # Timestamp describing when an OutboundTransfer changed status to `posted`
    int? posted_at?;
    # Timestamp describing when an OutboundTransfer changed status to `returned`
    int? returned_at?;
};

# 
public type Payment_method_card_generated_card record {
    # The charge that created this object.
    string? charge?;
    # Transaction-specific details of the payment method used in the payment.
    Card_generated_from_payment_method_details? payment_method_details?;
    # The ID of the SetupAttempt that generated this PaymentMethod, if any.
    string|Setup_attempt? setup_attempt?;
};

# To top up your Stripe balance, you create a top-up object. You can retrieve
# individual top-ups, as well as list all top-ups. Top-ups are identified by a
# unique, random ID.
# 
# Related guide: [Topping up your platform account](https://stripe.com/docs/connect/top-ups)
public type Topup record {
    # Amount transferred.
    int amount;
    # ID of the balance transaction that describes the impact of this top-up on your account balance. May not be specified depending on status of top-up.
    string|Balance_transaction? balance_transaction?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @constraint:String {maxLength: 5000}
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Date the funds are expected to arrive in your Stripe account for payouts. This factors in delays like weekends or bank holidays. May not be specified depending on status of top-up.
    int? expected_availability_date?;
    # Error code explaining reason for top-up failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).
    string? failure_code?;
    # Message to user further explaining reason for top-up failure if available.
    string? failure_message?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "topup" 'object;
    # The source field is deprecated. It might not always be present in the API response.
    Source? 'source?;
    # Extra information about a top-up. This will appear on your source's bank statement. It must contain at least one letter.
    string? statement_descriptor?;
    # The status of the top-up is either `canceled`, `failed`, `pending`, `reversed`, or `succeeded`.
    "canceled"|"failed"|"pending"|"reversed"|"succeeded" status;
    # A string that identifies this top-up as part of a group.
    string? transfer_group?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingTransactionsTransactionQueriesExpandItemsString string;

# The address where the card will be shipped.
public type shipping_specs record {
    required_address address;
    address_validation_param address_validation?;
    customs_param customs?;
    @constraint:String {maxLength: 5000}
    string name;
    string phone_number?;
    boolean require_signature?;
    "express"|"priority"|"standard" 'service?;
    "bulk"|"individual" 'type?;
};

public type adjustable_quantity_params record {
    boolean enabled;
    int maximum?;
    int minimum?;
};

public type billing_meter_events_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryInboundTransfersIdQueriesExpandItemsString string;

# 
public type CouponsResourceCouponList record {
    Coupon[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/coupons`}
    string url;
};

# Details provided about the user being verified. These details may be shown to the user.
public type provided_details_param record {
    string email?;
    string phone?;
};

# 
public type Invoice_payment_method_options_sepa_debit record {
};

# Represents the Queries record for the operation: GetCustomersCustomerBankAccountsId
public type GetCustomersCustomerBankAccountsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerBankAccountsIdQueriesExpandItemsString[] expand?;
};

public type treasury_received_debits_body record {|
    # Amount (in cents) to be transferred.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    treasury_received_debits_bodyExpandItemsString[] expand?;
    # The FinancialAccount to pull funds from.
    string financial_account;
    source_params initiating_payment_method_details?;
    # Specifies the network rails to be used. If not set, will default to the PaymentMethod's preferred network. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.
    "ach" network;
|};

public type default record {
    "standard" 'type;
};

public type invoice_void_bodyExpandItemsString string;

# Updated shipping information for the card.
public type shipping_specs_1 record {
    required_address address;
    address_validation_param address_validation?;
    customs_param customs?;
    @constraint:String {maxLength: 5000}
    string name;
    string phone_number?;
    boolean require_signature?;
    "express"|"priority"|"standard" 'service?;
    "bulk"|"individual" 'type?;
};

# 
public type Legal_entity_ubo_declaration record {
    # The Unix timestamp marking when the beneficial owner attestation was made.
    int? date?;
    # The IP address from which the beneficial owner attestation was made.
    string? ip?;
    # The user-agent string from the browser where the beneficial owner attestation was made.
    string? user_agent?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryReceivedCreditsIdQueriesExpandItemsString string;

public type ephemeral_keys_key_body record {|
    # Specifies which fields in the response should be expanded.
    ephemeral_keys_key_bodyExpandItemsString[] expand?;
|};

# 
public type Issuing_card_apple_pay record {
    # Apple Pay Eligibility
    boolean eligible;
    # Reason the card is ineligible for Apple Pay
    "missing_agreement"|"missing_cardholder_contact"|"unsupported_region"? ineligible_reason?;
};

# 
public type Payment_method_details_card_present_offline record {
    # Time at which the payment was collected while offline
    int? stored_at?;
};

# 
public type ApmsSourcesSourceList record {
    # Details about each object.
    (Bank_account|Card|Source)[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Account_capability_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Date by which the fields in `currently_due` must be collected to keep the capability enabled for the account. These fields may disable the capability sooner if the next threshold is reached before they are collected.
    int? current_deadline?;
    # Fields that need to be collected to keep the capability enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the capability is disabled.
    Account_capability_requirementsCurrentlydueItemsString[] currently_due;
    # Description of why the capability is disabled. [Learn more about handling verification issues](https://stripe.com/docs/connect/handling-api-verification).
    "other"|"paused.inactivity"|"pending.onboarding"|"pending.review"|"platform_disabled"|"platform_paused"|"rejected.inactivity"|"rejected.other"|"rejected.unsupported_business"|"requirements.fields_needed"? disabled_reason?;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[] errors;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.
    Account_capability_requirementsEventuallydueItemsString[] eventually_due;
    # Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the capability on the account.
    Account_capability_requirementsPastdueItemsString[] past_due;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.
    Account_capability_requirementsPendingverificationItemsString[] pending_verification;
};

# Represents the Queries record for the operation: GetTokensToken
public type GetTokensTokenQueries record {
    # Specifies which fields in the response should be expanded.
    GetTokensTokenQueriesExpandItemsString[] expand?;
};

public type retention_param record {
    coupon_offer_param coupon_offer;
    "coupon_offer" 'type;
};

public type personalization_designs_personalization_design_bodyExpandItemsString string;

public type reporting_report_runs_bodyExpandItemsString string;

# 
public type Checkout_oxxo_payment_method_options record {
    # The number of calendar days before an OXXO invoice expires. For example, if you create an OXXO invoice on Monday and you set expires_after_days to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City time.
    int expires_after_days;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Represents the Queries record for the operation: GetCustomersCustomerCashBalance
public type GetCustomersCustomerCashBalanceQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerCashBalanceQueriesExpandItemsString[] expand?;
};

# Configuration for the components supported by this Customer Session.
public type Customer_session_resource_components record {
    Customer_session_resource_components_resource_buy_button buy_button;
    Customer_session_resource_components_resource_payment_element payment_element;
    Customer_session_resource_components_resource_pricing_table pricing_table;
};

# Represents the Queries record for the operation: GetReviewsReview
public type GetReviewsReviewQueries record {
    # Specifies which fields in the response should be expanded.
    GetReviewsReviewQueriesExpandItemsString[] expand?;
};

# Information about fuel that was purchased with this transaction.
public type fuel_specs record {
    @constraint:String {maxLength: 5000}
    string industry_product_code?;
    string quantity_decimal?;
    "diesel"|"other"|"unleaded_plus"|"unleaded_regular"|"unleaded_super" 'type?;
    "charging_minute"|"imperial_gallon"|"kilogram"|"kilowatt_hour"|"liter"|"other"|"pound"|"us_gallon" unit?;
    string unit_cost_decimal?;
};

# 
public type Payment_method_options_pix record {
    # The number of seconds (between 10 and 1209600) after which Pix payment will expire.
    int? expires_after_seconds?;
    # The timestamp at which the Pix expires.
    int? expires_at?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Gelato_id_number_report_error record {
    # A short machine-readable string giving the reason for the verification failure.
    "id_number_insufficient_document_data"|"id_number_mismatch"|"id_number_unverified_other"? code?;
    # A human-readable message giving the reason for the failure. These messages can be shown to your users.
    string? reason?;
};

@constraint:String {maxLength: 5000}
public type GetProductsSearchQueriesExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_klarna record {
};

public type custom_field_dropdown_param record {
    @constraint:String {maxLength: 100}
    string default_value?;
    custom_field_option_param[] options;
};

# 
public type Billing_meter_resource_customer_mapping_settings record {
    # The key in the meter event payload to use for mapping the event to a customer.
    @constraint:String {maxLength: 5000}
    string event_payload_key;
    # The method for mapping a meter event to a customer.
    "by_id" 'type;
};

public type configurations_configuration_body_1ExpandItemsString string;

# 
public type Legal_entity_dob record {
    # The day of birth, between 1 and 31.
    int? day?;
    # The month of birth, between 1 and 12.
    int? month?;
    # The four-digit year of birth.
    int? year?;
};

# 
public type Mandate_payment_method_details record {
    Mandate_acss_debit acss_debit?;
    Mandate_amazon_pay amazon_pay?;
    Mandate_au_becs_debit au_becs_debit?;
    Mandate_bacs_debit bacs_debit?;
    Card_mandate_payment_method_details card?;
    Mandate_cashapp cashapp?;
    Mandate_link link?;
    Mandate_paypal paypal?;
    Mandate_revolut_pay revolut_pay?;
    Mandate_sepa_debit sepa_debit?;
    # This mandate corresponds with a specific payment method type. The `payment_method_details` includes an additional hash with the same name and contains mandate information that's specific to that payment method.
    @constraint:String {maxLength: 5000}
    string 'type;
    Mandate_us_bank_account us_bank_account?;
};

@constraint:String {maxLength: 5000}
public type GetTransfersQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTerminalConfigurationsQueriesExpandItemsString string;

# 
public type Invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer record {
    # The desired country code of the bank account information. Permitted values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.
    "BE"|"DE"|"ES"|"FR"|"IE"|"NL" country;
};

public type transactions_create_reversal_body record {|
    # Specifies which fields in the response should be expanded.
    transactions_create_reversal_bodyExpandItemsString[] expand?;
    # A flat amount to reverse across the entire transaction, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) in negative. This value represents the total amount to refund from the transaction, including taxes.
    int flat_amount?;
    # The line item amounts to reverse.
    transaction_line_item_reversal[] line_items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # If `partial`, the provided line item or shipping cost amounts are reversed. If `full`, the original transaction is fully reversed.
    "full"|"partial" mode;
    # The ID of the Transaction to partially or fully reverse.
    @constraint:String {maxLength: 5000}
    string original_transaction;
    # A custom identifier for this reversal, such as `myOrder_123-refund_1`, which must be unique across all transactions. The reference helps identify this reversal transaction in exported [tax reports](https://stripe.com/docs/tax/reports).
    @constraint:String {maxLength: 500}
    string reference;
    transaction_shipping_cost_reversal shipping_cost?;
|};

# 
public type Setup_intent_payment_method_options_paypal record {
    # The PayPal Billing Agreement ID (BAID). This is an ID generated by PayPal which represents the mandate between the merchant and the customer.
    string? billing_agreement_id?;
};

# 
public type Outbound_transfers_payment_method_details_us_bank_account record {
    # Account holder type: individual or company.
    "company"|"individual"? account_holder_type?;
    # Account type: checkings or savings. Defaults to checking if omitted.
    "checking"|"savings"? account_type?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    string|Mandate mandate?;
    # The network rails used. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.
    "ach"|"us_domestic_wire" network;
    # Routing number of the bank account.
    string? routing_number?;
};

public type shipping_rates_shipping_rate_token_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPaymentMethodConfigurationsConfigurationQueriesExpandItemsString string;

public type id_refunds_body record {|
    # A positive integer, in _cents (or local equivalent)_, representing how much of this fee to refund. Can refund only up to the remaining unrefunded amount of the fee.
    int amount?;
    # Specifies which fields in the response should be expanded.
    id_refunds_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

# 
public type Issuing_dispute_fraudulent_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingPersonalizationDesignsQueriesExpandItemsString string;

public type customer_sources_body record {|
    # A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.
    @constraint:String {maxLength: 5000}
    string alipay_account?;
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; string country; string currency?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    # A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string cvc?; int exp_month; int exp_year; record {|string...;|} metadata?; string name?; string number; "card" 'object?;}|string card?;
    # Specifies which fields in the response should be expanded.
    customer_sources_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Please refer to full [documentation](https://stripe.com/docs/api) instead.
    @constraint:String {maxLength: 5000}
    string 'source?;
|};

# 
public type Setup_intent_payment_method_options_amazon_pay record {
};

@constraint:String {maxLength: 5000}
public type Invoices_resource_line_items_credited_itemsInvoicelineitemsItemsString string;

# 
public type TaxProductResourceTaxCodeList record {
    Tax_code[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Invoice_setting_custom_field record {
    # The name of the custom field.
    @constraint:String {maxLength: 5000}
    string name;
    # The value of the custom field.
    @constraint:String {maxLength: 5000}
    string value;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerCashBalanceQueriesExpandItemsString string;

public type subscription_schedules_schedule_body record {|
    default_settings_params default_settings?;
    # Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running. `cancel` will end the subscription schedule and cancel the underlying subscription.
    "cancel"|"none"|"release"|"renew" end_behavior?;
    # Specifies which fields in the response should be expanded.
    subscription_schedules_schedule_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # List representing phases of the subscription schedule. Each phase can be customized to have different durations, plans, and coupons. If there are multiple phases, the `end_date` of one phase will always equal the `start_date` of the next phase. Note that past phases can be omitted.
    phase_configuration_params_2[] phases?;
    # If the update changes the current phase, indicates whether the changes should be prorated. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
|};

@constraint:String {maxLength: 5000}
public type GetReportingReportTypesReportTypeQueriesExpandItemsString string;

# 
public type Payment_method_details_amazon_pay record {
};

# 
public type Checkout_revolut_pay_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingDisputesQueriesExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_link record {
};

public type features record {
    @constraint:String {maxLength: 5000}
    string name;
};

# Represents the Queries record for the operation: GetBalanceHistory
public type GetBalanceHistoryQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetBalanceHistoryQueriesExpandItemsString[] expand?;
    # Only return transactions that were created during the given date interval.
    created_2 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID.
    @constraint:String {maxLength: 5000}
    string payout?;
    # Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only returns the original transaction.
    @constraint:String {maxLength: 5000}
    string 'source?;
    # Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`, `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`.
    @constraint:String {maxLength: 5000}
    string 'type?;
};

# 
public type Payment_pages_checkout_session_phone_number_collection record {
    # Indicates whether phone number collection is enabled for the session
    boolean enabled;
};

# Revise an existing invoice. The new invoice will be created in `status=draft`. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions) for more details.
public type from_invoice record {
    "revision" action;
    @constraint:String {maxLength: 5000}
    string invoice;
};

# 
public type FinancialReportingFinanceReportRunList record {
    Reporting\.report_run[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/reporting/report_runs`}
    string url;
};

# Hash used to generate the PaymentMethod to be used for this OutboundPayment. Exclusive with `destination_payment_method`.
public type payment_method_data record {
    billing_details_inner_params billing_details?;
    string financial_account?;
    record {|string...;|} metadata?;
    "financial_account"|"us_bank_account" 'type;
    payment_method_param_1 us_bank_account?;
};

# 
public type Outbound_transfers_payment_method_details record {
    Treasury_shared_resource_billing_details billing_details;
    # The type of the payment method used in the OutboundTransfer.
    "us_bank_account" 'type;
    Outbound_transfers_payment_method_details_us_bank_account us_bank_account?;
};

# 
public type Payment_pages_checkout_session_custom_fields_dropdown record {
    # The value that will pre-fill on the payment page.
    string? default_value?;
    # The options available for the customer to select. Up to 200 options allowed.
    Payment_pages_checkout_session_custom_fields_option[] options;
    # The option selected by the customer. This will be the `value` for the option.
    string? value?;
};

public type order_item_specs record {
    int amount?;
    string currency?;
    @constraint:String {maxLength: 1000}
    string description?;
    @constraint:String {maxLength: 5000}
    string parent?;
    int quantity?;
    "discount"|"shipping"|"sku"|"tax" 'type?;
};

# Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.
public type automatic_tax_config record {
    boolean enabled;
    param liability?;
};

@constraint:String {maxLength: 5000}
public type GetBillingMetersQueriesExpandItemsString string;

public type financial_addresses record {
    aba_access aba?;
};

# 
public type Issuing_cardholder_id_document record {
    # The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.
    string|File? back?;
    # The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.
    string|File? front?;
};

public type shipping_ship_body record {|
    # Specifies which fields in the response should be expanded.
    shipping_ship_bodyExpandItemsString[] expand?;
|};

# 
public type Three_d_secure_details record {
    # For authenticated transactions: how the customer was authenticated by
    # the issuing bank.
    "challenge"|"frictionless"? authentication_flow?;
    # The Electronic Commerce Indicator (ECI). A protocol-level field
    # indicating what degree of authentication was performed.
    "01"|"02"|"05"|"06"|"07"? electronic_commerce_indicator?;
    # Indicates the outcome of 3D Secure authentication.
    "attempt_acknowledged"|"authenticated"|"exempted"|"failed"|"not_supported"|"processing_error"? result?;
    # Additional information about why 3D Secure succeeded or failed based
    # on the `result`.
    "abandoned"|"bypassed"|"canceled"|"card_not_enrolled"|"network_not_supported"|"protocol_error"|"rejected"? result_reason?;
    # The 3D Secure 1 XID or 3D Secure 2 Directory Server Transaction ID
    # (dsTransId) for this payment.
    string? transaction_id?;
    # The version of 3D Secure that was used.
    "1.0.2"|"2.1.0"|"2.2.0"? version?;
};

public type custom_field_dropdown_param_1 record {
    custom_field_option_param[] options;
};

# 
public type Coupon_currency_option record {
    # Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.
    int amount_off;
};

# Represents the Queries record for the operation: GetChargesSearch
public type GetChargesSearchQueries record {
    # Specifies which fields in the response should be expanded.
    GetChargesSearchQueriesExpandItemsString[] expand?;
    # The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for charges](https://stripe.com/docs/search#query-fields-for-charges).
    @constraint:String {maxLength: 5000}
    string query;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.
    @constraint:String {maxLength: 5000}
    string page?;
};

# A paginated list of owners for this account.
public type BankConnectionsResourceOwnerList_1 record {
    # Details about each object.
    Financial_connections\.account_owner[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Settings related to Financial Addresses features on a Financial Account
public type Treasury_financial_accounts_resource_financial_addresses_features record {
    Treasury_financial_accounts_resource_aba_toggle_settings aba?;
};

public type files_body record {|
    # Specifies which fields in the response should be expanded.
    files_bodyExpandItemsString[] expand?;
    # A file to upload. Make sure that the specifications follow RFC 2388, which defines file transfers for the `multipart/form-data` protocol.
    record {byte[] fileContent; string fileName;} file;
    file_link_creation_params file_link_data?;
    # The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.
    "account_requirement"|"additional_verification"|"business_icon"|"business_logo"|"customer_signature"|"dispute_evidence"|"identity_document"|"pci_document"|"tax_document_user_upload"|"terminal_reader_splashscreen" purpose;
|};

# 
public type Invoice_payment_method_options_us_bank_account record {
    Invoice_payment_method_options_us_bank_account_linked_account_options financial_connections?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

public type Terminal\.configuration record {
    Terminal_configuration_configuration_resource_device_type_specific_config bbpos_wisepos_e?;
    string id;
    boolean? is_account_default?;
    boolean livemode;
    string? name?;
    "terminal.configuration" 'object;
    Terminal_configuration_configuration_resource_offline_config offline?;
    Terminal_configuration_configuration_resource_reboot_window reboot_window?;
    Terminal_configuration_configuration_resource_device_type_specific_config stripe_s700?;
    Terminal_configuration_configuration_resource_tipping tipping?;
    Terminal_configuration_configuration_resource_device_type_specific_config verifone_p400?;
};

public type product_features_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetTreasuryFinancialAccountsFinancialAccount
public type GetTreasuryFinancialAccountsFinancialAccountQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryFinancialAccountsFinancialAccountQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetTerminalConfigurations
public type GetTerminalConfigurationsQueries record {
    # if present, only return the account default or non-default configurations.
    boolean is_account_default?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTerminalConfigurationsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type climate_orders_body record {|
    # Requested amount of carbon removal units. Either this or `metric_tons` must be specified.
    int amount?;
    beneficiary_params beneficiary?;
    # Request currency for the order as a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a supported [settlement currency for your account](https://stripe.com/docs/currencies). If omitted, the account's default currency will be used.
    @constraint:String {maxLength: 5000}
    string currency?;
    # Specifies which fields in the response should be expanded.
    climate_orders_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Requested number of tons for the order. Either this or `amount` must be specified.
    string metric_tons?;
    # Unique identifier of the Climate product.
    @constraint:String {maxLength: 5000}
    string product;
|};

# 
public type Payment_method_options_cashapp record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# 
public type Payment_intent_payment_method_options_swish record {
    # The order ID displayed in the Swish app after the payment is authorized.
    string? reference?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type Source_type_sepa_debit record {
    string? bank_code?;
    string? branch_code?;
    string? country?;
    string? fingerprint?;
    string? last4?;
    string? mandate_reference?;
    string? mandate_url?;
};

# Represents the Queries record for the operation: GetClimateSuppliersSupplier
public type GetClimateSuppliersSupplierQueries record {
    # Specifies which fields in the response should be expanded.
    GetClimateSuppliersSupplierQueriesExpandItemsString[] expand?;
};

public type payout_reverse_body record {|
    # Specifies which fields in the response should be expanded.
    payout_reverse_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

public type treasury_debit_reversals_body record {|
    # Specifies which fields in the response should be expanded.
    treasury_debit_reversals_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The ReceivedDebit to reverse.
    @constraint:String {maxLength: 5000}
    string received_debit;
|};

public type delivery_estimate_bound record {
    "business_day"|"day"|"hour"|"month"|"week" unit;
    int value;
};

public type authorization_capture_body record {|
    # The amount to capture from the authorization. If not provided, the full amount of the authorization will be captured. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int capture_amount?;
    # Whether to close the authorization after capture. Defaults to true. Set to false to enable multi-capture flows.
    boolean close_authorization?;
    # Specifies which fields in the response should be expanded.
    authorization_capture_bodyExpandItemsString[] expand?;
    purchase_details_specs purchase_details?;
|};

# Represents the Queries record for the operation: GetProductsId
public type GetProductsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetProductsIdQueriesExpandItemsString[] expand?;
};

# 
public type Customer_tax_location record {
    # The customer's country as identified by Stripe Tax.
    @constraint:String {maxLength: 5000}
    string country;
    # The data source used to infer the customer's location.
    "billing_address"|"ip_address"|"payment_method"|"shipping_destination" 'source;
    # The customer's state, county, province, or region as identified by Stripe Tax.
    string? state?;
};

public type financial_connectionsPermissionsItemsString "balances"|"ownership"|"payment_method"|"transactions";

# Represents the Queries record for the operation: GetCustomersCustomer
public type GetCustomersCustomerQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerQueriesExpandItemsString[] expand?;
};

# 
public type Payment_method_options_customer_balance record {
    Payment_method_options_customer_balance_bank_transfer bank_transfer?;
    # The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.
    "bank_transfer"? funding_type?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type invoice_finalize_bodyExpandItemsString string;

public type verification_specs record {
    verification_document_specs document?;
};

# 
public type Balance_net_available record {
    # Net balance amount, subtracting fees from platform-set pricing.
    int amount;
    # ID of the external account for this net balance (not expandable).
    @constraint:String {maxLength: 5000}
    string destination;
    Balance_amount_by_source_type source_types?;
};

# `Application Fee Refund` objects allow you to refund an application fee that
# has previously been created but not yet refunded. Funds will be refunded to
# the Stripe account from which the fee was originally collected.
# 
# Related guide: [Refunding application fees](https://stripe.com/docs/connect/destination-charges#refunding-app-fee)
public type Fee_refund record {
    # Amount, in cents (or local equivalent).
    int amount;
    # Balance transaction that describes the impact on your account balance.
    string|Balance_transaction? balance_transaction?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the application fee that was refunded.
    string|Application_fee fee;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "fee_refund" 'object;
};

public type prices_price_bodyExpandItemsString string;

# 
public type Issuing_authorization_fleet_fuel_price_data record {
    # Gross fuel amount that should equal Fuel Quantity multiplied by Fuel Unit Cost, inclusive of taxes.
    string? gross_amount_decimal?;
};

public type invoice_settings_params_1 record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    record {string name; string value;}[]|"" custom_fields?;
    @constraint:String {maxLength: 1500}
    string description?;
    @constraint:String {maxLength: 5000}
    string footer?;
    param_3 issuer?;
    record {|string...;|}|"" metadata?;
    record {""|"exclude_tax"|"include_inclusive_tax" amount_tax_display?;}|"" rendering_options?;
};

# Represents the Queries record for the operation: GetCustomersCustomerSubscriptions
public type GetCustomersCustomerSubscriptionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerSubscriptionsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Portal_features record {
    Portal_customer_update customer_update;
    Portal_invoice_list invoice_history;
    Portal_payment_method_update payment_method_update;
    Portal_subscription_cancel subscription_cancel;
    Portal_subscription_update subscription_update;
};

# 
public type Funding_instructions_bank_transfer record {
    # The country of the bank account to fund
    @constraint:String {maxLength: 5000}
    string country;
    # A list of financial addresses that can be used to fund a particular balance
    Funding_instructions_bank_transfer_financial_address[] financial_addresses;
    # The bank_transfer type
    "eu_bank_transfer"|"jp_bank_transfer" 'type;
};

public type link_account_sessions_body record {|
    accountholder_params_1 account_holder;
    # Specifies which fields in the response should be expanded.
    link_account_sessions_bodyExpandItemsString[] expand?;
    filters_params filters?;
    # List of data features that you would like to request access to.
    # 
    # Possible values are `balances`, `transactions`, `ownership`, and `payment_method`.
    (link_account_sessions_bodyPermissionsItemsString)[] permissions;
    # List of data features that you would like to retrieve upon account creation.
    ("balances"|"ownership"|"transactions")[] prefetch?;
    # For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.
    @constraint:String {maxLength: 5000}
    string return_url?;
|};

public type united_states record {
    local_amusement_tax local_amusement_tax?;
    local_lease_tax local_lease_tax?;
    @constraint:String {maxLength: 5000}
    string state;
    "local_amusement_tax"|"local_lease_tax"|"state_communications_tax"|"state_sales_tax" 'type;
};

# 
public type Account_card_issuing_settings record {
    Card_issuing_account_terms_of_service tos_acceptance?;
};

public type currency_option_2 record {
    custom_unit_amount custom_unit_amount?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    tier[] tiers?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type currency_option_3 record {
    int minimum_amount?;
};

# Fields that specify how to map a meter event to a customer.
public type customer_mapping_param record {
    @constraint:String {maxLength: 100}
    string event_payload_key;
    "by_id" 'type;
};

public type tipping_config record {
    int amount_eligible?;
};

public type currency_option_1 record {
    int amount_off;
};

public type tokens_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetIssuingCardholders
public type GetIssuingCardholdersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIssuingCardholdersQueriesExpandItemsString[] expand?;
    # Only return cardholders that were created during the given date interval.
    created_18 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return cardholders that have the given phone number.
    string phone_number?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return cardholders that have the given type. One of `individual` or `company`.
    "company"|"individual" 'type?;
    # Only return cardholders that have the given email address.
    string email?;
    # Only return cardholders that have the given status. One of `active`, `inactive`, or `blocked`.
    "active"|"blocked"|"inactive" status?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerPaymentMethodsPaymentMethodQueriesExpandItemsString string;

# A Mandate is a record of the permission that your customer gives you to debit their payment method.
public type Mandate record {
    Customer_acceptance customer_acceptance;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    Mandate_multi_use multi_use?;
    # String representing the object's type. Objects of the same type share the same value.
    "mandate" 'object;
    # The account (if any) that the mandate is intended for.
    @constraint:String {maxLength: 5000}
    string on_behalf_of?;
    # ID of the payment method associated with this mandate.
    string|Payment_method payment_method;
    Mandate_payment_method_details payment_method_details;
    Mandate_single_use single_use?;
    # The mandate status indicates whether or not you can use it to initiate a payment.
    "active"|"inactive"|"pending" status;
    # The type of the mandate.
    "multi_use"|"single_use" 'type;
};

public type session_cancel_bodyExpandItemsString string;

# If you have [scheduled a Sigma query](https://stripe.com/docs/sigma/scheduled-queries), you'll
# receive a `sigma.scheduled_query_run.created` webhook each time the query
# runs. The webhook contains a `ScheduledQueryRun` object, which you can use to
# retrieve the query results.
public type Scheduled_query_run record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # When the query was run, Sigma contained a snapshot of your Stripe data at this time.
    int data_load_time;
    Sigma_scheduled_query_run_error 'error?;
    # The file object representing the results of the query.
    File? file?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "scheduled_query_run" 'object;
    # Time at which the result expires and is no longer available for download.
    int result_available_until;
    # SQL for the query.
    @constraint:String {maxLength: 100000}
    string sql;
    # The query's execution status, which will be `completed` for successful runs, and `canceled`, `failed`, or `timed_out` otherwise.
    @constraint:String {maxLength: 5000}
    string status;
    # Title of the query.
    @constraint:String {maxLength: 5000}
    string title;
};

# End user details.
public type end_user_details_params record {
    string ip_address?;
    boolean present;
};

# A Quote is a way to model prices that you'd like to provide to a customer.
# Once accepted, it will automatically create an invoice, subscription or subscription schedule.
public type Quote record {
    # Total before any discounts or taxes are applied.
    int amount_subtotal;
    # Total after discounts and taxes are applied.
    int amount_total;
    # ID of the Connect Application that created the quote.
    string|Application|Deleted_application? application?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Only applicable if there are no line items with recurring prices on the quote.
    int? application_fee_amount?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. Only applicable if there are line items with recurring prices on the quote.
    decimal? application_fee_percent?;
    Quotes_resource_automatic_tax automatic_tax;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or on finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method;
    Quotes_resource_computed computed;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string? currency?;
    # The customer which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.
    string|Customer|Deleted_customer? customer?;
    # The tax rates applied to this quote.
    (string|Tax_rate)[] default_tax_rates?;
    # A description that will be displayed on the quote PDF.
    string? description?;
    # The discounts applied to this quote.
    (string|Discount)[] discounts;
    # The date on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.
    int expires_at;
    # A footer that will be displayed on the quote PDF.
    string? footer?;
    # Details of the quote that was cloned. See the [cloning documentation](https://stripe.com/docs/quotes/clone) for more details.
    Quotes_resource_from_quote? from_quote?;
    # A header that will be displayed on the quote PDF.
    string? header?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The invoice that was created from this quote.
    string|Invoice|Deleted_invoice? invoice?;
    Invoice_setting_quote_setting invoice_settings;
    QuotesResourceListLineItems_1 line_items?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # A unique number that identifies this particular quote. This number is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).
    string? number?;
    # String representing the object's type. Objects of the same type share the same value.
    "quote" 'object;
    # The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.
    string|Account? on_behalf_of?;
    # The status of the quote.
    "accepted"|"canceled"|"draft"|"open" status;
    Quotes_resource_status_transitions status_transitions;
    # The subscription that was created or updated from this quote.
    string|Subscription? subscription?;
    Quotes_resource_subscription_data_subscription_data subscription_data;
    # The subscription schedule that was created or updated from this quote.
    string|Subscription_schedule? subscription_schedule?;
    # ID of the test clock this quote belongs to.
    string|Test_helpers\.test_clock? test_clock?;
    Quotes_resource_total_details total_details;
    # The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the invoices.
    Quotes_resource_transfer_data? transfer_data?;
};

# 
public type Setup_attempt_payment_method_details_paypal record {
};

@constraint:String {maxLength: 5000}
public type GetChargesChargeDisputeQueriesExpandItemsString string;

public type shipping_rates_body record {|
    delivery_estimate_1 delivery_estimate?;
    # The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.
    @constraint:String {maxLength: 100}
    string display_name;
    # Specifies which fields in the response should be expanded.
    shipping_rates_bodyExpandItemsString[] expand?;
    fixed_amount_1 fixed_amount?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`.
    string tax_code?;
    # The type of calculation to use on the shipping rate.
    "fixed_amount" 'type?;
|};

# 
public type ExternalAccountList record {
    # The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.
    (Bank_account|Card)[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetInvoiceitemsInvoiceitemQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTestHelpersTestClocksTestClockQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetSubscriptionItemsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetCreditNotesPreviewLines
public type GetCreditNotesPreviewLinesQueries record {
    # Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    "duplicate"|"fraudulent"|"order_change"|"product_unsatisfactory" reason?;
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note.
    int amount?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Type of email to send to the customer, one of `credit_note` or `none` and the default is `credit_note`.
    "credit_note"|"none" email_type?;
    # When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.
    credit_note_shipping_cost_2 shipping_cost?;
    # The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.
    int credit_amount?;
    # The credit note's memo appears on the credit note PDF.
    @constraint:String {maxLength: 5000}
    string memo?;
    # The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.
    int out_of_band_amount?;
    # The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.
    int effective_at?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCreditNotesPreviewLinesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
    int refund_amount?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # ID of the invoice.
    @constraint:String {maxLength: 5000}
    string invoice;
    # Line items that make up the credit note.
    credit_note_line_item_params[] lines?;
    # ID of an existing refund to link this credit note to.
    string refund?;
};

# Represents the Queries record for the operation: GetCustomersCustomerBalanceTransactionsTransaction
public type GetCustomersCustomerBalanceTransactionsTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerBalanceTransactionsTransactionQueriesExpandItemsString[] expand?;
};

# 
public type Portal_flows_subscription_update_confirm_discount record {
    # The ID of the coupon to apply to this subscription update.
    string? coupon?;
    # The ID of a promotion code to apply to this subscription update.
    string? promotion_code?;
};

# 
public type Three_d_secure_details_charge record {
    # For authenticated transactions: how the customer was authenticated by
    # the issuing bank.
    "challenge"|"frictionless"? authentication_flow?;
    # The Electronic Commerce Indicator (ECI). A protocol-level field
    # indicating what degree of authentication was performed.
    "01"|"02"|"05"|"06"|"07"? electronic_commerce_indicator?;
    # The exemption requested via 3DS and accepted by the issuer at authentication time.
    "low_risk"|"none"? exemption_indicator?;
    # Whether Stripe requested the value of `exemption_indicator` in the transaction. This will depend on
    # the outcome of Stripe's internal risk assessment.
    boolean exemption_indicator_applied?;
    # Indicates the outcome of 3D Secure authentication.
    "attempt_acknowledged"|"authenticated"|"exempted"|"failed"|"not_supported"|"processing_error"? result?;
    # Additional information about why 3D Secure succeeded or failed based
    # on the `result`.
    "abandoned"|"bypassed"|"canceled"|"card_not_enrolled"|"network_not_supported"|"protocol_error"|"rejected"? result_reason?;
    # The 3D Secure 1 XID or 3D Secure 2 Directory Server Transaction ID
    # (dsTransId) for this payment.
    string? transaction_id?;
    # The version of 3D Secure that was used.
    "1.0.2"|"2.1.0"|"2.2.0"? version?;
};

@constraint:String {maxLength: 5000}
public type GetClimateOrdersOrderQueriesExpandItemsString string;

# 
public type Payment_method_swish record {
};

# 
public type Setup_intent_payment_method_options_acss_debit record {
    # Currency supported by the bank account
    "cad"|"usd"? currency?;
    Setup_intent_payment_method_options_mandate_options_acss_debit mandate_options?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# 
public type Checkout_fpx_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Represents the Queries record for the operation: GetChargesChargeRefunds
public type GetChargesChargeRefundsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetChargesChargeRefundsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

public type canceled_at record {int gt?; int gte?; int lt?; int lte?;}|int;

public type charge_refunds_body record {|
    int amount?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Customer whose customer balance to refund from.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Specifies which fields in the response should be expanded.
    charge_refunds_bodyExpandItemsString[] expand?;
    # For payment methods without native refund support (e.g., Konbini, PromptPay), use this email from the customer to receive refund instructions.
    string instructions_email?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Origin of the refund
    "customer_balance" origin?;
    # The identifier of the PaymentIntent to refund.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # String indicating the reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`. If you believe the charge to be fraudulent, specifying `fraudulent` as the reason will add the associated card and email to your [block lists](https://stripe.com/docs/radar/lists), and will also help us improve our fraud detection algorithms.
    "duplicate"|"fraudulent"|"requested_by_customer" reason?;
    # Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.
    boolean refund_application_fee?;
    # Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount).<br><br>A transfer can be reversed only by the application that created the charge.
    boolean reverse_transfer?;
|};

public type cards_id_body_1 record {|
    # Specifies which fields in the response should be expanded.
    cards_id_body_1ExpandItemsString[] expand?;
|};

# 
public type Person_additional_tos_acceptance record {
    # The Unix timestamp marking when the legal guardian accepted the service agreement.
    int? date?;
    # The IP address from which the legal guardian accepted the service agreement.
    string? ip?;
    # The user agent of the browser from which the legal guardian accepted the service agreement.
    string? user_agent?;
};

# 
public type BillingMeterResourceBillingMeterList record {
    Billing\.meter[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/billing/meters`}
    string url;
};

public type order_shipping record {
    address address;
    @constraint:String {maxLength: 5000}
    string carrier?;
    @constraint:String {maxLength: 5000}
    string name?;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string tracking_number?;
};

public type customer_cards_bodyExpandItemsString string;

# Specific options for a registration in the specified `country`.
public type country_options record {
    default ae?;
    europe at?;
    default au?;
    europe be?;
    europe bg?;
    default bh?;
    canada ca?;
    default ch?;
    simplified cl?;
    simplified co?;
    europe cy?;
    europe cz?;
    europe de?;
    europe dk?;
    europe ee?;
    simplified eg?;
    europe es?;
    europe fi?;
    europe fr?;
    default gb?;
    simplified ge?;
    europe gr?;
    europe hr?;
    europe hu?;
    simplified id?;
    europe ie?;
    default 'is?;
    europe it?;
    default jp?;
    simplified ke?;
    simplified kr?;
    simplified kz?;
    europe lt?;
    europe lu?;
    europe lv?;
    europe mt?;
    simplified mx?;
    simplified my?;
    simplified ng?;
    europe nl?;
    default no?;
    default nz?;
    default om?;
    europe pl?;
    europe pt?;
    europe ro?;
    simplified sa?;
    europe se?;
    default sg?;
    europe si?;
    europe sk?;
    simplified th?;
    simplified tr?;
    united_states us?;
    simplified vn?;
    default za?;
};

# 
public type Issuing_dispute_not_received_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Date when the cardholder expected to receive the product.
    int? expected_at?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
    # Description of the merchandise or service that was purchased.
    string? product_description?;
    # Whether the product was a merchandise or service.
    "merchandise"|"service"? product_type?;
};

public type inbound_transfer_cancel_bodyExpandItemsString string;

public type id_verify_body_1ExpandItemsString string;

# Cart
public type cart record {
    string currency;
    line_item[] line_items;
    int tax?;
    int total;
};

public type customers_bodyExpandItemsString string;

# 
public type Payment_pages_checkout_session_invoice_creation record {
    # Indicates whether invoice creation is enabled for the Checkout Session.
    boolean enabled;
    Payment_pages_checkout_session_invoice_settings invoice_data;
};

# 
public type Subscription_item_billing_thresholds record {
    # Usage threshold that triggers the subscription to create an invoice
    int? usage_gte?;
};

# 
public type Payment_method_details_card_wallet_samsung_pay record {
};

# 
public type Payment_method_card_wallet_masterpass record {
    # Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? billing_address?;
    # Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? email?;
    # Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? name?;
    # Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? shipping_address?;
};

# 
public type Checkout_card_payment_method_options record {
    Checkout_card_installments_options installments?;
    # We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. If not provided, this value defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    "any"|"automatic"|"challenge" request_three_d_secure;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the Kana prefix (shortened Kana descriptor) or Kana statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 22 characters.
    @constraint:String {maxLength: 5000}
    string statement_descriptor_suffix_kana?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the Kanji prefix (shortened Kanji descriptor) or Kanji statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 17 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 17 characters.
    @constraint:String {maxLength: 5000}
    string statement_descriptor_suffix_kanji?;
};

# Represents the Queries record for the operation: GetTestHelpersTestClocksTestClock
public type GetTestHelpersTestClocksTestClockQueries record {
    # Specifies which fields in the response should be expanded.
    GetTestHelpersTestClocksTestClockQueriesExpandItemsString[] expand?;
};

# 
public type Connect_embedded_account_config_claim record {
    # Whether the embedded component is enabled.
    boolean enabled;
    Connect_embedded_account_features_claim features;
};

# Result from a email check
public type Gelato_email_report record {
    # Email to be verified.
    string? email?;
    # Details on the verification error. Present when status is `unverified`.
    Gelato_email_report_error? 'error?;
    # Status of this `email` check.
    "unverified"|"verified" status;
};

# 
public type Payment_method_p24 record {
    # The customer's bank, if provided.
    "alior_bank"|"bank_millennium"|"bank_nowy_bfg_sa"|"bank_pekao_sa"|"banki_spbdzielcze"|"blik"|"bnp_paribas"|"boz"|"citi_handlowy"|"credit_agricole"|"envelobank"|"etransfer_pocztowy24"|"getin_bank"|"ideabank"|"ing"|"inteligo"|"mbank_mtransfer"|"nest_przelew"|"noble_pay"|"pbac_z_ipko"|"plus_bank"|"santander_przelew24"|"tmobile_usbugi_bankowe"|"toyota_bank"|"velobank"|"volkswagen_bank"? bank?;
};

# 
public type Terminal_configuration_configuration_resource_tipping record {
    Terminal_configuration_configuration_resource_currency_specific_config aud?;
    Terminal_configuration_configuration_resource_currency_specific_config cad?;
    Terminal_configuration_configuration_resource_currency_specific_config chf?;
    Terminal_configuration_configuration_resource_currency_specific_config czk?;
    Terminal_configuration_configuration_resource_currency_specific_config dkk?;
    Terminal_configuration_configuration_resource_currency_specific_config eur?;
    Terminal_configuration_configuration_resource_currency_specific_config gbp?;
    Terminal_configuration_configuration_resource_currency_specific_config hkd?;
    Terminal_configuration_configuration_resource_currency_specific_config myr?;
    Terminal_configuration_configuration_resource_currency_specific_config nok?;
    Terminal_configuration_configuration_resource_currency_specific_config nzd?;
    Terminal_configuration_configuration_resource_currency_specific_config sek?;
    Terminal_configuration_configuration_resource_currency_specific_config sgd?;
    Terminal_configuration_configuration_resource_currency_specific_config usd?;
};

public type account_reject_bodyExpandItemsString string;

public type all_people_relationship_specs_1 record {
    boolean director?;
    boolean executive?;
    boolean legal_guardian?;
    boolean owner?;
    boolean representative?;
};

public type link_account_sessions_bodyPermissionsItemsString "balances"|"ownership"|"payment_method"|"transactions";

# 
public type Payment_method_options_card_mandate_options record {
    # Amount to be charged for future payments.
    int amount;
    # One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.
    "fixed"|"maximum" amount_type;
    # A description of the mandate or subscription that is meant to be displayed to the customer.
    string? description?;
    # End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.
    int? end_date?;
    # Specifies payment frequency. One of `day`, `week`, `month`, `year`, or `sporadic`.
    "day"|"month"|"sporadic"|"week"|"year" interval;
    # The number of intervals between payments. For example, `interval=month` and `interval_count=3` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when `interval=sporadic`.
    int? interval_count?;
    # Unique identifier for the mandate or subscription.
    @constraint:String {maxLength: 80}
    string reference;
    # Start date of the mandate or subscription. Start date should not be lesser than yesterday.
    int start_date;
    # Specifies the type of mandates supported. Possible values are `india`.
    ("india")[]? supported_types?;
};

# 
public type Payment_method_card_wallet_link record {
};

@constraint:String {maxLength: 5000}
public type GetWebhookEndpointsWebhookEndpointQueriesExpandItemsString string;

# Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
public type amount_details_specs record {
    int atm_fee?;
    int cashback_amount?;
};

public type customer_cash_balance_body record {|
    # Specifies which fields in the response should be expanded.
    customer_cash_balance_bodyExpandItemsString[] expand?;
    balance_settings_param_1 settings?;
|};

public type credit_note_line_item_params record {
    int amount?;
    @constraint:String {maxLength: 5000}
    string description?;
    @constraint:String {maxLength: 5000}
    string invoice_line_item?;
    int quantity?;
    record {int amount; string tax_rate; int taxable_amount;}[]|"" tax_amounts?;
    TaxratesItemsString[]|"" tax_rates?;
    "custom_line_item"|"invoice_line_item" 'type;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type quote_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    quote_cancel_bodyExpandItemsString[] expand?;
|};

public type authorization_increment_bodyExpandItemsString string;

# 
public type Account_terms_of_service record {
    # The Unix timestamp marking when the account representative accepted the service agreement.
    int? date?;
    # The IP address from which the account representative accepted the service agreement.
    string? ip?;
    # The user agent of the browser from which the account representative accepted the service agreement.
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

# 
public type Rule record {
    # The action taken on the payment.
    @constraint:String {maxLength: 5000}
    string action;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The predicate to evaluate the payment against.
    @constraint:String {maxLength: 5000}
    string predicate;
};

# 
public type Payment_method_sepa_debit record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Branch code of bank associated with the bank account.
    string? branch_code?;
    # Two-letter ISO code representing the country the bank account is located in.
    string? country?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Information about the object that generated this PaymentMethod.
    Sepa_debit_generated_from? generated_from?;
    # Last four characters of the IBAN.
    string? last4?;
};

# 
public type Payment_method_details_multibanco record {
    # Entity number associated with this Multibanco payment.
    string? entity?;
    # Reference number associated with this Multibanco payment.
    string? reference?;
};

# Represents the Queries record for the operation: GetCountrySpecs
public type GetCountrySpecsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCountrySpecsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# Customers with certain payments enabled have a cash balance, representing funds that were paid
# by the customer to a merchant, but have not yet been allocated to a payment. Cash Balance Transactions
# represent when funds are moved into or out of this balance. This includes funding by the customer, allocation
# to payments, and refunds to the customer.
public type CustomerCashBalanceTransactionList record {
    # Details about each object.
    Customer_cash_balance_transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type file_links_body record {|
    # Specifies which fields in the response should be expanded.
    file_links_bodyExpandItemsString[] expand?;
    # The link isn't usable after this future timestamp.
    int expires_at?;
    # The ID of the file. The file's `purpose` must be one of the following: `business_icon`, `business_logo`, `customer_signature`, `dispute_evidence`, `finance_report_run`, `identity_document_downloadable`, `pci_document`, `selfie`, `sigma_scheduled_query`, `tax_document_user_upload`, or `terminal_reader_splashscreen`.
    @constraint:String {maxLength: 5000}
    string file;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

@constraint:String {maxLength: 5000}
public type GetRefundsRefundQueriesExpandItemsString string;

public type subscription_cancel_updating_param record {
    subscription_cancellation_reason_updating_param cancellation_reason?;
    boolean enabled?;
    "at_period_end"|"immediately" mode?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

# OutboundTransfers contains outbound transfers features for a FinancialAccount.
public type Treasury_financial_accounts_resource_outbound_transfers record {
    Treasury_financial_accounts_resource_ach_toggle_settings ach?;
    Treasury_financial_accounts_resource_toggle_settings us_domestic_wire?;
};

# 
public type Payment_intent_next_action_wechat_pay_redirect_to_android_app record {
    # app_id is the APP ID registered on WeChat open platform
    @constraint:String {maxLength: 5000}
    string app_id;
    # nonce_str is a random string
    @constraint:String {maxLength: 5000}
    string nonce_str;
    # package is static value
    @constraint:String {maxLength: 5000}
    string package;
    # an unique merchant ID assigned by WeChat Pay
    @constraint:String {maxLength: 5000}
    string partner_id;
    # an unique trading ID assigned by WeChat Pay
    @constraint:String {maxLength: 5000}
    string prepay_id;
    # A signature
    @constraint:String {maxLength: 5000}
    string sign;
    # Specifies the current time in epoch format
    @constraint:String {maxLength: 5000}
    string timestamp;
};

# Represents the Queries record for the operation: GetCreditNotesPreview
public type GetCreditNotesPreviewQueries record {
    # Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    "duplicate"|"fraudulent"|"order_change"|"product_unsatisfactory" reason?;
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note.
    int amount?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Type of email to send to the customer, one of `credit_note` or `none` and the default is `credit_note`.
    "credit_note"|"none" email_type?;
    # When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.
    credit_note_shipping_cost_1 shipping_cost?;
    # The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.
    int credit_amount?;
    # The credit note's memo appears on the credit note PDF.
    @constraint:String {maxLength: 5000}
    string memo?;
    # The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.
    int out_of_band_amount?;
    # The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.
    int effective_at?;
    # Specifies which fields in the response should be expanded.
    GetCreditNotesPreviewQueriesExpandItemsString[] expand?;
    # The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
    int refund_amount?;
    # ID of the invoice.
    @constraint:String {maxLength: 5000}
    string invoice;
    # Line items that make up the credit note.
    credit_note_line_item_params[] lines?;
    # ID of an existing refund to link this credit note to.
    string refund?;
};

@constraint:String {maxLength: 5000}
public type GetCheckoutSessionsSessionLineItemsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Person_future_requirementsCurrentlydueItemsString string;

public type customer_subscriptions_bodyExpandItemsString string;

# 
public type Payment_intent_next_action_konbini_familymart record {
    # The confirmation number.
    @constraint:String {maxLength: 5000}
    string confirmation_number?;
    # The payment code.
    @constraint:String {maxLength: 5000}
    string payment_code;
};

# 
public type RadarEarlyFraudWarningList record {
    Radar\.early_fraud_warning[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/radar/early_fraud_warnings`}
    string url;
};

# 
public type Payment_method_options_giropay record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type webhook_endpoints_body record {|
    # Events sent to this endpoint will be generated with this Stripe Version instead of your account's default Stripe Version.
    "2011-01-01"|"2011-06-21"|"2011-06-28"|"2011-08-01"|"2011-09-15"|"2011-11-17"|"2012-02-23"|"2012-03-25"|"2012-06-18"|"2012-06-28"|"2012-07-09"|"2012-09-24"|"2012-10-26"|"2012-11-07"|"2013-02-11"|"2013-02-13"|"2013-07-05"|"2013-08-12"|"2013-08-13"|"2013-10-29"|"2013-12-03"|"2014-01-31"|"2014-03-13"|"2014-03-28"|"2014-05-19"|"2014-06-13"|"2014-06-17"|"2014-07-22"|"2014-07-26"|"2014-08-04"|"2014-08-20"|"2014-09-08"|"2014-10-07"|"2014-11-05"|"2014-11-20"|"2014-12-08"|"2014-12-17"|"2014-12-22"|"2015-01-11"|"2015-01-26"|"2015-02-10"|"2015-02-16"|"2015-02-18"|"2015-03-24"|"2015-04-07"|"2015-06-15"|"2015-07-07"|"2015-07-13"|"2015-07-28"|"2015-08-07"|"2015-08-19"|"2015-09-03"|"2015-09-08"|"2015-09-23"|"2015-10-01"|"2015-10-12"|"2015-10-16"|"2016-02-03"|"2016-02-19"|"2016-02-22"|"2016-02-23"|"2016-02-29"|"2016-03-07"|"2016-06-15"|"2016-07-06"|"2016-10-19"|"2017-01-27"|"2017-02-14"|"2017-04-06"|"2017-05-25"|"2017-06-05"|"2017-08-15"|"2017-12-14"|"2018-01-23"|"2018-02-05"|"2018-02-06"|"2018-02-28"|"2018-05-21"|"2018-07-27"|"2018-08-23"|"2018-09-06"|"2018-09-24"|"2018-10-31"|"2018-11-08"|"2019-02-11"|"2019-02-19"|"2019-03-14"|"2019-05-16"|"2019-08-14"|"2019-09-09"|"2019-10-08"|"2019-10-17"|"2019-11-05"|"2019-12-03"|"2020-03-02"|"2020-08-27"|"2022-08-01"|"2022-11-15"|"2023-08-16"|"2023-10-16"|"2024-04-10"|"2024-06-20" api_version?;
    # Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`.
    boolean connect?;
    # An optional description of what the webhook is used for.
    string|"" description?;
    # The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection.
    ("*"|"account.application.authorized"|"account.application.deauthorized"|"account.external_account.created"|"account.external_account.deleted"|"account.external_account.updated"|"account.updated"|"application_fee.created"|"application_fee.refund.updated"|"application_fee.refunded"|"balance.available"|"billing_portal.configuration.created"|"billing_portal.configuration.updated"|"billing_portal.session.created"|"capability.updated"|"cash_balance.funds_available"|"charge.captured"|"charge.dispute.closed"|"charge.dispute.created"|"charge.dispute.funds_reinstated"|"charge.dispute.funds_withdrawn"|"charge.dispute.updated"|"charge.expired"|"charge.failed"|"charge.pending"|"charge.refund.updated"|"charge.refunded"|"charge.succeeded"|"charge.updated"|"checkout.session.async_payment_failed"|"checkout.session.async_payment_succeeded"|"checkout.session.completed"|"checkout.session.expired"|"climate.order.canceled"|"climate.order.created"|"climate.order.delayed"|"climate.order.delivered"|"climate.order.product_substituted"|"climate.product.created"|"climate.product.pricing_updated"|"coupon.created"|"coupon.deleted"|"coupon.updated"|"credit_note.created"|"credit_note.updated"|"credit_note.voided"|"customer.created"|"customer.deleted"|"customer.discount.created"|"customer.discount.deleted"|"customer.discount.updated"|"customer.source.created"|"customer.source.deleted"|"customer.source.expiring"|"customer.source.updated"|"customer.subscription.created"|"customer.subscription.deleted"|"customer.subscription.paused"|"customer.subscription.pending_update_applied"|"customer.subscription.pending_update_expired"|"customer.subscription.resumed"|"customer.subscription.trial_will_end"|"customer.subscription.updated"|"customer.tax_id.created"|"customer.tax_id.deleted"|"customer.tax_id.updated"|"customer.updated"|"customer_cash_balance_transaction.created"|"entitlements.active_entitlement_summary.updated"|"file.created"|"financial_connections.account.created"|"financial_connections.account.deactivated"|"financial_connections.account.disconnected"|"financial_connections.account.reactivated"|"financial_connections.account.refreshed_balance"|"financial_connections.account.refreshed_ownership"|"financial_connections.account.refreshed_transactions"|"identity.verification_session.canceled"|"identity.verification_session.created"|"identity.verification_session.processing"|"identity.verification_session.redacted"|"identity.verification_session.requires_input"|"identity.verification_session.verified"|"invoice.created"|"invoice.deleted"|"invoice.finalization_failed"|"invoice.finalized"|"invoice.marked_uncollectible"|"invoice.paid"|"invoice.payment_action_required"|"invoice.payment_failed"|"invoice.payment_succeeded"|"invoice.sent"|"invoice.upcoming"|"invoice.updated"|"invoice.voided"|"invoiceitem.created"|"invoiceitem.deleted"|"issuing_authorization.created"|"issuing_authorization.request"|"issuing_authorization.updated"|"issuing_card.created"|"issuing_card.updated"|"issuing_cardholder.created"|"issuing_cardholder.updated"|"issuing_dispute.closed"|"issuing_dispute.created"|"issuing_dispute.funds_reinstated"|"issuing_dispute.submitted"|"issuing_dispute.updated"|"issuing_personalization_design.activated"|"issuing_personalization_design.deactivated"|"issuing_personalization_design.rejected"|"issuing_personalization_design.updated"|"issuing_token.created"|"issuing_token.updated"|"issuing_transaction.created"|"issuing_transaction.updated"|"mandate.updated"|"payment_intent.amount_capturable_updated"|"payment_intent.canceled"|"payment_intent.created"|"payment_intent.partially_funded"|"payment_intent.payment_failed"|"payment_intent.processing"|"payment_intent.requires_action"|"payment_intent.succeeded"|"payment_link.created"|"payment_link.updated"|"payment_method.attached"|"payment_method.automatically_updated"|"payment_method.detached"|"payment_method.updated"|"payout.canceled"|"payout.created"|"payout.failed"|"payout.paid"|"payout.reconciliation_completed"|"payout.updated"|"person.created"|"person.deleted"|"person.updated"|"plan.created"|"plan.deleted"|"plan.updated"|"price.created"|"price.deleted"|"price.updated"|"product.created"|"product.deleted"|"product.updated"|"promotion_code.created"|"promotion_code.updated"|"quote.accepted"|"quote.canceled"|"quote.created"|"quote.finalized"|"radar.early_fraud_warning.created"|"radar.early_fraud_warning.updated"|"refund.created"|"refund.updated"|"reporting.report_run.failed"|"reporting.report_run.succeeded"|"reporting.report_type.updated"|"review.closed"|"review.opened"|"setup_intent.canceled"|"setup_intent.created"|"setup_intent.requires_action"|"setup_intent.setup_failed"|"setup_intent.succeeded"|"sigma.scheduled_query_run.created"|"source.canceled"|"source.chargeable"|"source.failed"|"source.mandate_notification"|"source.refund_attributes_required"|"source.transaction.created"|"source.transaction.updated"|"subscription_schedule.aborted"|"subscription_schedule.canceled"|"subscription_schedule.completed"|"subscription_schedule.created"|"subscription_schedule.expiring"|"subscription_schedule.released"|"subscription_schedule.updated"|"tax.settings.updated"|"tax_rate.created"|"tax_rate.updated"|"terminal.reader.action_failed"|"terminal.reader.action_succeeded"|"test_helpers.test_clock.advancing"|"test_helpers.test_clock.created"|"test_helpers.test_clock.deleted"|"test_helpers.test_clock.internal_failure"|"test_helpers.test_clock.ready"|"topup.canceled"|"topup.created"|"topup.failed"|"topup.reversed"|"topup.succeeded"|"transfer.created"|"transfer.reversed"|"transfer.updated"|"treasury.credit_reversal.created"|"treasury.credit_reversal.posted"|"treasury.debit_reversal.completed"|"treasury.debit_reversal.created"|"treasury.debit_reversal.initial_credit_granted"|"treasury.financial_account.closed"|"treasury.financial_account.created"|"treasury.financial_account.features_status_updated"|"treasury.inbound_transfer.canceled"|"treasury.inbound_transfer.created"|"treasury.inbound_transfer.failed"|"treasury.inbound_transfer.succeeded"|"treasury.outbound_payment.canceled"|"treasury.outbound_payment.created"|"treasury.outbound_payment.expected_arrival_date_updated"|"treasury.outbound_payment.failed"|"treasury.outbound_payment.posted"|"treasury.outbound_payment.returned"|"treasury.outbound_payment.tracking_details_updated"|"treasury.outbound_transfer.canceled"|"treasury.outbound_transfer.created"|"treasury.outbound_transfer.expected_arrival_date_updated"|"treasury.outbound_transfer.failed"|"treasury.outbound_transfer.posted"|"treasury.outbound_transfer.returned"|"treasury.outbound_transfer.tracking_details_updated"|"treasury.received_credit.created"|"treasury.received_credit.failed"|"treasury.received_credit.succeeded"|"treasury.received_debit.created")[] enabled_events;
    # Specifies which fields in the response should be expanded.
    webhook_endpoints_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The URL of the webhook endpoint.
    string url;
|};

# Options for customizing how the account functions within Stripe.
public type settings_specs record {
    bacs_debit_payments_specs bacs_debit_payments?;
    branding_settings_specs branding?;
    card_issuing_settings_specs card_issuing?;
    card_payments_settings_specs card_payments?;
    payments_settings_specs payments?;
    payout_settings_specs payouts?;
    treasury_settings_specs treasury?;
};

# 
public type Checkout_session_payment_method_options record {
    Checkout_acss_debit_payment_method_options acss_debit?;
    Checkout_affirm_payment_method_options affirm?;
    Checkout_afterpay_clearpay_payment_method_options afterpay_clearpay?;
    Checkout_alipay_payment_method_options alipay?;
    Checkout_amazon_pay_payment_method_options amazon_pay?;
    Checkout_au_becs_debit_payment_method_options au_becs_debit?;
    Checkout_bacs_debit_payment_method_options bacs_debit?;
    Checkout_bancontact_payment_method_options bancontact?;
    Checkout_boleto_payment_method_options boleto?;
    Checkout_card_payment_method_options card?;
    Checkout_cashapp_payment_method_options cashapp?;
    Checkout_customer_balance_payment_method_options customer_balance?;
    Checkout_eps_payment_method_options eps?;
    Checkout_fpx_payment_method_options fpx?;
    Checkout_giropay_payment_method_options giropay?;
    Checkout_grab_pay_payment_method_options grabpay?;
    Checkout_ideal_payment_method_options ideal?;
    Checkout_klarna_payment_method_options klarna?;
    Checkout_konbini_payment_method_options konbini?;
    Checkout_link_payment_method_options link?;
    Checkout_mobilepay_payment_method_options mobilepay?;
    Checkout_multibanco_payment_method_options multibanco?;
    Checkout_oxxo_payment_method_options oxxo?;
    Checkout_p24_payment_method_options p24?;
    Checkout_paynow_payment_method_options paynow?;
    Checkout_paypal_payment_method_options paypal?;
    Checkout_pix_payment_method_options pix?;
    Checkout_revolut_pay_payment_method_options revolut_pay?;
    Checkout_sepa_debit_payment_method_options sepa_debit?;
    Checkout_sofort_payment_method_options sofort?;
    Checkout_swish_payment_method_options swish?;
    Checkout_us_bank_account_payment_method_options us_bank_account?;
};

public type filters_paramsCountriesItemsString string;

public type schedule_release_bodyExpandItemsString string;

public type payout_reverse_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetApplePayDomainsDomain
public type GetApplePayDomainsDomainQueries record {
    # Specifies which fields in the response should be expanded.
    GetApplePayDomainsDomainQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetConfirmationTokensConfirmationTokenQueriesExpandItemsString string;

public type customers_body record {|
    # The customer's address.
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    # An integer amount in cents (or local equivalent) that represents the customer's current balance, which affect the customer's future invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.
    int balance?;
    cash_balance_param cash_balance?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    # An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
    @constraint:String {maxLength: 5000}
    string description?;
    # Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.
    @constraint:String {maxLength: 512}
    string email?;
    # Specifies which fields in the response should be expanded.
    customers_bodyExpandItemsString[] expand?;
    # The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.
    @constraint:String {maxLength: 5000}
    string invoice_prefix?;
    customer_param invoice_settings?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The customer's full name or business name.
    @constraint:String {maxLength: 256}
    string name?;
    # The sequence to be used on the customer's next invoice. Defaults to 1.
    int next_invoice_sequence?;
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # The customer's phone number.
    @constraint:String {maxLength: 20}
    string phone?;
    # Customer's preferred languages, ordered by preference.
    customers_bodyPreferredlocalesItemsString[] preferred_locales?;
    # The ID of a promotion code to apply to the customer. The customer will have a discount applied on all recurring payments. Charges you create through the API will not have the discount.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # The customer's shipping information. Appears on invoices emailed to this customer.
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string phone?;}|"" shipping?;
    @constraint:String {maxLength: 5000}
    string 'source?;
    tax_param tax?;
    # The customer's tax exemption. One of `none`, `exempt`, or `reverse`.
    ""|"exempt"|"none"|"reverse" tax_exempt?;
    # The customer's tax IDs.
    data_params[] tax_id_data?;
    # ID of the test clock to attach to the customer.
    @constraint:String {maxLength: 5000}
    string test_clock?;
|};

public type treasury_outbound_transfers_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetClimateSuppliersQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTransfersIdReversalsQueriesExpandItemsString string;

# 
public type Source_order record {
    # A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the order.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # The email address of the customer placing the order.
    @constraint:String {maxLength: 5000}
    string email?;
    # List of items constituting the order.
    Source_order_item[]? items?;
    Shipping shipping?;
};

public type account_login_links_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetSourcesSourceSourceTransactionsSourceTransaction
public type GetSourcesSourceSourceTransactionsSourceTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetSourcesSourceSourceTransactionsSourceTransactionQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetRadarEarlyFraudWarningsQueriesExpandItemsString string;

# Evidence provided for the dispute.
public type evidence_param record {
    record {string|"" additional_documentation?; int|"" canceled_at?; boolean|"" cancellation_policy_provided?; string|"" cancellation_reason?; int|"" expected_at?; string|"" explanation?; string|"" product_description?; ""|"merchandise"|"service" product_type?; ""|"merchant_rejected"|"successful" return_status?; int|"" returned_at?;}|"" canceled?;
    record {string|"" additional_documentation?; string|"" card_statement?; string|"" cash_receipt?; string|"" check_image?; string|"" explanation?; string original_transaction?;}|"" duplicate?;
    record {string|"" additional_documentation?; string|"" explanation?;}|"" fraudulent?;
    record {string|"" additional_documentation?; string|"" explanation?; int|"" received_at?; string|"" return_description?; ""|"merchant_rejected"|"successful" return_status?; int|"" returned_at?;}|"" merchandise_not_as_described?;
    record {string|"" additional_documentation?; string|"" explanation?;}|"" no_valid_authorization?;
    record {string|"" additional_documentation?; int|"" expected_at?; string|"" explanation?; string|"" product_description?; ""|"merchandise"|"service" product_type?;}|"" not_received?;
    record {string|"" additional_documentation?; string|"" explanation?; string|"" product_description?; ""|"merchandise"|"service" product_type?;}|"" other?;
    "canceled"|"duplicate"|"fraudulent"|"merchandise_not_as_described"|"no_valid_authorization"|"not_received"|"other"|"service_not_as_described" reason?;
    record {string|"" additional_documentation?; int|"" canceled_at?; string|"" cancellation_reason?; string|"" explanation?; int|"" received_at?;}|"" service_not_as_described?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryFinancialAccountsFinancialAccountFeaturesQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPayoutsPayoutQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetCouponsCoupon
public type GetCouponsCouponQueries record {
    # Specifies which fields in the response should be expanded.
    GetCouponsCouponQueriesExpandItemsString[] expand?;
};

public type treasury_received_credits_body record {|
    # Amount (in cents) to be transferred.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    treasury_received_credits_bodyExpandItemsString[] expand?;
    # The FinancialAccount to send funds to.
    string financial_account;
    source_params initiating_payment_method_details?;
    # Specifies the network rails to be used. If not set, will default to the PaymentMethod's preferred network. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.
    "ach"|"us_domestic_wire" network;
|};

@constraint:String {maxLength: 5000}
public type GetPaymentLinksPaymentLinkLineItemsQueriesExpandItemsString string;

public type intent_cancel_body record {|
    # Reason for canceling this PaymentIntent. Possible values are: `duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`
    "abandoned"|"duplicate"|"fraudulent"|"requested_by_customer" cancellation_reason?;
    # Specifies which fields in the response should be expanded.
    intent_cancel_bodyExpandItemsString[] expand?;
|};

# Settings that restrict the redemption of the promotion code.
public type restrictions_params_1 record {
    record {|currency_option_3...;|} currency_options?;
    boolean first_time_transaction?;
    int minimum_amount?;
    string minimum_amount_currency?;
};

# Settings that restrict the redemption of the promotion code.
public type restrictions_params_2 record {
    record {|currency_option_3...;|} currency_options?;
};

# A PaymentIntent guides you through the process of collecting a payment from your customer.
# We recommend that you create exactly one PaymentIntent for each order or
# customer session in your system. You can reference the PaymentIntent later to
# see the history of payment attempts for a particular session.
# 
# A PaymentIntent transitions through
# [multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)
# throughout its lifetime as it interfaces with Stripe.js to perform
# authentication flows and ultimately creates at most one successful charge.
# 
# Related guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents)
public type Payment_intent record {
    # Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount;
    # Amount that can be captured from this PaymentIntent.
    int amount_capturable?;
    Payment_flows_amount_details amount_details?;
    # Amount that this PaymentIntent collects.
    int amount_received?;
    # ID of the Connect application that created the PaymentIntent.
    string|Application? application?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    int? application_fee_amount?;
    # Settings to configure compatible payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)
    Payment_flows_automatic_payment_methods_payment_intent? automatic_payment_methods?;
    # Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.
    int? canceled_at?;
    # Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).
    "abandoned"|"automatic"|"duplicate"|"failed_invoice"|"fraudulent"|"requested_by_customer"|"void_invoice"? cancellation_reason?;
    # Controls when the funds will be captured from the customer's account.
    "automatic"|"automatic_async"|"manual" capture_method;
    # The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. 
    # 
    # The client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.
    # 
    # Refer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.
    string? client_secret?;
    # Describes whether we can confirm this PaymentIntent automatically, or if it requires customer action to confirm the payment.
    "automatic"|"manual" confirmation_method;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the Customer this PaymentIntent belongs to, if one exists.
    # 
    # Payment methods attached to other Customers cannot be used with this PaymentIntent.
    # 
    # If present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.
    string|Customer|Deleted_customer? customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # ID of the invoice that created this PaymentIntent, if it exists.
    string|Invoice? invoice?;
    # The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.
    Api_errors? last_payment_error?;
    # The latest charge created by this PaymentIntent.
    string|Charge? latest_charge?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Learn more about [storing information in metadata](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).
    record {|string...;|} metadata?;
    # If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.
    Payment_intent_next_action? next_action?;
    # String representing the object's type. Objects of the same type share the same value.
    "payment_intent" 'object;
    # The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.
    string|Account? on_behalf_of?;
    # ID of the payment method used in this PaymentIntent.
    string|Payment_method? payment_method?;
    # Information about the payment method configuration used for this PaymentIntent.
    Payment_method_config_biz_payment_method_configuration_details? payment_method_configuration_details?;
    # Payment-method-specific configuration for this PaymentIntent.
    Payment_intent_payment_method_options? payment_method_options?;
    # The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.
    Payment_intentPaymentmethodtypesItemsString[] payment_method_types;
    # If present, this property tells you about the processing state of the payment.
    Payment_intent_processing? processing?;
    # Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).
    string? receipt_email?;
    # ID of the review associated with this PaymentIntent, if any.
    string|Review? review?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "off_session"|"on_session"? setup_future_usage?;
    # Shipping information for this PaymentIntent.
    Shipping? shipping?;
    # For card charges, use [statement_descriptor_suffix](https://stripe.com/docs/payments/account/statement-descriptors#dynamic). Otherwise, you can use this value as the complete description of a charge on your customers' statements. It must contain at least one letter and be 1–22 characters long.
    string? statement_descriptor?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    string? statement_descriptor_suffix?;
    # Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).
    "canceled"|"processing"|"requires_action"|"requires_capture"|"requires_confirmation"|"requires_payment_method"|"succeeded" status;
    # The data that automatically creates a Transfer after the payment finalizes. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    Transfer_data? transfer_data?;
    # A string that identifies the resulting payment as part of a group. Learn more about the [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers).
    string? transfer_group?;
};

# 
public type Payment_method_details_card_wallet_masterpass record {
    # Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? billing_address?;
    # Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? email?;
    # Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? name?;
    # Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? shipping_address?;
};

# The place where your business is located.
public type head_office_param record {
    validated_country_address address;
};

# 
public type Invoice_rendering_pdf record {
    # Page size of invoice pdf. Options include a4, letter, and auto. If set to auto, page size will be switched to a4 or letter based on customer locale.
    "a4"|"auto"|"letter"? page_size?;
};

# 
public type SubscriptionSchedulesResourceScheduleList record {
    Subscription_schedule[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/subscription_schedules`}
    string url;
};

# 
public type Setup_attempt_payment_method_details_bancontact record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Bank Identifier Code of the bank associated with the bank account.
    string? bic?;
    # The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    string|Payment_method? generated_sepa_debit?;
    # The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    string|Mandate? generated_sepa_debit_mandate?;
    # Last four characters of the IBAN.
    string? iban_last4?;
    # Preferred language of the Bancontact authorization page that the customer is redirected to.
    # Can be one of `en`, `de`, `fr`, or `nl`
    "de"|"en"|"fr"|"nl"? preferred_language?;
    # Owner's verified full name. Values are verified or provided by Bancontact directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
};

# 
public type Quotes_resource_upfront record {
    # Total before any discounts or taxes are applied.
    int amount_subtotal;
    # Total after discounts and taxes are applied.
    int amount_total;
    QuotesResourceListLineItems_2 line_items?;
    Quotes_resource_total_details total_details;
};

# A hash of settings for this cash balance.
public type balance_settings_param_1 record {
    "automatic"|"manual"|"merchant_default" reconciliation_mode?;
};

# Documents that may be submitted to satisfy various informational requests.
public type person_documents_specs record {
    documents_param_1 company_authorization?;
    documents_param_1 passport?;
    documents_param_1 visa?;
};

public type required_address record {
    @constraint:String {maxLength: 5000}
    string city;
    @constraint:String {maxLength: 5000}
    string country;
    @constraint:String {maxLength: 5000}
    string line1;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code;
    @constraint:String {maxLength: 5000}
    string state?;
};

# 
public type Payment_method_wechat_pay record {
};

@constraint:String {maxLength: 5000}
public type GetTaxIdsIdQueriesExpandItemsString string;

public type treasury_credit_reversals_bodyExpandItemsString string;

# 
public type Checkout_bacs_debit_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# 
public type Payment_method_config_resource_display_preference record {
    # For child configs, whether or not the account's preference will be observed. If `false`, the parent configuration's default is used.
    boolean? overridable?;
    # The account's display preference.
    "none"|"off"|"on" preference;
    # The effective display preference value.
    "off"|"on" value;
};

public type Treasury\.financial_account record {
    ("card_issuing"|"deposit_insurance"|"financial_addresses.aba"|"inbound_transfers.ach"|"intra_stripe_flows"|"outbound_payments.ach"|"outbound_payments.us_domestic_wire"|"outbound_transfers.ach"|"outbound_transfers.us_domestic_wire"|"remote_deposit_capture")[] active_features?;
    Treasury_financial_accounts_resource_balance balance;
    string country;
    int created;
    Treasury\.financial_account_features features?;
    Treasury_financial_accounts_resource_financial_address[] financial_addresses;
    string id;
    boolean livemode;
    record {|string...;|}? metadata?;
    "treasury.financial_account" 'object;
    ("card_issuing"|"deposit_insurance"|"financial_addresses.aba"|"inbound_transfers.ach"|"intra_stripe_flows"|"outbound_payments.ach"|"outbound_payments.us_domestic_wire"|"outbound_transfers.ach"|"outbound_transfers.us_domestic_wire"|"remote_deposit_capture")[] pending_features?;
    Treasury_financial_accounts_resource_platform_restrictions? platform_restrictions?;
    ("card_issuing"|"deposit_insurance"|"financial_addresses.aba"|"inbound_transfers.ach"|"intra_stripe_flows"|"outbound_payments.ach"|"outbound_payments.us_domestic_wire"|"outbound_transfers.ach"|"outbound_transfers.us_domestic_wire"|"remote_deposit_capture")[] restricted_features?;
    "closed"|"open" status;
    Treasury_financial_accounts_resource_status_details status_details;
    string[] supported_currencies;
};

public type discounts record {string coupon?; string discount?; string promotion_code?;}[]|"";

# 
public type Invoice_item_threshold_reason record {
    # The IDs of the line items that triggered the threshold invoice.
    Invoice_item_threshold_reasonLineitemidsItemsString[] line_item_ids;
    # The quantity threshold boundary that applied to the given line item.
    int usage_gte;
};

public type pricing_table_param record {
    boolean enabled;
};

public type customer_funding_instructions_body record {|
    bank_transfer_params bank_transfer;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Specifies which fields in the response should be expanded.
    customer_funding_instructions_bodyExpandItemsString[] expand?;
    # The `funding_type` to get the instructions for.
    "bank_transfer" funding_type;
|};

public type installments_param record {
    boolean enabled?;
};

public type header_param record {
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 5000}
    string value;
};

public type payment_method_configurations_configuration_bodyExpandItemsString string;

public type custom_field_numeric_param_1 record {
    int maximum_length?;
    int minimum_length?;
};

@constraint:String {maxLength: 5000}
public type GetProductsIdQueriesExpandItemsString string;

# 
public type Payment_pages_checkout_session_customer_details record {
    # The customer's address after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.
    Address? address?;
    # The email associated with the Customer, if one exists, on the Checkout Session after a completed Checkout Session or at time of session expiry.
    # Otherwise, if the customer has consented to promotional content, this value is the most recent valid email provided by the customer on the Checkout form.
    string? email?;
    # The customer's name after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.
    string? name?;
    # The customer's phone number after a completed Checkout Session.
    string? phone?;
    # The customer’s tax exempt status after a completed Checkout Session.
    "exempt"|"none"|"reverse"? tax_exempt?;
    # The customer’s tax IDs after a completed Checkout Session.
    Payment_pages_checkout_session_tax_id[]? tax_ids?;
};

public type transactions_create_from_calculation_bodyExpandItemsString string;

public type charges_charge_body record {|
    # The ID of an existing customer that will be associated with this request. This field may only be updated if there is no existing associated customer with this charge.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string which you can attach to a charge object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.
    @constraint:String {maxLength: 40000}
    string description?;
    # Specifies which fields in the response should be expanded.
    charges_charge_bodyExpandItemsString[] expand?;
    fraud_details fraud_details?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # This is the email address that the receipt for this charge will be sent to. If this field is updated, then a new email receipt will be sent to the updated address.
    @constraint:String {maxLength: 5000}
    string receipt_email?;
    optional_fields_shipping shipping?;
    # A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.
    string transfer_group?;
|};

# The recurring components of a price such as `interval` and `usage_type`.
public type recurring record {
    "last_during_period"|"last_ever"|"max"|"sum" aggregate_usage?;
    "day"|"month"|"week"|"year" interval;
    int interval_count?;
    @constraint:String {maxLength: 5000}
    string meter?;
    "licensed"|"metered" usage_type?;
};

# 
public type Payment_method_card_checks record {
    # If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_line1_check?;
    # If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_postal_code_check?;
    # If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? cvc_check?;
};

# 
public type Invoice_payment_method_options_acss_debit record {
    Invoice_payment_method_options_acss_debit_mandate_options mandate_options?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

@constraint:String {maxLength: 5000}
public type GetRadarValueListItemsItemQueriesExpandItemsString string;

# The hosted login page for this configuration. Learn more about the portal login page in our [integration docs](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal#share).
public type login_page_update_param record {
    boolean enabled;
};

# The desired PIN for this card.
public type encrypted_pin_param record {
    @constraint:String {maxLength: 5000}
    string encrypted_number?;
};

# Represents the Queries record for the operation: GetTransfersTransferReversalsId
public type GetTransfersTransferReversalsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTransfersTransferReversalsIdQueriesExpandItemsString[] expand?;
};

public type Treasury\.transaction record {
    int amount;
    Treasury_transactions_resource_balance_impact balance_impact;
    int created;
    string currency;
    string description;
    TreasuryTransactionsResourceTransactionEntryList_1? entries?;
    string financial_account;
    string? flow?;
    Treasury_transactions_resource_flow_details? flow_details?;
    "credit_reversal"|"debit_reversal"|"inbound_transfer"|"issuing_authorization"|"other"|"outbound_payment"|"outbound_transfer"|"received_credit"|"received_debit" flow_type;
    string id;
    boolean livemode;
    "treasury.transaction" 'object;
    "open"|"posted"|"void" status;
    Treasury_transactions_resource_abstract_transaction_resource_status_transitions status_transitions;
};

# Data used to generate a new [Price](https://stripe.com/docs/api/prices) object. This Price will be set as the default price for this product.
public type price_data_without_product record {
    string currency;
    record {|currency_option_2...;|} currency_options?;
    recurring_adhoc recurring?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type payouts_config_param record {
    boolean enabled;
    payouts_features_param features?;
};

# 
public type Deleted_subscription_item record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "subscription_item" 'object;
};

# The customer's payment sources, if any.
public type ApmsSourcesSourceList_1 record {
    # Details about each object.
    (Bank_account|Card|Source)[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type promotion_codes_promotion_code_body record {|
    # Whether the promotion code is currently active. A promotion code can only be reactivated when the coupon is still valid and the promotion code is otherwise redeemable.
    boolean active?;
    # Specifies which fields in the response should be expanded.
    promotion_codes_promotion_code_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    restrictions_params_2 restrictions?;
|};

# 
public type TreasuryReceivedDebitsResourceDebitReversalList record {
    # Details about each object.
    Treasury\.debit_reversal[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Issuing_authorization_request record {
    # The `pending_request.amount` at the time of the request, presented in your card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). Stripe held this amount from your account to fund the authorization if the request was approved.
    int amount;
    # Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    Issuing_authorization_amount_details? amount_details?;
    # Whether this request was approved.
    boolean approved;
    # A code created by Stripe which is shared with the merchant to validate the authorization. This field will be populated if the authorization message was approved. The code typically starts with the letter "S", followed by a six-digit number. For example, "S498162". Please note that the code is not guaranteed to be unique across authorizations.
    string? authorization_code?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @constraint:String {maxLength: 5000}
    string currency;
    # The `pending_request.merchant_amount` at the time of the request, presented in the `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int merchant_amount;
    # The currency that was collected by the merchant and presented to the cardholder for the authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @constraint:String {maxLength: 5000}
    string merchant_currency;
    # The card network's estimate of the likelihood that an authorization is fraudulent. Takes on values between 1 and 99.
    int? network_risk_score?;
    # When an authorization is approved or declined by you or by Stripe, this field provides additional detail on the reason for the outcome.
    "account_disabled"|"card_active"|"card_canceled"|"card_expired"|"card_inactive"|"cardholder_blocked"|"cardholder_inactive"|"cardholder_verification_required"|"insecure_authorization_method"|"insufficient_funds"|"not_allowed"|"pin_blocked"|"spending_controls"|"suspected_fraud"|"verification_failed"|"webhook_approved"|"webhook_declined"|"webhook_error"|"webhook_timeout" reason;
    # If the `request_history.reason` is `webhook_error` because the direct webhook response is invalid (for example, parsing errors or missing parameters), we surface a more detailed error message via this field.
    string? reason_message?;
    # Time when the card network received an authorization request from the acquirer in UTC. Referred to by networks as transmission time.
    int? requested_at?;
};

public type line_items_create_params record {
    adjustable_quantity_params adjustable_quantity?;
    @constraint:String {maxLength: 5000}
    string price;
    int quantity;
};

# Represents the Queries record for the operation: GetFinancialConnectionsSessionsSession
public type GetFinancialConnectionsSessionsSessionQueries record {
    # Specifies which fields in the response should be expanded.
    GetFinancialConnectionsSessionsSessionQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerBankAccountsIdQueriesExpandItemsString string;

public type id_return_bodyExpandItemsString string;

public type payment_method_param record {
    @constraint:String {maxLength: 5000}
    string account_number;
    @constraint:String {maxLength: 5000}
    string institution_number;
    @constraint:String {maxLength: 5000}
    string transit_number;
};

# Represents the Queries record for the operation: GetBillingPortalConfigurationsConfiguration
public type GetBillingPortalConfigurationsConfigurationQueries record {
    # Specifies which fields in the response should be expanded.
    GetBillingPortalConfigurationsConfigurationQueriesExpandItemsString[] expand?;
};

# 
public type Secret_service_resource_scope record {
    # The secret scope type.
    "account"|"user" 'type;
    # The user ID, if type is set to "user"
    @constraint:String {maxLength: 5000}
    string user?;
};

# The person's verification status.
public type person_verification_specs_1 record {
    person_verification_document_specs additional_document?;
    person_verification_document_specs document?;
};

public type issuing_disputes_bodyExpandItemsString string;

public type inline_response_200 Customer|Deleted_customer;

# 
public type Card_issuing_account_terms_of_service record {
    # The Unix timestamp marking when the account representative accepted the service agreement.
    int? date?;
    # The IP address from which the account representative accepted the service agreement.
    string? ip?;
    # The user agent of the browser from which the account representative accepted the service agreement.
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

# 
public type Subscription_schedules_resource_default_settings_automatic_tax record {
    # Whether Stripe automatically computes tax on invoices created during this phase.
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
};

public type amount record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_links_resource_subscription_data record {
    # The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    string? description?;
    Payment_links_resource_subscription_data_invoice_settings invoice_settings;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will set metadata on [Subscriptions](https://stripe.com/docs/api/subscriptions) generated from this payment link.
    record {|string...;|} metadata;
    # Integer representing the number of trial period days before the customer is charged for the first time.
    int? trial_period_days?;
    # Settings related to subscription trials.
    Subscriptions_trials_resource_trial_settings? trial_settings?;
};

# 
public type Checkout_paypal_payment_method_options record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Preferred locale of the PayPal checkout page that the customer is redirected to.
    string? preferred_locale?;
    # A reference of the PayPal transaction visible to customer which is mapped to PayPal's invoice ID. This must be a globally unique ID if you have configured in your PayPal settings to block multiple payments per invoice ID.
    string? reference?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# The line items purchased by the customer.
public type PaymentPagesCheckoutSessionListLineItems_1 record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type charge_dispute_body record {|
    dispute_evidence_params evidence?;
    # Specifies which fields in the response should be expanded.
    charge_dispute_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default).
    boolean submit?;
|};

# 
public type Account_sepa_debit_payments_settings record {
    # SEPA creditor identifier that identifies the company making the payment.
    @constraint:String {maxLength: 5000}
    string creditor_id?;
};

public type id_fail_body_1ExpandItemsString string;

# Simulated data for the card_present payment method.
public type card_present record {
    @constraint:String {maxLength: 5000}
    string number?;
};

# A SetupAttempt describes one attempted confirmation of a SetupIntent,
# whether that confirmation is successful or unsuccessful. You can use
# SetupAttempts to inspect details of a specific attempt at setting up a
# payment method using a SetupIntent.
public type Setup_attempt record {
    # The value of [application](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-application) on the SetupIntent at the time of this confirmation.
    string|Application? application?;
    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.
    # 
    # It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    boolean attach_to_self?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The value of [customer](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-customer) on the SetupIntent at the time of this confirmation.
    string|Customer|Deleted_customer? customer?;
    # Indicates the directions of money movement for which this payment method is intended to be used.
    # 
    # Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
    ("inbound"|"outbound")[]? flow_directions?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "setup_attempt" 'object;
    # The value of [on_behalf_of](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-on_behalf_of) on the SetupIntent at the time of this confirmation.
    string|Account? on_behalf_of?;
    # ID of the payment method used with this SetupAttempt.
    string|Payment_method payment_method;
    Setup_attempt_payment_method_details payment_method_details;
    # The error encountered during this attempt to confirm the SetupIntent, if any.
    Api_errors? setup_error?;
    # ID of the SetupIntent that this attempt belongs to.
    string|Setup_intent setup_intent;
    # Status of this SetupAttempt, one of `requires_confirmation`, `requires_action`, `processing`, `succeeded`, `failed`, or `abandoned`.
    @constraint:String {maxLength: 5000}
    string status;
    # The value of [usage](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-usage) on the SetupIntent at the time of this confirmation, one of `off_session` or `on_session`.
    @constraint:String {maxLength: 5000}
    string usage;
};

# 
public type Quotes_resource_recurring record {
    # Total before any discounts or taxes are applied.
    int amount_subtotal;
    # Total after discounts and taxes are applied.
    int amount_total;
    # The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.
    "day"|"month"|"week"|"year" interval;
    # The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.
    int interval_count;
    Quotes_resource_total_details total_details;
};

# 
public type Payment_pages_checkout_session_total_details record {
    # This is the sum of all the discounts.
    int amount_discount;
    # This is the sum of all the shipping amounts.
    int? amount_shipping?;
    # This is the sum of all the tax amounts.
    int amount_tax;
    Payment_pages_checkout_session_total_details_resource_breakdown breakdown?;
};

@constraint:String {maxLength: 5000}
public type GetFilesQueriesExpandItemsString string;

public type products_bodyExpandItemsString string;

public type reader_refund_payment_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetIssuingPhysicalBundlesQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPaymentLinksPaymentLinkQueriesExpandItemsString string;

# The bank account this token will represent.
public type token_create_bank_account record {
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    "company"|"individual" account_holder_type?;
    @constraint:String {maxLength: 5000}
    string account_number;
    "checking"|"futsu"|"savings"|"toza" account_type?;
    @constraint:String {maxLength: 5000}
    string country;
    string currency?;
    @constraint:String {maxLength: 5000}
    string payment_method?;
    @constraint:String {maxLength: 5000}
    string routing_number?;
};

public type customer_sessions_body record {|
    components components;
    # The ID of an existing customer for which to create the Customer Session.
    @constraint:String {maxLength: 5000}
    string customer;
    # Specifies which fields in the response should be expanded.
    customer_sessions_bodyExpandItemsString[] expand?;
|};

public type products_body record {|
    # Whether the product is currently available for purchase. Defaults to `true`.
    boolean active?;
    price_data_without_product default_price_data?;
    # The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.
    @constraint:String {maxLength: 40000}
    string description?;
    # Specifies which fields in the response should be expanded.
    products_bodyExpandItemsString[] expand?;
    # An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account.
    @constraint:String {maxLength: 5000}
    string id?;
    # A list of up to 8 URLs of images for this product, meant to be displayable to the customer.
    string[] images?;
    # A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).
    features[] marketing_features?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The product's name, meant to be displayable to the customer.
    @constraint:String {maxLength: 5000}
    string name;
    package_dimensions_specs package_dimensions?;
    # Whether this product is shipped (i.e., physical goods).
    boolean shippable?;
    # An arbitrary string to be displayed on your customer's credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.
    # 
    # This may be up to 22 characters. The statement description may not include `<`, `>`, `\`, `"`, `'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped.
    #  It must contain at least one letter. Only used for subscription payments.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    string tax_code?;
    # A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal.
    @constraint:String {maxLength: 12}
    string unit_label?;
    # A URL of a publicly-accessible webpage for this product.
    @constraint:String {maxLength: 5000}
    string url?;
|};

# 
public type Payment_method_details_paypal record {
    # Owner's email. Values are provided by PayPal directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? payer_email?;
    # PayPal account PayerID. This identifier uniquely identifies the PayPal customer.
    string? payer_id?;
    # Owner's full name. Values provided by PayPal directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? payer_name?;
    # The level of protection offered as defined by PayPal Seller Protection for Merchants, for this transaction.
    Paypal_seller_protection? seller_protection?;
    # A unique ID generated by PayPal for this transaction.
    string? transaction_id?;
};

# 
public type Discounts_resource_stackable_discount record {
    # ID of the coupon to create a new discount for.
    string|Coupon? coupon?;
    # ID of an existing discount on the object (or one of its ancestors) to reuse.
    string|Discount? discount?;
    # ID of the promotion code to create a new discount for.
    string|Promotion_code? promotion_code?;
};

public type Identity\.verification_session record {
    string? client_reference_id?;
    string? client_secret?;
    int created;
    string id;
    Gelato_session_last_error? last_error?;
    string|Identity\.verification_report? last_verification_report?;
    boolean livemode;
    record {|string...;|} metadata;
    "identity.verification_session" 'object;
    Gelato_verification_session_options? options?;
    Gelato_provided_details? provided_details?;
    Verification_session_redaction? redaction?;
    "canceled"|"processing"|"requires_input"|"verified" status;
    "document"|"id_number"|"verification_flow" 'type;
    string? url?;
    string verification_flow?;
    Gelato_verified_outputs? verified_outputs?;
};

# Generate a post-purchase Invoice for one-time payments.
public type invoice_creation_create_params record {
    boolean enabled;
    invoice_settings_params_1 invoice_data?;
};

# 
public type Invoice_mandate_options_card record {
    # Amount to be charged for future payments.
    int? amount?;
    # One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.
    "fixed"|"maximum"? amount_type?;
    # A description of the mandate or subscription that is meant to be displayed to the customer.
    string? description?;
};

public type invoice_pay_bodyExpandItemsString string;

public type scope_param_2 record {
    "account"|"user" 'type;
    @constraint:String {maxLength: 5000}
    string user?;
};

# Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.
public type scope_param_1 record {
    "account"|"user" 'type;
    @constraint:String {maxLength: 5000}
    string user?;
};

public type intent_confirm_body_1ExpandItemsString string;

# 
public type Payment_method_details_card_network_token record {
    # Indicates if Stripe used a network token, either user provided or Stripe managed when processing the transaction.
    boolean used;
};

@constraint:String {maxLength: 5000}
public type GetBalanceHistoryQueriesExpandItemsString string;

public type payment_method_options_param_8 record {
    "none" setup_future_usage?;
    boolean tos_shown_and_accepted?;
};

public type payment_method_options_param_9 record {
    ""|"manual" capture_method?;
    "cs-CZ"|"da-DK"|"de-AT"|"de-DE"|"de-LU"|"el-GR"|"en-GB"|"en-US"|"es-ES"|"fi-FI"|"fr-BE"|"fr-FR"|"fr-LU"|"hu-HU"|"it-IT"|"nl-BE"|"nl-NL"|"pl-PL"|"pt-PT"|"sk-SK"|"sv-SE" preferred_locale?;
    @constraint:String {maxLength: 127}
    string reference?;
    @constraint:String {maxLength: 32}
    string risk_correlation_id?;
    ""|"none"|"off_session" setup_future_usage?;
};

# Represents the Queries record for the operation: GetInvoiceitemsInvoiceitem
public type GetInvoiceitemsInvoiceitemQueries record {
    # Specifies which fields in the response should be expanded.
    GetInvoiceitemsInvoiceitemQueriesExpandItemsString[] expand?;
};

# 
public type Payment_links_resource_completion_behavior_redirect record {
    # The URL the customer will be redirected to after the purchase is complete.
    @constraint:String {maxLength: 5000}
    string url;
};

public type payout_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    payout_cancel_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_links_resource_shipping_address_collection record {
    # An array of two-letter ISO country codes representing which countries Checkout should provide as options for shipping locations. Unsupported country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI`.
    ("AC"|"AD"|"AE"|"AF"|"AG"|"AI"|"AL"|"AM"|"AO"|"AQ"|"AR"|"AT"|"AU"|"AW"|"AX"|"AZ"|"BA"|"BB"|"BD"|"BE"|"BF"|"BG"|"BH"|"BI"|"BJ"|"BL"|"BM"|"BN"|"BO"|"BQ"|"BR"|"BS"|"BT"|"BV"|"BW"|"BY"|"BZ"|"CA"|"CD"|"CF"|"CG"|"CH"|"CI"|"CK"|"CL"|"CM"|"CN"|"CO"|"CR"|"CV"|"CW"|"CY"|"CZ"|"DE"|"DJ"|"DK"|"DM"|"DO"|"DZ"|"EC"|"EE"|"EG"|"EH"|"ER"|"ES"|"ET"|"FI"|"FJ"|"FK"|"FO"|"FR"|"GA"|"GB"|"GD"|"GE"|"GF"|"GG"|"GH"|"GI"|"GL"|"GM"|"GN"|"GP"|"GQ"|"GR"|"GS"|"GT"|"GU"|"GW"|"GY"|"HK"|"HN"|"HR"|"HT"|"HU"|"ID"|"IE"|"IL"|"IM"|"IN"|"IO"|"IQ"|"IS"|"IT"|"JE"|"JM"|"JO"|"JP"|"KE"|"KG"|"KH"|"KI"|"KM"|"KN"|"KR"|"KW"|"KY"|"KZ"|"LA"|"LB"|"LC"|"LI"|"LK"|"LR"|"LS"|"LT"|"LU"|"LV"|"LY"|"MA"|"MC"|"MD"|"ME"|"MF"|"MG"|"MK"|"ML"|"MM"|"MN"|"MO"|"MQ"|"MR"|"MS"|"MT"|"MU"|"MV"|"MW"|"MX"|"MY"|"MZ"|"NA"|"NC"|"NE"|"NG"|"NI"|"NL"|"NO"|"NP"|"NR"|"NU"|"NZ"|"OM"|"PA"|"PE"|"PF"|"PG"|"PH"|"PK"|"PL"|"PM"|"PN"|"PR"|"PS"|"PT"|"PY"|"QA"|"RE"|"RO"|"RS"|"RU"|"RW"|"SA"|"SB"|"SC"|"SE"|"SG"|"SH"|"SI"|"SJ"|"SK"|"SL"|"SM"|"SN"|"SO"|"SR"|"SS"|"ST"|"SV"|"SX"|"SZ"|"TA"|"TC"|"TD"|"TF"|"TG"|"TH"|"TJ"|"TK"|"TL"|"TM"|"TN"|"TO"|"TR"|"TT"|"TV"|"TW"|"TZ"|"UA"|"UG"|"US"|"UY"|"UZ"|"VA"|"VC"|"VE"|"VG"|"VN"|"VU"|"WF"|"WS"|"XK"|"YE"|"YT"|"ZA"|"ZM"|"ZW"|"ZZ")[] allowed_countries;
};

# 
public type Payment_method_acss_debit record {
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Institution number of the bank account.
    string? institution_number?;
    # Last four digits of the bank account number.
    string? last4?;
    # Transit number of the bank account.
    string? transit_number?;
};

# Controls saved payment method settings for the session. Only available in `payment` and `subscription` mode.
public type saved_payment_method_options_param record {
    ("always"|"limited"|"unspecified")[] allow_redisplay_filters?;
    "disabled"|"enabled" payment_method_save?;
};

public type transaction_line_item_reversal record {
    int amount;
    int amount_tax;
    record {|string...;|} metadata?;
    @constraint:String {maxLength: 5000}
    string original_line_item;
    int quantity?;
    @constraint:String {maxLength: 500}
    string reference;
};

# 
public type Payment_method_details_interac_present record {
    # Card brand. Can be `interac`, `mastercard` or `visa`.
    string? brand?;
    # The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.
    string? cardholder_name?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Authorization response cryptogram.
    string? emv_auth_data?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    # ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.
    string? generated_card?;
    # The last four digits of the card.
    string? last4?;
    # Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? network?;
    # EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.
    Payment_method_details_interac_presentPreferredlocalesItemsString[]? preferred_locales?;
    # How card details were read in this transaction.
    "contact_emv"|"contactless_emv"|"contactless_magstripe_mode"|"magnetic_stripe_fallback"|"magnetic_stripe_track2"? read_method?;
    # A collection of fields required to be displayed on receipts. Only required for EMV transactions.
    Payment_method_details_interac_present_receipt? receipt?;
};

public type people_person_bodyExpandItemsString string;

# 
public type Tax_product_resource_tax_transaction_shipping_cost record {
    # The shipping amount in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If `tax_behavior=inclusive`, then this amount includes taxes. Otherwise, taxes were calculated on top of this amount.
    int amount;
    # The amount of tax calculated for shipping, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount_tax;
    # The ID of an existing [ShippingRate](https://stripe.com/docs/api/shipping_rates/object).
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
    # Specifies whether the `amount` includes taxes. If `tax_behavior=inclusive`, then the amount includes taxes.
    "exclusive"|"inclusive" tax_behavior;
    # The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for shipping.
    @constraint:String {maxLength: 5000}
    string tax_code;
};

@constraint:String {maxLength: 5000}
public type GetQuotesQuoteLineItemsQueriesExpandItemsString string;

public type payment_method_options_param_1 record {
    "none" setup_future_usage?;
};

public type payment_links_body record {|
    after_completion_params after_completion?;
    # Enables user redeemable promotion codes.
    boolean allow_promotion_codes?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Can only be applied when there are no line items with recurring prices.
    int application_fee_amount?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field.
    decimal application_fee_percent?;
    automatic_tax_params_1 automatic_tax?;
    # Configuration for collecting the customer's billing address. Defaults to `auto`.
    "auto"|"required" billing_address_collection?;
    consent_collection_params_1 consent_collection?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies) and supported by each line item's price.
    string currency?;
    # Collect additional information from your customer using custom fields. Up to 3 fields are supported.
    custom_field_param_1[] custom_fields?;
    custom_text_param custom_text?;
    # Configures whether [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link create a [Customer](https://stripe.com/docs/api/customers).
    "always"|"if_required" customer_creation?;
    # Specifies which fields in the response should be expanded.
    payment_links_bodyExpandItemsString[] expand?;
    # The custom message to be displayed to a customer when a payment link is no longer active.
    @constraint:String {maxLength: 500}
    string inactive_message?;
    invoice_creation_create_params invoice_creation?;
    # The line items representing what is being sold. Each line item represents an item being sold. Up to 20 line items are supported.
    line_items_create_params[] line_items;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. Metadata associated with this Payment Link will automatically be copied to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link.
    record {|string...;|} metadata?;
    # The account on behalf of which to charge.
    string on_behalf_of?;
    payment_intent_data_params_1 payment_intent_data?;
    # Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.This may occur if the Checkout Session includes a free trial or a discount.
    # 
    # Can only be set in `subscription` mode. Defaults to `always`.
    # 
    # If you'd like information on how to collect a payment method outside of Checkout, read the guide on [configuring subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).
    "always"|"if_required" payment_method_collection?;
    # The list of payment method types that customers can use. If no value is passed, Stripe will dynamically show relevant payment methods from your [payment method settings](https://dashboard.stripe.com/settings/payment_methods) (20+ payment methods [supported](https://stripe.com/docs/payments/payment-methods/integration-options#payment-method-product-support)).
    ("affirm"|"afterpay_clearpay"|"alipay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip")[] payment_method_types?;
    phone_number_collection_params_1 phone_number_collection?;
    restrictions_params restrictions?;
    shipping_address_collection_params_1 shipping_address_collection?;
    # The shipping rate options to apply to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link.
    shipping_option_params_1[] shipping_options?;
    # Describes the type of transaction being performed in order to customize relevant text on the page, such as the submit button. Changing this value will also affect the hostname in the [url](https://stripe.com/docs/api/payment_links/payment_links/object#url) property (example: `donate.stripe.com`).
    "auto"|"book"|"donate"|"pay" submit_type?;
    subscription_data_params_1 subscription_data?;
    tax_id_collection_params tax_id_collection?;
    transfer_data_params_1 transfer_data?;
|};

public type payment_method_options_param_2 record {
    "none"|"off_session" setup_future_usage?;
};

public type test_helpers_confirmation_tokens_bodyExpandItemsString string;

# 
public type Setup_intent_payment_method_options_card_mandate_options record {
    # Amount to be charged for future payments.
    int amount;
    # One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.
    "fixed"|"maximum" amount_type;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # A description of the mandate or subscription that is meant to be displayed to the customer.
    string? description?;
    # End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.
    int? end_date?;
    # Specifies payment frequency. One of `day`, `week`, `month`, `year`, or `sporadic`.
    "day"|"month"|"sporadic"|"week"|"year" interval;
    # The number of intervals between payments. For example, `interval=month` and `interval_count=3` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when `interval=sporadic`.
    int? interval_count?;
    # Unique identifier for the mandate or subscription.
    @constraint:String {maxLength: 80}
    string reference;
    # Start date of the mandate or subscription. Start date should not be lesser than yesterday.
    int start_date;
    # Specifies the type of mandates supported. Possible values are `india`.
    ("india")[]? supported_types?;
};

public type payment_method_options_param_3 record {
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# 
public type Offline_acceptance record {
};

public type payment_method_options_param_4 record {
    int expires_after_days?;
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# A product_feature represents an attachment between a feature and a product.
# When a product is purchased that has a feature attached, Stripe will create an entitlement to the feature for the purchasing customer.
public type Product_feature record {
    Entitlements\.feature entitlement_feature;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "product_feature" 'object;
};

public type payment_method_options_param_5 record {
    installments_param installments?;
    "any"|"automatic"|"challenge" request_three_d_secure?;
    "off_session"|"on_session" setup_future_usage?;
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix_kana?;
    @constraint:String {maxLength: 17}
    string statement_descriptor_suffix_kanji?;
};

# Result from a document check
public type Gelato_document_report record {
    # Address as it appears in the document.
    Address? address?;
    # Date of birth as it appears in the document.
    Gelato_data_document_report_date_of_birth? dob?;
    # Details on the verification error. Present when status is `unverified`.
    Gelato_document_report_error? 'error?;
    # Expiration date of the document.
    Gelato_data_document_report_expiration_date? expiration_date?;
    # Array of [File](https://stripe.com/docs/api/files) ids containing images for this document.
    Gelato_document_reportFilesItemsString[]? files?;
    # First name as it appears in the document.
    string? first_name?;
    # Issued date of the document.
    Gelato_data_document_report_issued_date? issued_date?;
    # Issuing country of the document.
    string? issuing_country?;
    # Last name as it appears in the document.
    string? last_name?;
    # Document ID number.
    string? number?;
    # Status of this `document` check.
    "unverified"|"verified" status;
    # Type of the document.
    "driving_license"|"id_card"|"passport"? 'type?;
};

public type invoice_item_preview_params record {
    int amount?;
    string currency?;
    @constraint:String {maxLength: 5000}
    string description?;
    boolean discountable?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string invoiceitem?;
    record {|string...;|}|"" metadata?;
    period_1 period?;
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data_1 price_data?;
    int quantity?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    string|"" tax_code?;
    TaxratesItemsString[]|"" tax_rates?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type payment_method_options_param_6 record {
    bank_transfer_param bank_transfer?;
    "bank_transfer" funding_type?;
    "none" setup_future_usage?;
};

public type payment_method_options_param_7 record {
    int expires_after_days?;
    "none" setup_future_usage?;
};

# Represents a cart to be displayed on the reader
public type Terminal_reader_reader_resource_cart record {
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # List of line items in the cart.
    Terminal_reader_reader_resource_line_item[] line_items;
    # Tax amount for the entire cart. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int? tax?;
    # Total amount for the entire cart, including tax. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int total;
};

# 
public type Balance_amount_net record {
    # Balance amount.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Breakdown of balance by destination.
    Balance_net_available[] net_available?;
    Balance_amount_by_source_type source_types?;
};

# A `Transfer` object is created when you move funds between Stripe accounts as
# part of Connect.
# 
# Before April 6, 2017, transfers also represented movement of funds from a
# Stripe account to a card or bank account. This behavior has since been split
# out into a [Payout](https://stripe.com/docs/api#payout_object) object, with corresponding payout endpoints. For more
# information, read about the
# [transfer/payout split](https://stripe.com/docs/transfer-payout-split).
# 
# Related guide: [Creating separate charges and transfers](https://stripe.com/docs/connect/separate-charges-and-transfers)
public type Transfer record {
    # Amount in cents (or local equivalent) to be transferred.
    int amount;
    # Amount in cents (or local equivalent) reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).
    int amount_reversed;
    # Balance transaction that describes the impact of this transfer on your account balance.
    string|Balance_transaction? balance_transaction?;
    # Time that this record of the transfer was first created.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # ID of the Stripe account the transfer was sent to.
    string|Account? destination?;
    # If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer.
    string|Charge destination_payment?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "transfer" 'object;
    TransferReversalList_1 reversals;
    # Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false.
    boolean reversed;
    # ID of the charge or payment that was used to fund the transfer. If null, the transfer was funded from the available balance.
    string|Charge? source_transaction?;
    # The source balance this transfer came from. One of `card`, `fpx`, or `bank_account`.
    @constraint:String {maxLength: 5000}
    string source_type?;
    # A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.
    string? transfer_group?;
};

# 
public type EntitlementsResourceProductFeatureList record {
    Product_feature[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Account Links are the means by which a Connect platform grants a connected account permission to access
# Stripe-hosted applications, such as Connect Onboarding.
# 
# Related guide: [Connect Onboarding](https://stripe.com/docs/connect/custom/hosted-onboarding)
public type Account_link record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The timestamp at which this account link will expire.
    int expires_at;
    # String representing the object's type. Objects of the same type share the same value.
    "account_link" 'object;
    # The URL for the account link.
    @constraint:String {maxLength: 5000}
    string url;
};

# ABA Records contain U.S. bank account details per the ABA format.
public type Funding_instructions_bank_transfer_aba_record record {
    # The ABA account number
    @constraint:String {maxLength: 5000}
    string account_number;
    # The bank name
    @constraint:String {maxLength: 5000}
    string bank_name;
    # The ABA routing number
    @constraint:String {maxLength: 5000}
    string routing_number;
};

public type account_disconnect_body record {|
    # Specifies which fields in the response should be expanded.
    account_disconnect_bodyExpandItemsString[] expand?;
|};

# When you enable this parameter, this SetupIntent accepts payment methods that you enable in the Dashboard and that are compatible with its other parameters.
public type automatic_payment_methods_param_1 record {
    "always"|"never" allow_redirects?;
    boolean enabled;
};

public type features_id_bodyExpandItemsString string;

public type authorization_controls_param_v2BlockedmerchantcountriesItemsString string;

# An AccountSession allows a Connect platform to grant access to a connected account in Connect embedded components.
# 
# We recommend that you create an AccountSession each time you need to display an embedded component
# to your user. Do not save AccountSessions to your database as they expire relatively
# quickly, and cannot be used more than once.
# 
# Related guide: [Connect embedded components](https://stripe.com/docs/connect/get-started-connect-embedded-components)
public type Account_session record {
    # The ID of the account the AccountSession was created for
    @constraint:String {maxLength: 5000}
    string account;
    # The client secret of this AccountSession. Used on the client to set up secure access to the given `account`.
    # 
    # The client secret can be used to provide access to `account` from your frontend. It should not be stored, logged, or exposed to anyone other than the connected account. Make sure that you have TLS enabled on any page that includes the client secret.
    # 
    # Refer to our docs to [setup Connect embedded components](https://stripe.com/docs/connect/get-started-connect-embedded-components) and learn about how `client_secret` should be handled.
    @constraint:String {maxLength: 5000}
    string client_secret;
    Connect_embedded_account_session_create_components components;
    # The timestamp at which this AccountSession will expire.
    int expires_at;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "account_session" 'object;
};

# Represents the Queries record for the operation: GetMandatesMandate
public type GetMandatesMandateQueries record {
    # Specifies which fields in the response should be expanded.
    GetMandatesMandateQueriesExpandItemsString[] expand?;
};

public type trial_settings_config record {
    end_behavior end_behavior;
};

# 
public type Issuing_network_token_visa record {
    # A unique reference ID from Visa to represent the card account number.
    @constraint:String {maxLength: 5000}
    string card_reference_id;
    # The network-unique identifier for the token.
    @constraint:String {maxLength: 5000}
    string token_reference_id;
    # The ID of the entity requesting tokenization, specific to Visa.
    @constraint:String {maxLength: 5000}
    string token_requestor_id;
    # Degree of risk associated with the token between `01` and `99`, with higher number indicating higher risk. A `00` value indicates the token was not scored by Visa.
    @constraint:String {maxLength: 5000}
    string token_risk_score?;
};

# 
public type Payment_links_resource_payment_method_reuse_agreement record {
    # Determines the position and visibility of the payment method reuse agreement in the UI. When set to `auto`, Stripe's defaults will be used.
    # 
    # When set to `hidden`, the payment method reuse agreement text will always be hidden in the UI.
    "auto"|"hidden" position;
};

public type us_bank_account_source_params record {
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    @constraint:String {maxLength: 5000}
    string account_number?;
    @constraint:String {maxLength: 5000}
    string routing_number?;
};

# Represents the Queries record for the operation: GetFileLinks
public type GetFileLinksQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetFileLinksQueriesExpandItemsString[] expand?;
    # Filter links by their expiration status. By default, Stripe returns all links.
    boolean expired?;
    # Only return links for the given file.
    @constraint:String {maxLength: 5000}
    string file?;
    # Only return links that were created during the given date interval.
    created_11 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

# 
public type Deleted_bank_account record {
    # Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.
    string? currency?;
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "bank_account" 'object;
};

# 
public type Tax_product_registrations_resource_country_options record {
    Tax_product_registrations_resource_country_options_default ae?;
    Tax_product_registrations_resource_country_options_europe at?;
    Tax_product_registrations_resource_country_options_default au?;
    Tax_product_registrations_resource_country_options_europe be?;
    Tax_product_registrations_resource_country_options_europe bg?;
    Tax_product_registrations_resource_country_options_default bh?;
    Tax_product_registrations_resource_country_options_canada ca?;
    Tax_product_registrations_resource_country_options_default ch?;
    Tax_product_registrations_resource_country_options_simplified cl?;
    Tax_product_registrations_resource_country_options_simplified co?;
    Tax_product_registrations_resource_country_options_europe cy?;
    Tax_product_registrations_resource_country_options_europe cz?;
    Tax_product_registrations_resource_country_options_europe de?;
    Tax_product_registrations_resource_country_options_europe dk?;
    Tax_product_registrations_resource_country_options_europe ee?;
    Tax_product_registrations_resource_country_options_simplified eg?;
    Tax_product_registrations_resource_country_options_europe es?;
    Tax_product_registrations_resource_country_options_europe fi?;
    Tax_product_registrations_resource_country_options_europe fr?;
    Tax_product_registrations_resource_country_options_default gb?;
    Tax_product_registrations_resource_country_options_simplified ge?;
    Tax_product_registrations_resource_country_options_europe gr?;
    Tax_product_registrations_resource_country_options_europe hr?;
    Tax_product_registrations_resource_country_options_europe hu?;
    Tax_product_registrations_resource_country_options_simplified id?;
    Tax_product_registrations_resource_country_options_europe ie?;
    Tax_product_registrations_resource_country_options_default 'is?;
    Tax_product_registrations_resource_country_options_europe it?;
    Tax_product_registrations_resource_country_options_default jp?;
    Tax_product_registrations_resource_country_options_simplified ke?;
    Tax_product_registrations_resource_country_options_simplified kr?;
    Tax_product_registrations_resource_country_options_simplified kz?;
    Tax_product_registrations_resource_country_options_europe lt?;
    Tax_product_registrations_resource_country_options_europe lu?;
    Tax_product_registrations_resource_country_options_europe lv?;
    Tax_product_registrations_resource_country_options_europe mt?;
    Tax_product_registrations_resource_country_options_simplified mx?;
    Tax_product_registrations_resource_country_options_simplified my?;
    Tax_product_registrations_resource_country_options_simplified ng?;
    Tax_product_registrations_resource_country_options_europe nl?;
    Tax_product_registrations_resource_country_options_default no?;
    Tax_product_registrations_resource_country_options_default nz?;
    Tax_product_registrations_resource_country_options_default om?;
    Tax_product_registrations_resource_country_options_europe pl?;
    Tax_product_registrations_resource_country_options_europe pt?;
    Tax_product_registrations_resource_country_options_europe ro?;
    Tax_product_registrations_resource_country_options_simplified sa?;
    Tax_product_registrations_resource_country_options_europe se?;
    Tax_product_registrations_resource_country_options_default sg?;
    Tax_product_registrations_resource_country_options_europe si?;
    Tax_product_registrations_resource_country_options_europe sk?;
    Tax_product_registrations_resource_country_options_simplified th?;
    Tax_product_registrations_resource_country_options_simplified tr?;
    Tax_product_registrations_resource_country_options_united_states us?;
    Tax_product_registrations_resource_country_options_simplified vn?;
    Tax_product_registrations_resource_country_options_default za?;
};

public type line_item_create_params record {
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string price?;
    price_data price_data?;
    int quantity?;
    TaxratesItemsString[]|"" tax_rates?;
};

public type subscription_data_invoice_settings_params record {
    param_3 issuer?;
};

public type account_config_param record {
    boolean enabled;
    account_features_param features?;
};

public type Financial_connections\.account_ownership record {
    int created;
    string id;
    "financial_connections.account_ownership" 'object;
    BankConnectionsResourceOwnerList_1 owners;
};

# 
public type Portal_flows_flow_subscription_update record {
    # The ID of the subscription to be updated.
    @constraint:String {maxLength: 5000}
    string subscription;
};

# 
public type Payment_method_options_promptpay record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type payment_method_configurations_body record {|
    payment_method_param_2 acss_debit?;
    payment_method_param_3 affirm?;
    payment_method_param_4 afterpay_clearpay?;
    payment_method_param_5 alipay?;
    payment_method_param_6 amazon_pay?;
    payment_method_param_7 apple_pay?;
    payment_method_param_8 apple_pay_later?;
    payment_method_param_9 au_becs_debit?;
    payment_method_param_10 bacs_debit?;
    payment_method_param_11 bancontact?;
    payment_method_param_12 blik?;
    payment_method_param_13 boleto?;
    payment_method_param_14 card?;
    payment_method_param_15 cartes_bancaires?;
    payment_method_param_16 cashapp?;
    payment_method_param_17 customer_balance?;
    payment_method_param_18 eps?;
    # Specifies which fields in the response should be expanded.
    payment_method_configurations_bodyExpandItemsString[] expand?;
    payment_method_param_19 fpx?;
    payment_method_param_20 giropay?;
    payment_method_param_21 google_pay?;
    payment_method_param_22 grabpay?;
    payment_method_param_23 ideal?;
    payment_method_param_24 jcb?;
    payment_method_param_25 klarna?;
    payment_method_param_26 konbini?;
    payment_method_param_27 link?;
    payment_method_param_28 mobilepay?;
    payment_method_param_29 multibanco?;
    # Configuration name.
    @constraint:String {maxLength: 100}
    string name?;
    payment_method_param_30 oxxo?;
    payment_method_param_31 p24?;
    # Configuration's parent configuration. Specify to create a child configuration.
    @constraint:String {maxLength: 100}
    string parent?;
    payment_method_param_32 paynow?;
    payment_method_param_33 paypal?;
    payment_method_param_34 promptpay?;
    payment_method_param_35 revolut_pay?;
    payment_method_param_36 sepa_debit?;
    payment_method_param_37 sofort?;
    payment_method_param_38 swish?;
    payment_method_param_39 us_bank_account?;
    payment_method_param_40 wechat_pay?;
    payment_method_param_41 zip?;
|};

public type phase_configuration_params record {
    add_invoice_item_entry[] add_invoice_items?;
    decimal application_fee_percent?;
    automatic_tax_config_1 automatic_tax?;
    "automatic"|"phase_start" billing_cycle_anchor?;
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    "charge_automatically"|"send_invoice" collection_method?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    string|"" description?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    int|"now" end_date?;
    invoice_settings invoice_settings?;
    configuration_item_params[] items;
    int iterations?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int|"now" start_date?;
    transfer_data_specs_2 transfer_data?;
    boolean trial?;
    int|"now" trial_end?;
};

# 
public type Payment_flows_amount_details_resource_tip record {
    # Portion of the amount that corresponds to a tip.
    int amount?;
};

# Point in Time
public type Gelato_data_verified_outputs_date record {
    # Numerical day between 1 and 31.
    int? day?;
    # Numerical month between 1 and 12.
    int? month?;
    # The four-digit year.
    int? year?;
};

public type readers_reader_bodyExpandItemsString string;

public type payment_methods_body record {|
    payment_method_param_42 acss_debit?;
    # If this is an `affirm` PaymentMethod, this hash contains details about the Affirm payment method.
    record {} affirm?;
    # If this is an `AfterpayClearpay` PaymentMethod, this hash contains details about the AfterpayClearpay payment method.
    record {} afterpay_clearpay?;
    # If this is an `Alipay` PaymentMethod, this hash contains details about the Alipay payment method.
    record {} alipay?;
    # This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to `unspecified`.
    "always"|"limited"|"unspecified" allow_redisplay?;
    # If this is a AmazonPay PaymentMethod, this hash contains details about the AmazonPay payment method.
    record {} amazon_pay?;
    param_14 au_becs_debit?;
    param_15 bacs_debit?;
    # If this is a `bancontact` PaymentMethod, this hash contains details about the Bancontact payment method.
    record {} bancontact?;
    billing_details_inner_params_1 billing_details?;
    # If this is a `blik` PaymentMethod, this hash contains details about the BLIK payment method.
    record {} blik?;
    param_16 boleto?;
    # If this is a `card` PaymentMethod, this hash contains the user's card details. For backwards compatibility, you can alternatively provide a Stripe token (e.g., for Apple Pay, Amex Express Checkout, or legacy Checkout) into the card hash with format `card: {token: "tok_visa"}`. When providing a card number, you must meet the requirements for [PCI compliance](https://stripe.com/docs/security#validating-pci-compliance). We strongly recommend using Stripe.js instead of interacting with this API directly.
    record {string cvc?; int exp_month; int exp_year; record {"cartes_bancaires"|"mastercard"|"visa" preferred?;} networks?; string number;}|record {string token;} card?;
    # If this is a `cashapp` PaymentMethod, this hash contains details about the Cash App Pay payment method.
    record {} cashapp?;
    # The `Customer` to whom the original PaymentMethod is attached.
    @constraint:String {maxLength: 5000}
    string customer?;
    # If this is a `customer_balance` PaymentMethod, this hash contains details about the CustomerBalance payment method.
    record {} customer_balance?;
    param_17 eps?;
    # Specifies which fields in the response should be expanded.
    payment_methods_bodyExpandItemsString[] expand?;
    param_18 fpx?;
    # If this is a `giropay` PaymentMethod, this hash contains details about the Giropay payment method.
    record {} giropay?;
    # If this is a `grabpay` PaymentMethod, this hash contains details about the GrabPay payment method.
    record {} grabpay?;
    param_19 ideal?;
    # If this is an `interac_present` PaymentMethod, this hash contains details about the Interac Present payment method.
    record {} interac_present?;
    param_20 klarna?;
    # If this is a `konbini` PaymentMethod, this hash contains details about the Konbini payment method.
    record {} konbini?;
    # If this is an `Link` PaymentMethod, this hash contains details about the Link payment method.
    record {} link?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # If this is a `mobilepay` PaymentMethod, this hash contains details about the MobilePay payment method.
    record {} mobilepay?;
    # If this is a `multibanco` PaymentMethod, this hash contains details about the Multibanco payment method.
    record {} multibanco?;
    # If this is an `oxxo` PaymentMethod, this hash contains details about the OXXO payment method.
    record {} oxxo?;
    param_21 p24?;
    # The PaymentMethod to share.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # If this is a `paynow` PaymentMethod, this hash contains details about the PayNow payment method.
    record {} paynow?;
    # If this is a `paypal` PaymentMethod, this hash contains details about the PayPal payment method.
    record {} paypal?;
    # If this is a `pix` PaymentMethod, this hash contains details about the Pix payment method.
    record {} pix?;
    # If this is a `promptpay` PaymentMethod, this hash contains details about the PromptPay payment method.
    record {} promptpay?;
    radar_options_with_hidden_options radar_options?;
    # If this is a `Revolut Pay` PaymentMethod, this hash contains details about the Revolut Pay payment method.
    record {} revolut_pay?;
    param_22 sepa_debit?;
    param_23 sofort?;
    # If this is a `swish` PaymentMethod, this hash contains details about the Swish payment method.
    record {} swish?;
    # If this is a TWINT PaymentMethod, this hash contains details about the TWINT payment method.
    record {} twint?;
    # The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type?;
    payment_method_param_43 us_bank_account?;
    # If this is an `wechat_pay` PaymentMethod, this hash contains details about the wechat_pay payment method.
    record {} wechat_pay?;
    # If this is a `zip` PaymentMethod, this hash contains details about the Zip payment method.
    record {} zip?;
|};

# 
public type Issuing_authorization_fleet_data record {
    # Answers to prompts presented to the cardholder at the point of sale. Prompted fields vary depending on the configuration of your physical fleet cards. Typical points of sale support only numeric entry.
    Issuing_authorization_fleet_cardholder_prompt_data? cardholder_prompt_data?;
    # The type of purchase.
    "fuel_and_non_fuel_purchase"|"fuel_purchase"|"non_fuel_purchase"? purchase_type?;
    # More information about the total amount. Typically this information is received from the merchant after the authorization has been approved and the fuel dispensed. This information is not guaranteed to be accurate as some merchants may provide unreliable data.
    Issuing_authorization_fleet_reported_breakdown? reported_breakdown?;
    # The type of fuel service.
    "full_service"|"non_fuel_transaction"|"self_service"? service_type?;
};

# 
public type Payment_intent_type_specific_payment_method_options_client record {
    # Controls when the funds will be captured from the customer's account.
    "manual"|"manual_preferred" capture_method?;
    Payment_flows_installment_options installments?;
    # When enabled, using a card that is attached to a customer will require the CVC to be provided again (i.e. using the cvc_token parameter).
    boolean require_cvc_recollection?;
    Payment_method_options_card_present_routing routing?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# 
public type Payment_intent_next_action_swish_handle_redirect_or_display_qr_code record {
    # The URL to the hosted Swish instructions page, which allows customers to view the QR code.
    @constraint:String {maxLength: 5000}
    string hosted_instructions_url;
    Payment_intent_next_action_swish_qr_code qr_code;
};

# Represents the Queries record for the operation: GetIssuingSettlementsSettlement
public type GetIssuingSettlementsSettlementQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingSettlementsSettlementQueriesExpandItemsString[] expand?;
};

# Settings for automatic tax lookup for this invoice.
public type automatic_tax_param record {
    boolean enabled;
    param liability?;
};

public type apps_secrets_body record {|
    # Specifies which fields in the response should be expanded.
    apps_secrets_bodyExpandItemsString[] expand?;
    # The Unix timestamp for the expiry time of the secret, after which the secret deletes.
    int expires_at?;
    # A name for the secret that's unique within the scope.
    @constraint:String {maxLength: 5000}
    string name;
    # The plaintext secret value to be stored.
    @constraint:String {maxLength: 5000}
    string payload;
    scope_param_1 scope;
|};

# 
public type IssuingPhysicalBundleList record {
    Issuing\.physical_bundle[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/physical_bundles`}
    string url;
};

public type account_persons_bodyExpandItemsString string;

# 
public type Payment_method_options_twint record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type line_item_paramsDynamictaxratesItemsString string;

public type shipping_return_body record {|
    # Specifies which fields in the response should be expanded.
    shipping_return_bodyExpandItemsString[] expand?;
|};

# 
public type BalanceTransactionsList record {
    Balance_transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/balance_transactions`}
    string url;
};

# Information about the items and shipping associated with the source. Required for transactional credit (for example Klarna) sources before you can charge it.
public type order_params record {
    order_item_specs[] items?;
    order_shipping shipping?;
};

public type after_completion_confirmation_page_params record {
    @constraint:String {maxLength: 500}
    string custom_message?;
};

@constraint:String {maxLength: 5000}
public type GetCreditNotesIdQueriesExpandItemsString string;

# Each customer has a [`balance`](https://stripe.com/docs/api/customers/object#customer_object-balance) that is
# automatically applied to future invoices and payments using the `customer_balance` payment method.
# Customers can fund this balance by initiating a bank transfer to any account in the
# `financial_addresses` field.
# Related guide: [Customer balance funding instructions](https://stripe.com/docs/payments/customer-balance/funding-instructions)
public type Funding_instructions record {
    Funding_instructions_bank_transfer bank_transfer;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @constraint:String {maxLength: 5000}
    string currency;
    # The `funding_type` of the returned instructions
    "bank_transfer" funding_type;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "funding_instructions" 'object;
};

# 
public type Payment_method_affirm record {
};

# A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.
public type payment_intent_data_params record {
    int application_fee_amount?;
    "automatic"|"automatic_async"|"manual" capture_method?;
    @constraint:String {maxLength: 1000}
    string description?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    string receipt_email?;
    "off_session"|"on_session" setup_future_usage?;
    shipping shipping?;
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_params transfer_data?;
    string transfer_group?;
};

# 
public type Tax_product_resource_line_item_tax_rate_details record {
    # A localized display name for tax type, intended to be human-readable. For example, "Local Sales and Use Tax", "Value-added tax (VAT)", or "Umsatzsteuer (USt.)".
    @constraint:String {maxLength: 5000}
    string display_name;
    # The tax rate percentage as a string. For example, 8.5% is represented as "8.5".
    @constraint:String {maxLength: 5000}
    string percentage_decimal;
    # The tax type, such as `vat` or `sales_tax`.
    "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type;
};

# Information about the owner of the payment instrument that may be used or required by particular source types.
public type owner_1 record {
    source_address address?;
    string email?;
    @constraint:String {maxLength: 5000}
    string name?;
    @constraint:String {maxLength: 5000}
    string phone?;
};

# 
public type Source_owner record {
    # Owner's address.
    Address? address?;
    # Owner's email address.
    string? email?;
    # Owner's full name.
    string? name?;
    # Owner's phone number (including extension).
    string? phone?;
    # Verified owner's address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? verified_address?;
    # Verified owner's email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_email?;
    # Verified owner's full name. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
    # Verified owner's phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_phone?;
};

# 
public type Issuing_authorization_verification_data record {
    # Whether the cardholder provided an address first line and if it matched the cardholder’s `billing.address.line1`.
    "match"|"mismatch"|"not_provided" address_line1_check;
    # Whether the cardholder provided a postal code and if it matched the cardholder’s `billing.address.postal_code`.
    "match"|"mismatch"|"not_provided" address_postal_code_check;
    # The exemption applied to this authorization.
    Issuing_authorization_authentication_exemption? authentication_exemption?;
    # Whether the cardholder provided a CVC and if it matched Stripe’s record.
    "match"|"mismatch"|"not_provided" cvc_check;
    # Whether the cardholder provided an expiry date and if it matched Stripe’s record.
    "match"|"mismatch"|"not_provided" expiry_check;
    # The postal code submitted as part of the authorization used for postal code verification.
    string? postal_code?;
    # 3D Secure details.
    Issuing_authorization_three_d_secure? three_d_secure?;
};

# Represents the Queries record for the operation: GetAppsSecretsFind
public type GetAppsSecretsFindQueries record {
    # Specifies which fields in the response should be expanded.
    GetAppsSecretsFindQueriesExpandItemsString[] expand?;
    # Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.
    scope_param_2 scope;
    # A name for the secret that's unique within the scope.
    @constraint:String {maxLength: 5000}
    string name;
};

# All invoices will be billed using the specified settings.
public type quote_param record {
    int days_until_due?;
    param_3 issuer?;
};

# Details on the legal guardian's acceptance of the required Stripe agreements.
public type person_additional_tos_acceptances_specs record {
    settings_terms_of_service_specs account?;
};

# 
public type Ephemeral_key record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Time at which the key will expire. Measured in seconds since the Unix epoch.
    int expires;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "ephemeral_key" 'object;
    # The key's secret. You can use this value to make authorized requests to the Stripe API.
    @constraint:String {maxLength: 5000}
    string secret?;
};

# When creating a subscription or subscription schedule, the specified configuration data will be used. There must be at least one line item with a recurring price for a subscription or subscription schedule to be created. A subscription schedule is created if `subscription_data[effective_date]` is present and in the future, otherwise a subscription is created.
public type subscription_data_update_params_1 record {
    string|"" description?;
    "current_period_end"|int|"" effective_date?;
    record {|string...;|} metadata?;
    int|"" trial_period_days?;
};

# 
public type Customer_tax record {
    # Surfaces if automatic tax computation is possible given the current customer location information.
    "failed"|"not_collecting"|"supported"|"unrecognized_location" automatic_tax;
    # A recent IP address of the customer used for tax reporting and tax location inference.
    string? ip_address?;
    # The customer's location as identified by Stripe Tax.
    Customer_tax_location? location?;
};

public type Billing\.meter_event record {
    int created;
    string event_name;
    string identifier;
    boolean livemode;
    "billing.meter_event" 'object;
    record {|string...;|} payload;
    int timestamp;
};

# 
public type Connect_collection_transfer record {
    # Amount transferred, in cents (or local equivalent).
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the account that funds are being collected for.
    string|Account destination;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "connect_collection_transfer" 'object;
};

# 
public type Payment_method_options_oxxo record {
    # The number of calendar days before an OXXO invoice expires. For example, if you create an OXXO invoice on Monday and you set expires_after_days to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City time.
    int expires_after_days;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type shipping record {
    address address;
    @constraint:String {maxLength: 5000}
    string carrier?;
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string tracking_number?;
};

# 
public type Platform_earning_fee_source record {
    # Charge ID that created this application fee.
    @constraint:String {maxLength: 5000}
    string charge?;
    # Payout ID that created this application fee.
    @constraint:String {maxLength: 5000}
    string payout?;
    # Type of object that created the application fee, either `charge` or `payout`.
    "charge"|"payout" 'type;
};

@constraint:String {maxLength: 5000}
public type GetTerminalReadersReaderQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Person_future_requirementsPendingverificationItemsString string;

# Configuration for collecting the customer's shipping address.
public type shipping_address_collection_params_1 record {
    ("AC"|"AD"|"AE"|"AF"|"AG"|"AI"|"AL"|"AM"|"AO"|"AQ"|"AR"|"AT"|"AU"|"AW"|"AX"|"AZ"|"BA"|"BB"|"BD"|"BE"|"BF"|"BG"|"BH"|"BI"|"BJ"|"BL"|"BM"|"BN"|"BO"|"BQ"|"BR"|"BS"|"BT"|"BV"|"BW"|"BY"|"BZ"|"CA"|"CD"|"CF"|"CG"|"CH"|"CI"|"CK"|"CL"|"CM"|"CN"|"CO"|"CR"|"CV"|"CW"|"CY"|"CZ"|"DE"|"DJ"|"DK"|"DM"|"DO"|"DZ"|"EC"|"EE"|"EG"|"EH"|"ER"|"ES"|"ET"|"FI"|"FJ"|"FK"|"FO"|"FR"|"GA"|"GB"|"GD"|"GE"|"GF"|"GG"|"GH"|"GI"|"GL"|"GM"|"GN"|"GP"|"GQ"|"GR"|"GS"|"GT"|"GU"|"GW"|"GY"|"HK"|"HN"|"HR"|"HT"|"HU"|"ID"|"IE"|"IL"|"IM"|"IN"|"IO"|"IQ"|"IS"|"IT"|"JE"|"JM"|"JO"|"JP"|"KE"|"KG"|"KH"|"KI"|"KM"|"KN"|"KR"|"KW"|"KY"|"KZ"|"LA"|"LB"|"LC"|"LI"|"LK"|"LR"|"LS"|"LT"|"LU"|"LV"|"LY"|"MA"|"MC"|"MD"|"ME"|"MF"|"MG"|"MK"|"ML"|"MM"|"MN"|"MO"|"MQ"|"MR"|"MS"|"MT"|"MU"|"MV"|"MW"|"MX"|"MY"|"MZ"|"NA"|"NC"|"NE"|"NG"|"NI"|"NL"|"NO"|"NP"|"NR"|"NU"|"NZ"|"OM"|"PA"|"PE"|"PF"|"PG"|"PH"|"PK"|"PL"|"PM"|"PN"|"PR"|"PS"|"PT"|"PY"|"QA"|"RE"|"RO"|"RS"|"RU"|"RW"|"SA"|"SB"|"SC"|"SE"|"SG"|"SH"|"SI"|"SJ"|"SK"|"SL"|"SM"|"SN"|"SO"|"SR"|"SS"|"ST"|"SV"|"SX"|"SZ"|"TA"|"TC"|"TD"|"TF"|"TG"|"TH"|"TJ"|"TK"|"TL"|"TM"|"TN"|"TO"|"TR"|"TT"|"TV"|"TW"|"TZ"|"UA"|"UG"|"US"|"UY"|"UZ"|"VA"|"VC"|"VE"|"VG"|"VN"|"VU"|"WF"|"WS"|"XK"|"YE"|"YT"|"ZA"|"ZM"|"ZW"|"ZZ")[] allowed_countries;
};

# 
public type Payment_method_amazon_pay record {
};

# Represents an action performed by the reader
public type Terminal_reader_reader_resource_reader_action record {
    # Failure code, only set if status is `failed`.
    string? failure_code?;
    # Detailed failure message, only set if status is `failed`.
    string? failure_message?;
    Terminal_reader_reader_resource_process_payment_intent_action process_payment_intent?;
    Terminal_reader_reader_resource_process_setup_intent_action process_setup_intent?;
    Terminal_reader_reader_resource_refund_payment_action refund_payment?;
    Terminal_reader_reader_resource_set_reader_display_action set_reader_display?;
    # Status of the action performed by the reader.
    "failed"|"in_progress"|"succeeded" status;
    # Type of action performed by the reader.
    "process_payment_intent"|"process_setup_intent"|"refund_payment"|"set_reader_display" 'type;
};

public type customers_customer_body record {|
    # The customer's address.
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    # An integer amount in cents (or local equivalent) that represents the customer's current balance, which affect the customer's future invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.
    int balance?;
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; string country; string currency?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    # A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string cvc?; int exp_month; int exp_year; record {|string...;|} metadata?; string name?; string number; "card" 'object?;}|string card?;
    cash_balance_param cash_balance?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    # ID of Alipay account to make the customer's new default for invoice payments.
    @constraint:String {maxLength: 500}
    string default_alipay_account?;
    # ID of bank account to make the customer's new default for invoice payments.
    @constraint:String {maxLength: 500}
    string default_bank_account?;
    # ID of card to make the customer's new default for invoice payments.
    @constraint:String {maxLength: 500}
    string default_card?;
    # If you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/update#update_customer-invoice_settings-default_payment_method) parameter.
    # 
    # Provide the ID of a payment source already attached to this customer to make it this customer's default payment source.
    # 
    # If you want to add a new payment source and make it the default, see the [source](https://stripe.com/docs/api/customers/update#update_customer-source) property.
    @constraint:String {maxLength: 500}
    string default_source?;
    # An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
    @constraint:String {maxLength: 5000}
    string description?;
    # Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.
    @constraint:String {maxLength: 512}
    string email?;
    # Specifies which fields in the response should be expanded.
    customers_customer_bodyExpandItemsString[] expand?;
    # The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.
    @constraint:String {maxLength: 5000}
    string invoice_prefix?;
    customer_param invoice_settings?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The customer's full name or business name.
    @constraint:String {maxLength: 256}
    string name?;
    # The sequence to be used on the customer's next invoice. Defaults to 1.
    int next_invoice_sequence?;
    # The customer's phone number.
    @constraint:String {maxLength: 20}
    string phone?;
    # Customer's preferred languages, ordered by preference.
    customers_customer_bodyPreferredlocalesItemsString[] preferred_locales?;
    # The ID of a promotion code to apply to the customer. The customer will have a discount applied on all recurring payments. Charges you create through the API will not have the discount.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # The customer's shipping information. Appears on invoices emailed to this customer.
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string phone?;}|"" shipping?;
    @constraint:String {maxLength: 5000}
    string 'source?;
    tax_param tax?;
    # The customer's tax exemption. One of `none`, `exempt`, or `reverse`.
    ""|"exempt"|"none"|"reverse" tax_exempt?;
|};

# 
public type Issuing_cardholder_individual record {
    # Information related to the card_issuing program for this cardholder.
    Issuing_cardholder_card_issuing? card_issuing?;
    # The date of birth of this cardholder.
    Issuing_cardholder_individual_dob? dob?;
    # The first name of this cardholder. Required before activating Cards. This field cannot contain any numbers, special characters (except periods, commas, hyphens, spaces and apostrophes) or non-latin letters.
    string? first_name?;
    # The last name of this cardholder. Required before activating Cards. This field cannot contain any numbers, special characters (except periods, commas, hyphens, spaces and apostrophes) or non-latin letters.
    string? last_name?;
    # Government-issued ID document for this cardholder.
    Issuing_cardholder_verification? verification?;
};

# Details about the seller (grocery store, e-commerce website, etc.) where the card authorization happened.
public type merchant_data_specs record {
    "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards" category?;
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string name?;
    @constraint:String {maxLength: 5000}
    string network_id?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
    @constraint:String {maxLength: 5000}
    string terminal_id?;
    @constraint:String {maxLength: 5000}
    string url?;
};

public type Source_type_ideal record {
    string? bank?;
    string? bic?;
    string? iban_last4?;
    string? statement_descriptor?;
};

public type invoice_settings record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    int days_until_due?;
    param issuer?;
};

public type issuing_personalization_designs_bodyExpandItemsString string;

# 
public type Payment_method_details_card_wallet_visa_checkout record {
    # Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? billing_address?;
    # Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? email?;
    # Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? name?;
    # Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? shipping_address?;
};

public type account_people_body record {|
    person_additional_tos_acceptances_specs additional_tos_acceptances?;
    legal_entity_and_kyc_address_specs_1 address?;
    japan_address_kana_specs_1 address_kana?;
    japan_address_kanji_specs_1 address_kanji?;
    # The person's date of birth.
    record {int day; int month; int year;}|"" dob?;
    person_documents_specs documents?;
    # The person's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    account_people_bodyExpandItemsString[] expand?;
    # The person's first name.
    @constraint:String {maxLength: 5000}
    string first_name?;
    # The Kana variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    # The Kanji variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    # A list of alternate names or aliases that the person is known by.
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    # The person's gender (International regulations require either "male" or "female").
    string gender?;
    # The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number?;
    # The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    # The person's last name.
    @constraint:String {maxLength: 5000}
    string last_name?;
    # The Kana variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    # The Kanji variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    # The person's maiden name.
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or "XX" if unavailable.
    @constraint:String {maxLength: 5000}
    string nationality?;
    # A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.
    @constraint:String {maxLength: 5000}
    string person_token?;
    # The person's phone number.
    string phone?;
    # Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
    @constraint:String {maxLength: 5000}
    string political_exposure?;
    address_specs_1 registered_address?;
    relationship_specs relationship?;
    # The last four digits of the person's Social Security number (U.S. only).
    string ssn_last_4?;
    person_verification_specs_1 verification?;
|};

@constraint:String {maxLength: 5000}
public type GetIssuingTokensQueriesExpandItemsString string;

# 
public type Payment_method_details_card_wallet record {
    Payment_method_details_card_wallet_amex_express_checkout amex_express_checkout?;
    Payment_method_details_card_wallet_apple_pay apple_pay?;
    # (For tokenized numbers only.) The last four digits of the device account number.
    string? dynamic_last4?;
    Payment_method_details_card_wallet_google_pay google_pay?;
    Payment_method_details_card_wallet_link link?;
    Payment_method_details_card_wallet_masterpass masterpass?;
    Payment_method_details_card_wallet_samsung_pay samsung_pay?;
    # The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
    "amex_express_checkout"|"apple_pay"|"google_pay"|"link"|"masterpass"|"samsung_pay"|"visa_checkout" 'type;
    Payment_method_details_card_wallet_visa_checkout visa_checkout?;
};

public type invoices_body record {|
    # The account tax IDs associated with the invoice. Only editable when the invoice is a draft.
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    # A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees).
    int application_fee_amount?;
    # Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice. If `false`, the invoice's state doesn't automatically advance without an explicit action.
    boolean auto_advance?;
    automatic_tax_param automatic_tax?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The currency to create this invoice in. Defaults to that of `customer` if not specified.
    string currency?;
    # A list of up to 4 custom fields to be displayed on the invoice.
    record {string name; string value;}[]|"" custom_fields?;
    # The ID of the customer who will be billed.
    @constraint:String {maxLength: 5000}
    string customer?;
    # The number of days from when the invoice is created until it is due. Valid only for invoices where `collection_method=send_invoice`.
    int days_until_due?;
    # ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.
    @constraint:String {maxLength: 5000}
    string default_source?;
    # The tax rates that will apply to any line item that does not have `tax_rates` set.
    invoices_bodyDefaulttaxratesItemsString[] default_tax_rates?;
    # An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.
    @constraint:String {maxLength: 1500}
    string description?;
    # The coupons and promotion codes to redeem into discounts for the invoice. If not specified, inherits the discount from the invoice's customer. Pass an empty string to avoid inheriting any discounts.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # The date on which payment for this invoice is due. Valid only for invoices where `collection_method=send_invoice`.
    int due_date?;
    # The date when this invoice is in effect. Same as `finalized_at` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the invoice PDF and receipt.
    int effective_at?;
    # Specifies which fields in the response should be expanded.
    invoices_bodyExpandItemsString[] expand?;
    # Footer to be displayed on the invoice.
    @constraint:String {maxLength: 5000}
    string footer?;
    from_invoice from_invoice?;
    param_1 issuer?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Set the number for this invoice. If no number is present then a number will be assigned automatically when the invoice is finalized. In many markets, regulations require invoices to be unique, sequential and / or gapless. You are responsible for ensuring this is true across all your different invoicing systems in the event that you edit the invoice number using our API. If you use only Stripe for your invoices and do not change invoice numbers, Stripe handles this aspect of compliance for you automatically.
    @constraint:String {maxLength: 26}
    string number?;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    string on_behalf_of?;
    payment_settings_1 payment_settings?;
    # How to handle pending invoice items on invoice creation. Defaults to `exclude` if the parameter is omitted.
    "exclude"|"include" pending_invoice_items_behavior?;
    rendering_param rendering?;
    shipping_cost shipping_cost?;
    recipient_shipping_with_optional_fields_address shipping_details?;
    # Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # The ID of the subscription to invoice, if any. If set, the created invoice will only include pending invoice items for that subscription. The subscription's billing cycle and regular subscription events won't be affected.
    @constraint:String {maxLength: 5000}
    string subscription?;
    transfer_data_specs_4 transfer_data?;
|};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction record {
    # The [Payment Intent](https://stripe.com/docs/api/payment_intents/object) that funds were applied to.
    string|Payment_intent payment_intent;
};

# Represents the Queries record for the operation: GetCoupons
public type GetCouponsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCouponsQueriesExpandItemsString[] expand?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_6 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type issuing_cardholders_body record {|
    billing_specs billing;
    company_param company?;
    # The cardholder's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    issuing_cardholders_bodyExpandItemsString[] expand?;
    individual_param individual?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The cardholder's name. This will be printed on cards issued to them. The maximum length of this field is 24 characters. This field cannot contain any special characters or numbers.
    string name;
    # The cardholder's phone number. This will be transformed to [E.164](https://en.wikipedia.org/wiki/E.164) if it is not provided in that format already. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details.
    string phone_number?;
    # The cardholder’s preferred locales (languages), ordered by preference. Locales can be `de`, `en`, `es`, `fr`, or `it`.
    #  This changes the language of the [3D Secure flow](https://stripe.com/docs/issuing/3d-secure) and one-time password messages sent to the cardholder.
    ("de"|"en"|"es"|"fr"|"it")[] preferred_locales?;
    authorization_controls_param_v2 spending_controls?;
    # Specifies whether to permit authorizations on this cardholder's cards. Defaults to `active`.
    "active"|"inactive" status?;
    # One of `individual` or `company`. See [Choose a cardholder type](https://stripe.com/docs/issuing/other/choose-cardholder) for more details.
    "company"|"individual" 'type?;
|};

# Represents the Queries record for the operation: GetCreditNotesId
public type GetCreditNotesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCreditNotesIdQueriesExpandItemsString[] expand?;
};

public type file_links_link_body record {|
    # Specifies which fields in the response should be expanded.
    file_links_link_bodyExpandItemsString[] expand?;
    # A future timestamp after which the link will no longer be usable, or `now` to expire the link immediately.
    "now"|int|"" expires_at?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# 
public type Gelato_session_email_options record {
    # Request one time password verification of `provided_details.email`.
    boolean require_verification?;
};

# 
public type Portal_customer_update record {
    # The types of customer updates that are supported. When empty, customers are not updateable.
    ("address"|"email"|"name"|"phone"|"shipping"|"tax_id")[] allowed_updates;
    # Whether the feature is enabled.
    boolean enabled;
};

@constraint:String {maxLength: 5000}
public type GetQuotesQuoteQueriesExpandItemsString string;

# 
public type Tax_product_resource_ship_from_details record {
    Tax_product_resource_postal_address address;
};

# Represents a reader action to process a payment intent
public type Terminal_reader_reader_resource_process_payment_intent_action record {
    # Most recent PaymentIntent processed by the reader.
    string|Payment_intent payment_intent;
    Terminal_reader_reader_resource_process_config process_config?;
};

# 
public type Tax_product_resource_tax_transaction_resource_reversal record {
    # The `id` of the reversed `Transaction` object.
    string? original_transaction?;
};

# Represents the Queries record for the operation: GetAppsSecrets
public type GetAppsSecretsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetAppsSecretsQueriesExpandItemsString[] expand?;
    # Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.
    scope_param scope;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type transactions_create_unlinked_refund_body record {|
    # The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Card associated with this unlinked refund transaction.
    @constraint:String {maxLength: 5000}
    string card;
    # The currency of the unlinked refund. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Specifies which fields in the response should be expanded.
    transactions_create_unlinked_refund_bodyExpandItemsString[] expand?;
    merchant_data_specs merchant_data?;
    purchase_details_specs purchase_details?;
|};

# 
public type Payment_intent_processing_customer_notification record {
    # Whether customer approval has been requested for this payment. For payments greater than INR 15000 or mandate amount, the customer must provide explicit approval of the payment with their bank.
    boolean? approval_requested?;
    # If customer approval is required, they need to provide approval before this time.
    int? completes_at?;
};

public type account_refresh_body_1ExpandItemsString string;

# 
public type Payment_method_details_blik record {
};

# Represents the Queries record for the operation: GetClimateProducts
public type GetClimateProductsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetClimateProductsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Payment_intent_payment_method_options_acss_debit record {
    Payment_intent_payment_method_options_mandate_options_acss_debit mandate_options?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# 
public type Portal_flows_flow_subscription_update_confirm record {
    # The coupon or promotion code to apply to this subscription update. Currently, only up to one may be specified.
    Portal_flows_subscription_update_confirm_discount[]? discounts?;
    # The [subscription item](https://stripe.com/docs/api/subscription_items) to be updated through this flow. Currently, only up to one may be specified and subscriptions with multiple items are not updatable.
    Portal_flows_subscription_update_confirm_item[] items;
    # The ID of the subscription to be updated.
    @constraint:String {maxLength: 5000}
    string subscription;
};

# 
public type Account_unification_account_controller_losses record {
    # A value indicating who is liable when this account can't pay back negative balances from payments.
    "application"|"stripe" payments;
};

# Represents the Queries record for the operation: GetPricesPrice
public type GetPricesPriceQueries record {
    # Specifies which fields in the response should be expanded.
    GetPricesPriceQueriesExpandItemsString[] expand?;
};

# 
public type Transfer_data record {
    # Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount?;
    # The account (if any) that the payment is attributed to for tax
    # reporting, and where funds from the payment are transferred to after
    # payment success.
    string|Account destination;
};

public type flight_specs record {
    int departure_at?;
    @constraint:String {maxLength: 5000}
    string passenger_name?;
    boolean refundable?;
    flight_segment_specs[] segments?;
    @constraint:String {maxLength: 5000}
    string travel_agency?;
};

public type source_address record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

# 
public type Issuing_network_token_wallet_provider record {
    # The wallet provider-given account ID of the digital wallet the token belongs to.
    @constraint:String {maxLength: 5000}
    string account_id?;
    # An evaluation on the trustworthiness of the wallet account between 1 and 5. A higher score indicates more trustworthy.
    int account_trust_score?;
    # The method used for tokenizing a card.
    "app"|"manual"|"on_file"|"other" card_number_source?;
    Issuing_network_token_address cardholder_address?;
    # The name of the cardholder tokenizing the card.
    @constraint:String {maxLength: 5000}
    string cardholder_name?;
    # An evaluation on the trustworthiness of the device. A higher score indicates more trustworthy.
    int device_trust_score?;
    # The hashed email address of the cardholder's account with the wallet provider.
    @constraint:String {maxLength: 5000}
    string hashed_account_email_address?;
    # The reasons for suggested tokenization given by the card network.
    ("account_card_too_new"|"account_recently_changed"|"account_too_new"|"account_too_new_since_launch"|"additional_device"|"data_expired"|"defer_id_v_decision"|"device_recently_lost"|"good_activity_history"|"has_suspended_tokens"|"high_risk"|"inactive_account"|"long_account_tenure"|"low_account_score"|"low_device_score"|"low_phone_number_score"|"network_service_error"|"outside_home_territory"|"provisioning_cardholder_mismatch"|"provisioning_device_and_cardholder_mismatch"|"provisioning_device_mismatch"|"same_device_no_prior_authentication"|"same_device_successful_prior_authentication"|"software_update"|"suspicious_activity"|"too_many_different_cardholders"|"too_many_recent_attempts"|"too_many_recent_tokens")[] reason_codes?;
    # The recommendation on responding to the tokenization request.
    "approve"|"decline"|"require_auth" suggested_decision?;
    # The version of the standard for mapping reason codes followed by the wallet provider.
    @constraint:String {maxLength: 5000}
    string suggested_decision_version?;
};

# 
public type Payment_method_details_eps record {
    # The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.
    "arzte_und_apotheker_bank"|"austrian_anadi_bank_ag"|"bank_austria"|"bankhaus_carl_spangler"|"bankhaus_schelhammer_und_schattera_ag"|"bawag_psk_ag"|"bks_bank_ag"|"brull_kallmus_bank_ag"|"btv_vier_lander_bank"|"capital_bank_grawe_gruppe_ag"|"deutsche_bank_ag"|"dolomitenbank"|"easybank_ag"|"erste_bank_und_sparkassen"|"hypo_alpeadriabank_international_ag"|"hypo_bank_burgenland_aktiengesellschaft"|"hypo_noe_lb_fur_niederosterreich_u_wien"|"hypo_oberosterreich_salzburg_steiermark"|"hypo_tirol_bank_ag"|"hypo_vorarlberg_bank_ag"|"marchfelder_bank"|"oberbank_ag"|"raiffeisen_bankengruppe_osterreich"|"schoellerbank_ag"|"sparda_bank_wien"|"volksbank_gruppe"|"volkskreditbank_ag"|"vr_bank_braunau"? bank?;
    # Owner's verified full name. Values are verified or provided by EPS directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    # EPS rarely provides this information so the attribute is usually empty.
    string? verified_name?;
};

@constraint:String {maxLength: 5000}
public type GetProductsQueriesIdsItemsString string;

# 
public type Issuing_authorization_authentication_exemption record {
    # The entity that requested the exemption, either the acquiring merchant or the Issuing user.
    "acquirer"|"issuer" claimed_by;
    # The specific exemption claimed for this authorization.
    "low_value_transaction"|"transaction_risk_analysis"|"unknown" 'type;
};

@constraint:String {maxLength: 5000}
public type GetQuotesQuoteComputedUpfrontLineItemsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetBillingPortalConfigurationsConfigurationQueriesExpandItemsString string;

public type registrations_id_body record {|
    # Time at which the registration becomes active. It can be either `now` to indicate the current time, or a timestamp measured in seconds since the Unix epoch.
    "now"|int active_from?;
    # Specifies which fields in the response should be expanded.
    registrations_id_bodyExpandItemsString[] expand?;
    # If set, the registration stops being active at this time. If not set, the registration will be active indefinitely. It can be either `now` to indicate the current time, or a timestamp measured in seconds since the Unix epoch.
    "now"|int|"" expires_at?;
|};

# 
public type BillingClocksResourceBillingClockList record {
    Test_helpers\.test_clock[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/test_helpers/test_clocks`}
    string url;
};

# Represents the Queries record for the operation: GetPaymentMethodConfigurationsConfiguration
public type GetPaymentMethodConfigurationsConfigurationQueries record {
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodConfigurationsConfigurationQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetTreasuryCreditReversalsCreditReversal
public type GetTreasuryCreditReversalsCreditReversalQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryCreditReversalsCreditReversalQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type Account_future_requirementsEventuallydueItemsString string;

# A coupon contains information about a percent-off or amount-off discount you
# might want to apply to a customer. Coupons may be applied to [subscriptions](https://stripe.com/docs/api#subscriptions), [invoices](https://stripe.com/docs/api#invoices),
# [checkout sessions](https://stripe.com/docs/api/checkout/sessions), [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge) or [payment intents](https://stripe.com/docs/api/payment_intents).
public type Coupon record {
    # Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.
    int? amount_off?;
    Coupon_applies_to applies_to?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.
    string? currency?;
    # Coupons defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|Coupon_currency_option...;|} currency_options?;
    # One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.
    "forever"|"once"|"repeating" duration;
    # If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.
    int? duration_in_months?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.
    int? max_redemptions?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # Name of the coupon displayed to customers on for instance invoices or receipts.
    string? name?;
    # String representing the object's type. Objects of the same type share the same value.
    "coupon" 'object;
    # Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a $ (or local equivalent)100 invoice $ (or local equivalent)50 instead.
    decimal? percent_off?;
    # Date after which the coupon can no longer be redeemed.
    int? redeem_by?;
    # Number of times this coupon has been applied to a customer.
    int times_redeemed;
    # Taking account of the above properties, whether this coupon can still be applied to a customer.
    boolean valid;
};

# 
public type Invoice_payment_method_options_customer_balance_bank_transfer record {
    Invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer eu_bank_transfer?;
    # The bank transfer type that can be used for funding. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
    string? 'type?;
};

# 
public type Radar_review_resource_session record {
    # The browser used in this browser session (e.g., `Chrome`).
    string? browser?;
    # Information about the device used for the browser session (e.g., `Samsung SM-G930T`).
    string? device?;
    # The platform for the browser session (e.g., `Macintosh`).
    string? platform?;
    # The version for the browser session (e.g., `61.0.3163.100`).
    string? version?;
};

public type invoices_create_preview_bodyExpandItemsString string;

public type subscriptions_subscription_exposed_id_body record {|
    # A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.
    add_invoice_item_entry[] add_invoice_items?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
    decimal|"" application_fee_percent?;
    automatic_tax_config automatic_tax?;
    # Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    "now"|"unchanged" billing_cycle_anchor?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.
    int|"" cancel_at?;
    # Boolean indicating whether this subscription should cancel at the end of the current period.
    boolean cancel_at_period_end?;
    cancellation_details_param cancellation_details?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.
    int days_until_due?;
    # ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    string|"" default_source?;
    # The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. Pass an empty string to remove previously-defined tax rates.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    subscriptions_subscription_exposed_id_bodyExpandItemsString[] expand?;
    invoice_settings_param invoice_settings?;
    # A list of up to 20 subscription items, each with an attached price.
    subscription_item_update_params[] items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted.
    boolean off_session?;
    # If specified, payment collection for this subscription will be paused. Note that the subscription status will be unchanged and will not be updated to `paused`. Learn more about [pausing collection](/billing/subscriptions/pause-payment).
    record {"keep_as_draft"|"mark_uncollectible"|"void" behavior; int resumes_at?;}|"" pause_collection?;
    # Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    # 
    # Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.
    # 
    # Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).
    # 
    # Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
    "allow_incomplete"|"default_incomplete"|"error_if_incomplete"|"pending_if_incomplete" payment_behavior?;
    payment_settings payment_settings?;
    # Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.
    record {"day"|"month"|"week"|"year" interval; int interval_count?;}|"" pending_invoice_item_interval?;
    # The promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    # If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#upcoming_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.
    int proration_date?;
    # If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges. This will be unset if you POST an empty value.
    record {decimal amount_percent?; string destination;}|"" transfer_data?;
    # Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`.
    "now"|int trial_end?;
    # Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    boolean trial_from_plan?;
    trial_settings_config_1 trial_settings?;
|};

public type charge_refunds_bodyExpandItemsString string;

public type outbound_transfers record {
    access_with_ach_details ach?;
    access us_domestic_wire?;
};

@constraint:String {maxLength: 5000}
public type GetReportingReportRunsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryCreditReversalsQueriesExpandItemsString string;

public type outbound_transfer_cancel_bodyExpandItemsString string;

public type payment_element_param record {
    boolean enabled;
    features_param features?;
};

# A hash of configuration describing the account controller's attributes.
public type controller_specs record {
    controller_fees_specs fees?;
    controller_losses_specs losses?;
    "application"|"stripe" requirement_collection?;
    controller_dashboard_specs stripe_dashboard?;
};

public type period_1 record {
    int end;
    int 'start;
};

# Line items that make up the credit note
public type CreditNoteLinesList_1 record {
    # Details about each object.
    Credit_note_line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type custom_field_text_param_1 record {
    int maximum_length?;
    int minimum_length?;
};

# 
public type Tax_product_registrations_resource_country_options_eu_standard record {
    # Place of supply scheme used in an EU standard registration.
    "small_seller"|"standard" place_of_supply_scheme;
};

# 
public type Treasury_received_credits_resource_status_transitions record {
    # Timestamp describing when the CreditReversal changed status to `posted`
    int? posted_at?;
};

# This parameter allows you to set some attributes on the payment method created during a Checkout session.
public type payment_method_data_param record {
    "always"|"limited"|"unspecified" allow_redisplay?;
};

# 
public type Checkout_us_bank_account_payment_method_options record {
    Linked_account_options_us_bank_account financial_connections?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Bank account verification method.
    "automatic"|"instant" verification_method?;
};

public type invoiceitems_invoiceitem_bodyExpandItemsString string;

# Result from a selfie check
public type Gelato_selfie_report record {
    # ID of the [File](https://stripe.com/docs/api/files) holding the image of the identity document used in this check.
    string? document?;
    # Details on the verification error. Present when status is `unverified`.
    Gelato_selfie_report_error? 'error?;
    # ID of the [File](https://stripe.com/docs/api/files) holding the image of the selfie used in this check.
    string? selfie?;
    # Status of this `selfie` check.
    "unverified"|"verified" status;
};

public type billing_portal_configurations_body record {|
    business_profile_create_param business_profile;
    # The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.
    string|"" default_return_url?;
    # Specifies which fields in the response should be expanded.
    billing_portal_configurations_bodyExpandItemsString[] expand?;
    features_creation_param features;
    login_page_create_param login_page?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

public type customer_tax_ids_body record {|
    # Specifies which fields in the response should be expanded.
    customer_tax_ids_bodyExpandItemsString[] expand?;
    # Type of the tax ID, one of `ad_nrt`, `ae_trn`, `ar_cuit`, `au_abn`, `au_arn`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `kz_bin`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sv_nit`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, `uy_ruc`, `ve_rif`, `vn_tin`, or `za_vat`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # Value of the tax ID.
    string value;
|};

# 
public type ClimateRemovalsOrdersList record {
    Climate\.order[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/climate/orders`}
    string url;
};

public type cards_card_bodyExpandItemsString string;

public type Financial_connections\.account_owner record {
    string? email?;
    string id;
    string name;
    "financial_connections.account_owner" 'object;
    string ownership;
    string? phone?;
    string? raw_address?;
    int? refreshed_at?;
};

# Represents the Queries record for the operation: GetCustomersCustomerPaymentMethods
public type GetCustomersCustomerPaymentMethodsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerPaymentMethodsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # An optional filter on the list, based on the object `type` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request.
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type?;
    # This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to `unspecified`.
    "always"|"limited"|"unspecified" allow_redisplay?;
};

# 
public type Subscriptions_resource_payment_method_options record {
    # This sub-hash contains details about the Canadian pre-authorized debit payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_acss_debit? acss_debit?;
    # This sub-hash contains details about the Bancontact payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_bancontact? bancontact?;
    # This sub-hash contains details about the Card payment method options to pass to invoices created by the subscription.
    Subscription_payment_method_options_card? card?;
    # This sub-hash contains details about the Bank transfer payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_customer_balance? customer_balance?;
    # This sub-hash contains details about the Konbini payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_konbini? konbini?;
    # This sub-hash contains details about the SEPA Direct Debit payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_sepa_debit? sepa_debit?;
    # This sub-hash contains details about the ACH direct debit payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_us_bank_account? us_bank_account?;
};

# 
public type Address record {
    # City, district, suburb, town, or village.
    string? city?;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    string? country?;
    # Address line 1 (e.g., street, PO Box, or company name).
    string? line1?;
    # Address line 2 (e.g., apartment, suite, unit, or building).
    string? line2?;
    # ZIP or postal code.
    string? postal_code?;
    # State, county, province, or region.
    string? state?;
};

public type shipping_fail_bodyExpandItemsString string;

public type id_succeed_body record {|
    # Specifies which fields in the response should be expanded.
    id_succeed_bodyExpandItemsString[] expand?;
|};

# Tokenization is the process Stripe uses to collect sensitive card or bank
# account details, or personally identifiable information (PII), directly from
# your customers in a secure manner. A token representing this information is
# returned to your server to use. Use our
# [recommended payments integrations](https://stripe.com/docs/payments) to perform this process
# on the client-side. This guarantees that no sensitive card data touches your server,
# and allows your integration to operate in a PCI-compliant way.
# 
# If you can't use client-side tokenization, you can also create tokens using
# the API with either your publishable or secret API key. If
# your integration uses this method, you're responsible for any PCI compliance
# that it might require, and you must keep your secret API key safe. Unlike with
# client-side tokenization, your customer's information isn't sent directly to
# Stripe, so we can't determine how it's handled or stored.
# 
# You can't store or use tokens more than once. To store card or bank account
# information for later use, create [Customer](https://stripe.com/docs/api#customers)
# objects or [External accounts](/api#external_accounts).
# [Radar](https://stripe.com/docs/radar), our integrated solution for automatic fraud protection,
# performs best with integrations that use client-side tokenization.
public type Token record {
    Bank_account bank_account?;
    Card card?;
    # IP address of the client that generates the token.
    string? client_ip?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "token" 'object;
    # Type of the token: `account`, `bank_account`, `card`, or `pii`.
    @constraint:String {maxLength: 5000}
    string 'type;
    # Determines if you have already used this token (you can only use tokens once).
    boolean used;
};

# 
public type Legal_entity_company_verification_document record {
    # The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.
    string|File? back?;
    # A user-displayable string describing the verification state of this document.
    string? details?;
    # One of `document_corrupt`, `document_expired`, `document_failed_copy`, `document_failed_greyscale`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_not_readable`, `document_not_uploaded`, `document_type_not_supported`, or `document_too_large`. A machine-readable code specifying the verification state for this document.
    string? details_code?;
    # The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.
    string|File? front?;
};

# 
public type Payment_intent_next_action_redirect_to_url record {
    # If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.
    string? return_url?;
    # The URL you must redirect your customer to in order to authenticate the payment.
    string? url?;
};

# If provided, this hash will be used to create a PaymentMethod.
public type payment_method_data_params_2 record {
    payment_method_param acss_debit?;
    record {} affirm?;
    record {} afterpay_clearpay?;
    record {} alipay?;
    "always"|"limited"|"unspecified" allow_redisplay?;
    record {} amazon_pay?;
    param_4 au_becs_debit?;
    param_5 bacs_debit?;
    record {} bancontact?;
    billing_details_inner_params billing_details?;
    record {} blik?;
    param_6 boleto?;
    record {} cashapp?;
    record {} customer_balance?;
    param_7 eps?;
    param_8 fpx?;
    record {} giropay?;
    record {} grabpay?;
    param_9 ideal?;
    record {} interac_present?;
    param_10 klarna?;
    record {} konbini?;
    record {} link?;
    record {|string...;|} metadata?;
    record {} mobilepay?;
    record {} multibanco?;
    record {} oxxo?;
    param_11 p24?;
    record {} paynow?;
    record {} paypal?;
    record {} pix?;
    record {} promptpay?;
    radar_options_with_hidden_options_1 radar_options?;
    record {} revolut_pay?;
    param_12 sepa_debit?;
    param_13 sofort?;
    record {} swish?;
    record {} twint?;
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type;
    payment_method_param_1 us_bank_account?;
    record {} wechat_pay?;
    record {} zip?;
};

# When included, this hash creates a PaymentMethod that is set as the [`payment_method`](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-payment_method)
# value in the SetupIntent.
public type payment_method_data_params_1 record {
    payment_method_param acss_debit?;
    record {} affirm?;
    record {} afterpay_clearpay?;
    record {} alipay?;
    "always"|"limited"|"unspecified" allow_redisplay?;
    record {} amazon_pay?;
    param_4 au_becs_debit?;
    param_5 bacs_debit?;
    record {} bancontact?;
    billing_details_inner_params billing_details?;
    record {} blik?;
    param_6 boleto?;
    record {} cashapp?;
    record {} customer_balance?;
    param_7 eps?;
    param_8 fpx?;
    record {} giropay?;
    record {} grabpay?;
    param_9 ideal?;
    record {} interac_present?;
    param_10 klarna?;
    record {} konbini?;
    record {} link?;
    record {|string...;|} metadata?;
    record {} mobilepay?;
    record {} multibanco?;
    record {} oxxo?;
    param_11 p24?;
    record {} paynow?;
    record {} paypal?;
    record {} pix?;
    record {} promptpay?;
    radar_options_with_hidden_options_1 radar_options?;
    record {} revolut_pay?;
    param_12 sepa_debit?;
    param_13 sofort?;
    record {} swish?;
    record {} twint?;
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type;
    payment_method_param_1 us_bank_account?;
    record {} wechat_pay?;
    record {} zip?;
};

public type transfer_data_specs_2 record {
    decimal amount_percent?;
    string destination;
};

# If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges.
public type transfer_data_specs_3 record {
    decimal amount_percent?;
    string destination;
};

# An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.
public type transfer_data_specs_1 record {
    int amount?;
};

# 
public type Connect_embedded_base_config_claim record {
    # Whether the embedded component is enabled.
    boolean enabled;
    Connect_embedded_base_features features;
};

public type session_expire_body record {|
    # Specifies which fields in the response should be expanded.
    session_expire_bodyExpandItemsString[] expand?;
|};

# If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice's charge.
public type transfer_data_specs_4 record {
    int amount?;
    string destination;
};

# 
public type Dispute_evidence_details record {
    # Date by which evidence must be submitted in order to successfully challenge dispute. Will be 0 if the customer's bank or credit card company doesn't allow a response for this particular dispute.
    int? due_by?;
    # Whether evidence has been staged for this dispute.
    boolean has_evidence;
    # Whether the last evidence submission was submitted past the due date. Defaults to `false` if no evidence submissions have occurred. If `true`, then delivery of the latest evidence is *not* guaranteed.
    boolean past_due;
    # The number of times evidence has been submitted. Typically, you may only submit evidence once.
    int submission_count;
};

@constraint:String {maxLength: 5000}
public type GetFinancialConnectionsAccountsAccountOwnersQueriesExpandItemsString string;

# 
public type Payment_pages_checkout_session_tax_id_collection record {
    # Indicates whether tax ID collection is enabled for the session
    boolean enabled;
};

public type TiersItemsObject record {
    int flat_amount?;
    string flat_amount_decimal?;
    int unit_amount?;
    string unit_amount_decimal?;
    "inf"|int up_to;
};

# Represents the Queries record for the operation: GetBillingMetersIdEventSummaries
public type GetBillingMetersIdEventSummariesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # The timestamp from when to start aggregating meter events (inclusive). Must be aligned with minute boundaries.
    int start_time;
    # Specifies which fields in the response should be expanded.
    GetBillingMetersIdEventSummariesQueriesExpandItemsString[] expand?;
    # Specifies what granularity to use when generating event summaries. If not specified, a single event summary would be returned for the specified time range. For hourly granularity, start and end times must align with hour boundaries (e.g., 00:00, 01:00, ..., 23:00). For daily granularity, start and end times must align with UTC day boundaries (00:00 UTC).
    "day"|"hour" value_grouping_window?;
    # The timestamp from when to stop aggregating meter events (exclusive). Must be aligned with minute boundaries.
    int end_time;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # The customer for which to fetch event summaries.
    @constraint:String {maxLength: 5000}
    string customer;
};

# 
public type Payment_intent_next_action_cashapp_qr_code record {
    # The date (unix timestamp) when the QR code expires.
    int expires_at;
    # The image_url_png string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_png;
    # The image_url_svg string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_svg;
};

public type Payment_source Account|Bank_account|Card|Source;

public type entitlements_features_bodyExpandItemsString string;

public type subscription_details_params_1 record {
    "now"|"unchanged"|int billing_cycle_anchor?;
    int|"" cancel_at?;
    boolean cancel_at_period_end?;
    boolean cancel_now?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    subscription_item_update_params[] items?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int proration_date?;
    "now" resume_at?;
    int start_date?;
    "now"|int trial_end?;
};

# 
public type Issuing_transaction_fuel_data record {
    # [Conexxus Payment System Product Code](https://www.conexxus.org/conexxus-payment-system-product-codes) identifying the primary fuel product purchased.
    string? industry_product_code?;
    # The quantity of `unit`s of fuel that was dispensed, represented as a decimal string with at most 12 decimal places.
    string? quantity_decimal?;
    # The type of fuel that was purchased. One of `diesel`, `unleaded_plus`, `unleaded_regular`, `unleaded_super`, or `other`.
    @constraint:String {maxLength: 5000}
    string 'type;
    # The units for `quantity_decimal`. One of `charging_minute`, `imperial_gallon`, `kilogram`, `kilowatt_hour`, `liter`, `pound`, `us_gallon`, or `other`.
    @constraint:String {maxLength: 5000}
    string unit;
    # The cost in cents per each unit of fuel, represented as a decimal string with at most 12 decimal places.
    string unit_cost_decimal;
};

public type linked_flows_param record {
    "credit_reversal"|"other"|"outbound_payment"|"payout" source_flow_type;
};

# The Pause Collection settings determine how we will pause collection for this subscription and for how long the subscription
# should be paused.
public type Subscriptions_resource_pause_collection record {
    # The payment collection behavior for this subscription while paused. One of `keep_as_draft`, `mark_uncollectible`, or `void`.
    "keep_as_draft"|"mark_uncollectible"|"void" behavior;
    # The time after which the subscription will resume collecting payments.
    int? resumes_at?;
};

# 
public type Dispute_evidence record {
    # Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.
    string? access_activity_log?;
    # The billing address provided by the customer.
    string? billing_address?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your subscription cancellation policy, as shown to the customer.
    string|File? cancellation_policy?;
    # An explanation of how and when the customer was shown your refund policy prior to purchase.
    string? cancellation_policy_disclosure?;
    # A justification for why the customer's subscription was not canceled.
    string? cancellation_rebuttal?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.
    string|File? customer_communication?;
    # The email address of the customer.
    string? customer_email_address?;
    # The name of the customer.
    string? customer_name?;
    # The IP address that the customer used when making the purchase.
    string? customer_purchase_ip?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant document or contract showing the customer's signature.
    string|File? customer_signature?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.
    string|File? duplicate_charge_documentation?;
    # An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.
    string? duplicate_charge_explanation?;
    # The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.
    string? duplicate_charge_id?;
    # A description of the product or service that was sold.
    string? product_description?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any receipt or message sent to the customer notifying them of the charge.
    string|File? receipt?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer.
    string|File? refund_policy?;
    # Documentation demonstrating that the customer was shown your refund policy prior to purchase.
    string? refund_policy_disclosure?;
    # A justification for why the customer is not entitled to a refund.
    string? refund_refusal_explanation?;
    # The date on which the customer received or began receiving the purchased service, in a clear human-readable format.
    string? service_date?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.
    string|File? service_documentation?;
    # The address to which a physical product was shipped. You should try to include as complete address information as possible.
    string? shipping_address?;
    # The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.
    string? shipping_carrier?;
    # The date on which a physical product began its route to the shipping address, in a clear human-readable format.
    string? shipping_date?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible.
    string|File? shipping_documentation?;
    # The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
    string? shipping_tracking_number?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements.
    string|File? uncategorized_file?;
    # Any additional evidence or statements.
    string? uncategorized_text?;
};

public type Deleted_payment_source Deleted_bank_account|Deleted_card;

# Represents the Queries record for the operation: GetSourcesSourceSourceTransactions
public type GetSourcesSourceSourceTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSourcesSourceSourceTransactionsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type subscription_details_params_2 record {
    "now"|"unchanged"|int billing_cycle_anchor?;
    int|"" cancel_at?;
    boolean cancel_at_period_end?;
    boolean cancel_now?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    subscription_item_update_params[] items?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int proration_date?;
    "now" resume_at?;
    int start_date?;
    "now"|int trial_end?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingCardsCardQueriesExpandItemsString string;

public type invoices_create_preview_body record {|
    automatic_tax_param_1 automatic_tax?;
    # The ID of the coupon to apply to this phase of the subscription schedule. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # The currency to preview this invoice in. Defaults to that of `customer` if not specified.
    string currency?;
    # The identifier of the customer whose upcoming invoice you'd like to retrieve. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
    @constraint:String {maxLength: 5000}
    string customer?;
    customer_details_param customer_details?;
    # The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the subscription or customer. This works for both coupons directly applied to an invoice and coupons applied to a subscription. Pass an empty string to avoid inheriting any discounts.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    invoices_create_preview_bodyExpandItemsString[] expand?;
    # List of invoice items to add or update in the upcoming invoice preview.
    invoice_item_preview_params[] invoice_items?;
    param_1 issuer?;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    string|"" on_behalf_of?;
    # Customizes the types of values to include when calculating the invoice. Defaults to `next` if unspecified.
    "next"|"recurring" preview_mode?;
    # The identifier of the schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.
    @constraint:String {maxLength: 5000}
    string schedule?;
    schedule_details_params schedule_details?;
    # The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_details.items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_details.items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.
    @constraint:String {maxLength: 5000}
    string subscription?;
    subscription_details_params subscription_details?;
|};

public type tax_ids_body record {|
    # Specifies which fields in the response should be expanded.
    tax_ids_bodyExpandItemsString[] expand?;
    owner_params_1 owner?;
    # Type of the tax ID, one of `ad_nrt`, `ae_trn`, `ar_cuit`, `au_abn`, `au_arn`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `kz_bin`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sv_nit`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, `uy_ruc`, `ve_rif`, `vn_tin`, or `za_vat`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # Value of the tax ID.
    string value;
|};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountBankAccountsIdQueriesExpandItemsString string;

public type invoice_list_param record {
    boolean enabled;
};

# 
public type Custom_unit_amount record {
    # The maximum unit amount the customer can specify for this item.
    int? maximum?;
    # The minimum unit amount the customer can specify for this item. Must be at least the minimum charge amount.
    int? minimum?;
    # The starting unit amount which can be updated by the customer.
    int? preset?;
};

# Toggle settings for enabling/disabling an ACH specific feature
public type Treasury_financial_accounts_resource_ach_toggle_settings record {
    # Whether the FinancialAccount should have the Feature.
    boolean requested;
    # Whether the Feature is operational.
    "active"|"pending"|"restricted" status;
    # Additional details; includes at least one entry when the status is not `active`.
    Treasury_financial_accounts_resource_toggles_setting_status_details[] status_details;
};

public type billing_portal_sessions_body record {|
    # The ID of an existing [configuration](https://stripe.com/docs/api/customer_portal/configuration) to use for this session, describing its functionality and features. If not specified, the session uses the default configuration.
    @constraint:String {maxLength: 5000}
    string configuration?;
    # The ID of an existing customer.
    @constraint:String {maxLength: 5000}
    string customer;
    # Specifies which fields in the response should be expanded.
    billing_portal_sessions_bodyExpandItemsString[] expand?;
    flow_data_param flow_data?;
    # The IETF language tag of the locale customer portal is displayed in. If blank or auto, the customer’s `preferred_locales` or browser’s locale is used.
    "auto"|"bg"|"cs"|"da"|"de"|"el"|"en"|"en-AU"|"en-CA"|"en-GB"|"en-IE"|"en-IN"|"en-NZ"|"en-SG"|"es"|"es-419"|"et"|"fi"|"fil"|"fr"|"fr-CA"|"hr"|"hu"|"id"|"it"|"ja"|"ko"|"lt"|"lv"|"ms"|"mt"|"nb"|"nl"|"pl"|"pt"|"pt-BR"|"ro"|"ru"|"sk"|"sl"|"sv"|"th"|"tr"|"vi"|"zh"|"zh-HK"|"zh-TW" locale?;
    # The `on_behalf_of` account to use for this session. When specified, only subscriptions and invoices with this `on_behalf_of` account appear in the portal. For more information, see the [docs](https://stripe.com/docs/connect/separate-charges-and-transfers#settlement-merchant). Use the [Accounts API](https://stripe.com/docs/api/accounts/object#account_object-settings-branding) to modify the `on_behalf_of` account's branding settings, which the portal displays.
    string on_behalf_of?;
    # The default URL to redirect customers to when they click on the portal's link to return to your website.
    string return_url?;
|};

# 
public type Application record {
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The name of the application.
    string? name?;
    # String representing the object's type. Objects of the same type share the same value.
    "application" 'object;
};

# 
public type Account_capability_future_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on the capability's enablement state prior to transitioning.
    int? current_deadline?;
    # Fields that need to be collected to keep the capability enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.
    Account_capability_future_requirementsCurrentlydueItemsString[] currently_due;
    # This is typed as an enum for consistency with `requirements.disabled_reason`, but it safe to assume `future_requirements.disabled_reason` is null because fields in `future_requirements` will never disable the account.
    "other"|"paused.inactivity"|"pending.onboarding"|"pending.review"|"platform_disabled"|"platform_paused"|"rejected.inactivity"|"rejected.other"|"rejected.unsupported_business"|"requirements.fields_needed"? disabled_reason?;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[] errors;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.
    Account_capability_future_requirementsEventuallydueItemsString[] eventually_due;
    # Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.
    Account_capability_future_requirementsPastdueItemsString[] past_due;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`. Fields might appear in `eventually_due` or `currently_due` and in `pending_verification` if verification fails but another verification is still pending.
    Account_capability_future_requirementsPendingverificationItemsString[] pending_verification;
};

public type ephemeral_keys_body record {|
    # The ID of the Customer you'd like to modify using the resulting ephemeral key.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Specifies which fields in the response should be expanded.
    ephemeral_keys_bodyExpandItemsString[] expand?;
    # The ID of the Issuing Card you'd like to access using the resulting ephemeral key.
    @constraint:String {maxLength: 5000}
    string issuing_card?;
    # A single-use token, created by Stripe.js, used for creating ephemeral keys for Issuing Cards without exchanging sensitive information.
    @constraint:String {maxLength: 5000}
    string nonce?;
    # The ID of the Identity VerificationSession you'd like to access using the resulting ephemeral key
    @constraint:String {maxLength: 5000}
    string verification_session?;
|};

public type fleet_reported_breakdown_fuel_specs record {
    string gross_amount_decimal?;
};

@constraint:String {maxLength: 5000}
public type GetSubscriptionsSearchQueriesExpandItemsString string;

# 
public type Payment_flows_installment_options record {
    boolean enabled;
    Payment_method_details_card_installments_plan plan?;
};

# A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).
# It contains information about when the discount began, when it will end, and what it is applied to.
# 
# Related guide: [Applying discounts to subscriptions](https://stripe.com/docs/billing/subscriptions/discounts)
public type Discount record {
    # The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.
    string? checkout_session?;
    Coupon coupon;
    # The ID of the customer associated with this discount.
    string|Customer|Deleted_customer? customer?;
    # If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.
    int? end?;
    # The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.
    @constraint:String {maxLength: 5000}
    string id;
    # The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.
    string? invoice?;
    # The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.
    string? invoice_item?;
    # String representing the object's type. Objects of the same type share the same value.
    "discount" 'object;
    # The promotion code applied to create this discount.
    string|Promotion_code? promotion_code?;
    # Date that the coupon was applied.
    int 'start;
    # The subscription that this coupon is applied to, if it is applied to a particular subscription.
    string? subscription?;
    # The subscription item that this coupon is applied to, if it is applied to a particular subscription item.
    string? subscription_item?;
};

# 
public type Payment_links_resource_restrictions record {
    Payment_links_resource_completed_sessions completed_sessions;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerBalanceTransactionsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetTreasuryOutboundTransfers
public type GetTreasuryOutboundTransfersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryOutboundTransfersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return OutboundTransfers that have the given status: `processing`, `canceled`, `failed`, `posted`, or `returned`.
    "canceled"|"failed"|"posted"|"processing"|"returned" status?;
};

@constraint:String {maxLength: 5000}
public type GetSourcesSourceMandateNotificationsMandateNotificationQueriesExpandItemsString string;

# The account or customer the tax ID belongs to. Defaults to `owner[type]=self`.
public type owner_params_1 record {
    string account?;
    @constraint:String {maxLength: 5000}
    string customer?;
    "account"|"application"|"customer"|"self" 'type;
};

public type Deleted_radar\.value_list_item record {
    true deleted;
    string id;
    "radar.value_list_item" 'object;
};

# 
public type Payment_method_details_p24 record {
    # The customer's bank. Can be one of `ing`, `citi_handlowy`, `tmobile_usbugi_bankowe`, `plus_bank`, `etransfer_pocztowy24`, `banki_spbdzielcze`, `bank_nowy_bfg_sa`, `getin_bank`, `velobank`, `blik`, `noble_pay`, `ideabank`, `envelobank`, `santander_przelew24`, `nest_przelew`, `mbank_mtransfer`, `inteligo`, `pbac_z_ipko`, `bnp_paribas`, `credit_agricole`, `toyota_bank`, `bank_pekao_sa`, `volkswagen_bank`, `bank_millennium`, `alior_bank`, or `boz`.
    "alior_bank"|"bank_millennium"|"bank_nowy_bfg_sa"|"bank_pekao_sa"|"banki_spbdzielcze"|"blik"|"bnp_paribas"|"boz"|"citi_handlowy"|"credit_agricole"|"envelobank"|"etransfer_pocztowy24"|"getin_bank"|"ideabank"|"ing"|"inteligo"|"mbank_mtransfer"|"nest_przelew"|"noble_pay"|"pbac_z_ipko"|"plus_bank"|"santander_przelew24"|"tmobile_usbugi_bankowe"|"toyota_bank"|"velobank"|"volkswagen_bank"? bank?;
    # Unique reference for this Przelewy24 payment.
    string? reference?;
    # Owner's verified full name. Values are verified or provided by Przelewy24 directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    # Przelewy24 rarely provides this information so the attribute is usually empty.
    string? verified_name?;
};

public type refunds_body record {|
    int amount?;
    # The identifier of the charge to refund.
    @constraint:String {maxLength: 5000}
    string charge?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Customer whose customer balance to refund from.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Specifies which fields in the response should be expanded.
    refunds_bodyExpandItemsString[] expand?;
    # For payment methods without native refund support (e.g., Konbini, PromptPay), use this email from the customer to receive refund instructions.
    string instructions_email?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Origin of the refund
    "customer_balance" origin?;
    # The identifier of the PaymentIntent to refund.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # String indicating the reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`. If you believe the charge to be fraudulent, specifying `fraudulent` as the reason will add the associated card and email to your [block lists](https://stripe.com/docs/radar/lists), and will also help us improve our fraud detection algorithms.
    "duplicate"|"fraudulent"|"requested_by_customer" reason?;
    # Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.
    boolean refund_application_fee?;
    # Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount).<br><br>A transfer can be reversed only by the application that created the charge.
    boolean reverse_transfer?;
|};

@constraint:String {maxLength: 5000}
public type GetSetupAttemptsQueriesExpandItemsString string;

# [Stripe Connect](https://stripe.com/docs/connect) platforms can reverse transfers made to a
# connected account, either entirely or partially, and can also specify whether
# to refund any related application fees. Transfer reversals add to the
# platform's balance and subtract from the destination account's balance.
# 
# Reversing a transfer that was made for a [destination
# charge](/docs/connect/destination-charges) is allowed only up to the amount of
# the charge. It is possible to reverse a
# [transfer_group](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options)
# transfer only if the destination account has enough balance to cover the
# reversal.
# 
# Related guide: [Reverse transfers](https://stripe.com/docs/connect/separate-charges-and-transfers#reverse-transfers)
public type Transfer_reversal record {
    # Amount, in cents (or local equivalent).
    int amount;
    # Balance transaction that describes the impact on your account balance.
    string|Balance_transaction? balance_transaction?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Linked payment refund for the transfer reversal.
    string|Refund? destination_payment_refund?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "transfer_reversal" 'object;
    # ID of the refund responsible for the transfer reversal.
    string|Refund? source_refund?;
    # ID of the transfer that was reversed.
    string|Transfer transfer;
};

public type payment_method_reuse_agreement_params record {
    "auto"|"hidden" position;
};

@constraint:String {maxLength: 5000}
public type GetEntitlementsActiveEntitlementsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetBillingMetersId
public type GetBillingMetersIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetBillingMetersIdQueriesExpandItemsString[] expand?;
};

public type sources_body record {|
    # Amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources. Not supported for `receiver` type sources, where charge amount may not be specified until funds land.
    int amount?;
    # Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready.
    string currency?;
    # The `Customer` to whom the original source is attached to. Must be set when the original source is not a `Source` (e.g., `Card`).
    @constraint:String {maxLength: 500}
    string customer?;
    # Specifies which fields in the response should be expanded.
    sources_bodyExpandItemsString[] expand?;
    # The authentication `flow` of the source to create. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. It is generally inferred unless a type supports multiple flows.
    "code_verification"|"none"|"receiver"|"redirect" flow?;
    mandate_params mandate?;
    record {|string...;|} metadata?;
    # The source to share.
    @constraint:String {maxLength: 5000}
    string original_source?;
    owner_1 owner?;
    receiver_params receiver?;
    redirect_params redirect?;
    shallow_order_specs source_order?;
    # An arbitrary string to be displayed on your customer's statement. As an example, if your website is `RunClub` and the item you're charging for is a race ticket, you may want to specify a `statement_descriptor` of `RunClub 5K race ticket.` While many payment types will display this information, some may not display it at all.
    @constraint:String {maxLength: 5000}
    string statement_descriptor?;
    # An optional token used to create the source. When passed, token properties will override source parameters.
    @constraint:String {maxLength: 5000}
    string token?;
    # The `type` of the source to create. Required unless `customer` and `original_source` are specified (see the [Cloning card Sources](https://stripe.com/docs/sources/connect#cloning-card-sources) guide)
    @constraint:String {maxLength: 5000}
    string 'type?;
    "reusable"|"single_use" usage?;
|};

public type promotion_codes_body record {|
    # Whether the promotion code is currently active.
    boolean active?;
    # The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for a specific customer. If left blank, we will generate one automatically.
    @constraint:String {maxLength: 500}
    string code?;
    # The coupon for this promotion code.
    @constraint:String {maxLength: 5000}
    string coupon;
    # The customer that this promotion code can be used by. If not set, the promotion code can be used by all customers.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Specifies which fields in the response should be expanded.
    promotion_codes_bodyExpandItemsString[] expand?;
    # The timestamp at which this promotion code will expire. If the coupon has specified a `redeems_by`, then this value cannot be after the coupon's `redeems_by`.
    int expires_at?;
    # A positive integer specifying the number of times the promotion code can be redeemed. If the coupon has specified a `max_redemptions`, then this value cannot be greater than the coupon's `max_redemptions`.
    int max_redemptions?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    restrictions_params_1 restrictions?;
|};

# 
public type Source_transaction_sepa_credit_transfer_data record {
    # Reference associated with the transfer.
    @constraint:String {maxLength: 5000}
    string reference?;
    # Sender's bank account IBAN.
    @constraint:String {maxLength: 5000}
    string sender_iban?;
    # Sender's name.
    @constraint:String {maxLength: 5000}
    string sender_name?;
};

# Details about a returned OutboundTransfer.
public type returned_details_params_1 record {
    "account_closed"|"account_frozen"|"bank_account_restricted"|"bank_ownership_changed"|"declined"|"incorrect_account_holder_name"|"invalid_account_number"|"invalid_currency"|"no_account"|"other" code?;
};

# 
public type Payment_flows_automatic_payment_methods_setup_intent record {
    # Controls whether this SetupIntent will accept redirect-based payment methods.
    # 
    # Redirect-based payment methods may require your customer to be redirected to a payment method's app or site for authentication or additional steps. To [confirm](https://stripe.com/docs/api/setup_intents/confirm) this SetupIntent, you may be required to provide a `return_url` to redirect customers back to your site after they authenticate or complete the setup.
    "always"|"never" allow_redirects?;
    # Automatically calculates compatible payment methods
    boolean? enabled?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingCardholdersCardholderQueriesExpandItemsString string;

public type charges_body record {|
    # Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount?;
    int application_fee?;
    # A fee in cents (or local equivalent) that will be applied to the charge and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the `Stripe-Account` header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/connect/direct-charges#collect-fees).
    int application_fee_amount?;
    # Whether to immediately capture the charge. Defaults to `true`. When `false`, the charge issues an authorization (or pre-authorization), and will need to be [captured](https://stripe.com/docs/api#capture_charge) later. Uncaptured charges expire after a set number of days (7 by default). For more information, see the [authorizing charges and settling later](https://stripe.com/docs/charges/placing-a-hold) documentation.
    boolean capture?;
    # A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string cvc?; int exp_month; int exp_year; record {|string...;|} metadata?; string name?; string number; "card" 'object?;}|string card?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # The ID of an existing customer that will be charged in this request.
    @constraint:String {maxLength: 500}
    string customer?;
    # An arbitrary string which you can attach to a `Charge` object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.
    @constraint:String {maxLength: 40000}
    string description?;
    record {string account; int amount?;}|string destination?;
    # Specifies which fields in the response should be expanded.
    charges_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The Stripe account ID for which these funds are intended. Automatically set if you use the `destination` parameter. For details, see [Creating Separate Charges and Transfers](https://stripe.com/docs/connect/separate-charges-and-transfers#settlement-merchant).
    @constraint:String {maxLength: 5000}
    string on_behalf_of?;
    radar_options_with_hidden_options radar_options?;
    # The email address to which this charge's [receipt](https://stripe.com/docs/dashboard/receipts) will be sent. The receipt will not be sent until the charge is paid, and no receipts will be sent for test mode charges. If this charge is for a [Customer](https://stripe.com/docs/api/customers/object), the email address specified here will override the customer's email address. If `receipt_email` is specified for a charge in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).
    string receipt_email?;
    optional_fields_shipping shipping?;
    # A payment source to be charged. This can be the ID of a [card](https://stripe.com/docs/api#cards) (i.e., credit or debit card), a [bank account](https://stripe.com/docs/api#bank_accounts), a [source](https://stripe.com/docs/api#sources), a [token](https://stripe.com/docs/api#tokens), or a [connected account](https://stripe.com/docs/connect/account-debits#charging-a-connected-account). For certain sources---namely, [cards](https://stripe.com/docs/api#cards), [bank accounts](https://stripe.com/docs/api#bank_accounts), and attached [sources](https://stripe.com/docs/api#sources)---you must also pass the ID of the associated customer.
    @constraint:String {maxLength: 5000}
    string 'source?;
    # For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_specs transfer_data?;
    # A string that identifies this transaction as part of a group. For details, see [Grouping transactions](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options).
    string transfer_group?;
|};

@constraint:String {maxLength: 5000}
public type GetPlansPlanQueriesExpandItemsString string;

# 
public type Person_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Fields that need to be collected to keep the person's account enabled. If not collected by the account's `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.
    Person_requirementsCurrentlydueItemsString[] currently_due;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[] errors;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `current_deadline` becomes set.
    Person_requirementsEventuallydueItemsString[] eventually_due;
    # Fields that weren't collected by the account's `current_deadline`. These fields need to be collected to enable the person's account.
    Person_requirementsPastdueItemsString[] past_due;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.
    Person_requirementsPendingverificationItemsString[] pending_verification;
};

# Cash App is a popular consumer app in the US that allows customers to bank, invest, send, and receive money using their digital wallet. Check this [page](https://stripe.com/docs/payments/cash-app-pay) for more details.
public type payment_method_param_16 record {
    display_preference_param display_preference?;
};

public type custom_field_numeric_param record {
    @constraint:String {maxLength: 255}
    string default_value?;
    int maximum_length?;
    int minimum_length?;
};

# Uses a customer’s [cash balance](https://stripe.com/docs/payments/customer-balance) for the payment. The cash balance can be funded via a bank transfer. Check this [page](https://stripe.com/docs/payments/bank-transfers) for more details.
public type payment_method_param_17 record {
    display_preference_param display_preference?;
};

# Represents the Queries record for the operation: GetChargesChargeDispute
public type GetChargesChargeDisputeQueries record {
    # Specifies which fields in the response should be expanded.
    GetChargesChargeDisputeQueriesExpandItemsString[] expand?;
};

public type billing_meters_body record {|
    customer_mapping_param customer_mapping?;
    aggregation_settings_param default_aggregation;
    # The meter's name.
    @constraint:String {maxLength: 250}
    string display_name;
    # The name of the meter event to record usage for. Corresponds with the `event_name` field on meter events.
    @constraint:String {maxLength: 100}
    string event_name;
    # The time window to pre-aggregate meter events for, if any.
    "day"|"hour" event_time_window?;
    # Specifies which fields in the response should be expanded.
    billing_meters_bodyExpandItemsString[] expand?;
    meter_value_settings_param value_settings?;
|};

# EPS is an Austria-based payment method that allows customers to complete transactions online using their bank credentials. EPS is supported by all Austrian banks and is accepted by over 80% of Austrian online retailers. Check this [page](https://stripe.com/docs/payments/eps) for more details.
public type payment_method_param_18 record {
    display_preference_param display_preference?;
};

# Represents the Queries record for the operation: GetIssuingTokens
public type GetIssuingTokensQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIssuingTokensQueriesExpandItemsString[] expand?;
    # Only return Issuing tokens that were created during the given date interval.
    created_21 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # The Issuing card identifier to list tokens for.
    @constraint:String {maxLength: 5000}
    string card;
    # Select Issuing tokens with the given status.
    "active"|"deleted"|"requested"|"suspended" status?;
};

# Financial Process Exchange (FPX) is a Malaysia-based payment method that allows customers to complete transactions online using their bank credentials. Bank Negara Malaysia (BNM), the Central Bank of Malaysia, and eleven other major Malaysian financial institutions are members of the PayNet Group, which owns and operates FPX. It is one of the most popular online payment methods in Malaysia, with nearly 90 million transactions in 2018 according to BNM. Check this [page](https://stripe.com/docs/payments/fpx) for more details.
public type payment_method_param_19 record {
    display_preference_param display_preference?;
};

# BLIK is a [single use](https://stripe.com/docs/payments/payment-methods#usage) payment method that requires customers to authenticate their payments. When customers want to pay online using BLIK, they request a six-digit code from their banking application and enter it into the payment collection form. Check this [page](https://stripe.com/docs/payments/blik) for more details.
public type payment_method_param_12 record {
    display_preference_param display_preference?;
};

public type eu_bank_account_params record {
    @constraint:String {maxLength: 5000}
    string country;
};

# Boleto is an official (regulated by the Central Bank of Brazil) payment method in Brazil. Check this [page](https://stripe.com/docs/payments/boleto) for more details.
public type payment_method_param_13 record {
    display_preference_param display_preference?;
};

# Represents the Queries record for the operation: GetPaymentMethodDomainsPaymentMethodDomain
public type GetPaymentMethodDomainsPaymentMethodDomainQueries record {
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodDomainsPaymentMethodDomainQueriesExpandItemsString[] expand?;
};

# 
public type Subscription_details_data record {
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) defined as subscription metadata when an invoice is created. Becomes an immutable snapshot of the subscription metadata at the time of invoice finalization.
    #  *Note: This attribute is populated only for invoices created on or after June 29, 2023.*
    record {|string...;|}? metadata?;
};

@constraint:String {maxLength: 5000}
public type GetSubscriptionsQueriesExpandItemsString string;

# Cards are a popular way for consumers and businesses to pay online or in person. Stripe supports global and local card networks.
public type payment_method_param_14 record {
    display_preference_param display_preference?;
};

# Represents the Queries record for the operation: GetRadarEarlyFraudWarnings
public type GetRadarEarlyFraudWarningsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetRadarEarlyFraudWarningsQueriesExpandItemsString[] expand?;
    # Only return early fraud warnings for the charge specified by this charge ID.
    string charge?;
    # Only return early fraud warnings that were created during the given date interval.
    created_29 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return early fraud warnings for charges that were created by the PaymentIntent specified by this PaymentIntent ID.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type subscription_items_item_body_1 record {|
    # Delete all usage for the given subscription item. Allowed only when the current plan's `usage_type` is `metered`.
    boolean clear_usage?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    # If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.
    int proration_date?;
|};

# Cartes Bancaires is France's local card network. More than 95% of these cards are co-branded with either Visa or Mastercard, meaning you can process these cards over either Cartes Bancaires or the Visa or Mastercard networks. Check this [page](https://stripe.com/docs/payments/cartes-bancaires) for more details.
public type payment_method_param_15 record {
    display_preference_param display_preference?;
};

# Represents the Queries record for the operation: GetInvoicesInvoice
public type GetInvoicesInvoiceQueries record {
    # Specifies which fields in the response should be expanded.
    GetInvoicesInvoiceQueriesExpandItemsString[] expand?;
};

public type setup_intent_payment_method_options_mandate_options_param record {
    string|"" custom_mandate_url?;
    ("invoice"|"subscription")[] default_for?;
    @constraint:String {maxLength: 500}
    string interval_description?;
    "combined"|"interval"|"sporadic" payment_schedule?;
    "business"|"personal" transaction_type?;
};

# 
public type Issuing_authorization_merchant_data record {
    # A categorization of the seller's type of business. See our [merchant categories guide](https://stripe.com/docs/issuing/merchant-categories) for a list of possible values.
    @constraint:String {maxLength: 5000}
    string category;
    # The merchant category code for the seller’s business
    @constraint:String {maxLength: 5000}
    string category_code;
    # City where the seller is located
    string? city?;
    # Country where the seller is located
    string? country?;
    # Name of the seller
    string? name?;
    # Identifier assigned to the seller by the card network. Different card networks may assign different network_id fields to the same merchant.
    @constraint:String {maxLength: 5000}
    string network_id;
    # Postal code where the seller is located
    string? postal_code?;
    # State where the seller is located
    string? state?;
    # An ID assigned by the seller to the location of the sale.
    string? terminal_id?;
    # URL provided by the merchant on a 3DS request
    string? url?;
};

# Stripe users in the UK can accept Bacs Direct Debit payments from customers with a UK bank account, check this [page](https://stripe.com/docs/payments/payment-methods/bacs-debit) for more details.
public type payment_method_param_10 record {
    display_preference_param display_preference?;
};

# Bancontact is the most popular online payment method in Belgium, with over 15 million cards in circulation. [Customers](https://stripe.com/docs/api/customers) use a Bancontact card or mobile app linked to a Belgian bank account to make online payments that are secure, guaranteed, and confirmed immediately. Check this [page](https://stripe.com/docs/payments/bancontact) for more details.
public type payment_method_param_11 record {
    display_preference_param display_preference?;
};

# 
public type Setup_intent_payment_method_options_mandate_options_sepa_debit record {
};

# A subset of parameters to be passed to subscription creation for Checkout Sessions in `subscription` mode.
public type subscription_data_params record {
    decimal application_fee_percent?;
    int billing_cycle_anchor?;
    subscription_data_paramsDefaulttaxratesItemsString[] default_tax_rates?;
    @constraint:String {maxLength: 500}
    string description?;
    invoice_settings_params invoice_settings?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    "create_prorations"|"none" proration_behavior?;
    transfer_data_specs_2 transfer_data?;
    int trial_end?;
    int trial_period_days?;
    trial_settings_config trial_settings?;
};

# Represents the Queries record for the operation: GetTerminalConfigurationsConfiguration
public type GetTerminalConfigurationsConfigurationQueries record {
    # Specifies which fields in the response should be expanded.
    GetTerminalConfigurationsConfigurationQueriesExpandItemsString[] expand?;
};

public type configurations_configuration_body record {|
    # Whether the configuration is active and can be used to create portal sessions.
    boolean active?;
    business_profile_update_param business_profile?;
    # The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.
    string|"" default_return_url?;
    # Specifies which fields in the response should be expanded.
    configurations_configuration_bodyExpandItemsString[] expand?;
    features_updating_param features?;
    login_page_update_param login_page?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

public type id_verify_body record {|
    # Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.
    int[] amounts?;
    # Specifies which fields in the response should be expanded.
    id_verify_bodyExpandItemsString[] expand?;
|};

# The individual line items that make up the invoice. `lines` is sorted as follows: (1) pending invoice items (including prorations) in reverse chronological order, (2) subscription items in reverse chronological order, and (3) invoice items added after invoice creation in chronological order.
public type InvoiceLinesList_1 record {
    # Details about each object.
    Line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# [Tax codes](https://stripe.com/docs/tax/tax-categories) classify goods and services for tax purposes.
public type Tax_code record {
    # A detailed description of which types of products the tax code represents.
    @constraint:String {maxLength: 5000}
    string description;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # A short name for the tax code.
    @constraint:String {maxLength: 5000}
    string name;
    # String representing the object's type. Objects of the same type share the same value.
    "tax_code" 'object;
};

public type cards_id_body_1ExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Setup_intentPaymentmethodtypesItemsString string;

public type financial_account_features_body record {|
    access_1 card_issuing?;
    access_2 deposit_insurance?;
    # Specifies which fields in the response should be expanded.
    financial_account_features_bodyExpandItemsString[] expand?;
    financial_addresses_1 financial_addresses?;
    inbound_transfers_1 inbound_transfers?;
    access_3 intra_stripe_flows?;
    outbound_payments_1 outbound_payments?;
    outbound_transfers_1 outbound_transfers?;
|};

public type outbound_transfers_outbound_transfer_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetRadarEarlyFraudWarningsEarlyFraudWarningQueriesExpandItemsString string;

public type authorization_controls_paramBlockedcategoriesItemsString "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards";

# [Link](https://stripe.com/docs/payments/link) is a payment method network. With Link, users save their payment details once, then reuse that information to pay with one click for any business on the network.
public type payment_method_param_27 record {
    display_preference_param display_preference?;
};

# MobilePay is a [single-use](https://stripe.com/docs/payments/payment-methods#usage) card wallet payment method used in Denmark and Finland. It allows customers to [authenticate and approve](https://stripe.com/docs/payments/payment-methods#customer-actions) payments using the MobilePay app. Check this [page](https://stripe.com/docs/payments/mobilepay) for more details.
public type payment_method_param_28 record {
    display_preference_param display_preference?;
};

# Stripe users in Europe and the United States can accept Multibanco payments from customers in Portugal using [Sources](https://stripe.com/docs/sources)—a single integration path for creating payments using any supported method.
public type payment_method_param_29 record {
    display_preference_param display_preference?;
};

@constraint:String {maxLength: 5000}
public type GetSubscriptionsSubscriptionExposedIdQueriesExpandItemsString string;

# iDEAL is a Netherlands-based payment method that allows customers to complete transactions online using their bank credentials. All major Dutch banks are members of Currence, the scheme that operates iDEAL, making it the most popular online payment method in the Netherlands with a share of online transactions close to 55%. Check this [page](https://stripe.com/docs/payments/ideal) for more details.
public type payment_method_param_23 record {
    display_preference_param display_preference?;
};

# JCB is a credit card company based in Japan. JCB is currently available in Japan to businesses approved by JCB, and available to all businesses in Australia, Canada, Hong Kong, Japan, New Zealand, Singapore, Switzerland, United Kingdom, United States, and all countries in the European Economic Area except Iceland. Check this [page](https://support.stripe.com/questions/accepting-japan-credit-bureau-%28jcb%29-payments) for more details.
public type payment_method_param_24 record {
    display_preference_param display_preference?;
};

# Klarna gives customers a range of [payment options](https://stripe.com/docs/payments/klarna#payment-options) during checkout. Available payment options vary depending on the customer's billing address and the transaction amount. These payment options make it convenient for customers to purchase items in all price ranges. Check this [page](https://stripe.com/docs/payments/klarna) for more details.
public type payment_method_param_25 record {
    display_preference_param display_preference?;
};

# Konbini allows customers in Japan to pay for bills and online purchases at convenience stores with cash. Check this [page](https://stripe.com/docs/payments/konbini) for more details.
public type payment_method_param_26 record {
    display_preference_param display_preference?;
};

# giropay is a German payment method based on online banking, introduced in 2006. It allows customers to complete transactions online using their online banking environment, with funds debited from their bank account. Depending on their bank, customers confirm payments on giropay using a second factor of authentication or a PIN. giropay accounts for 10% of online checkouts in Germany. Check this [page](https://stripe.com/docs/payments/giropay) for more details.
public type payment_method_param_20 record {
    display_preference_param display_preference?;
};

public type phase_configuration_params_1 record {
    add_invoice_item_entry[] add_invoice_items?;
    decimal application_fee_percent?;
    automatic_tax_config_2 automatic_tax?;
    "automatic"|"phase_start" billing_cycle_anchor?;
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    "charge_automatically"|"send_invoice" collection_method?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    string|"" description?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    int|"now" end_date?;
    invoice_settings_1 invoice_settings?;
    configuration_item_params[] items;
    int iterations?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int|"now" start_date?;
    transfer_data_specs_2 transfer_data?;
    boolean trial?;
    int|"now" trial_end?;
};

public type phase_configuration_params_2 record {
    add_invoice_item_entry[] add_invoice_items?;
    decimal application_fee_percent?;
    automatic_tax_config_3 automatic_tax?;
    "automatic"|"phase_start" billing_cycle_anchor?;
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    "charge_automatically"|"send_invoice" collection_method?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    string|"" description?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    int|"now" end_date?;
    invoice_settings_2 invoice_settings?;
    configuration_item_params[] items;
    int iterations?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int|"now" start_date?;
    transfer_data_specs_2 transfer_data?;
    boolean trial?;
    int|"now" trial_end?;
};

# Google Pay allows customers to make payments in your app or website using any credit or debit card saved to their Google Account, including those from Google Play, YouTube, Chrome, or an Android device. Use the Google Pay API to request any credit or debit card stored in your customer's Google account. Check this [page](https://stripe.com/docs/google-pay) for more details.
public type payment_method_param_21 record {
    display_preference_param display_preference?;
};

public type Checkout\.sessionPaymentmethodtypesItemsString string;

public type currency_option_update record {
    int amount?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
};

public type phase_configuration_params_3 record {
    add_invoice_item_entry[] add_invoice_items?;
    decimal application_fee_percent?;
    automatic_tax_config_3 automatic_tax?;
    "automatic"|"phase_start" billing_cycle_anchor?;
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    "charge_automatically"|"send_invoice" collection_method?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    string currency?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    string|"" description?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    int end_date?;
    invoice_settings_2 invoice_settings?;
    configuration_item_params[] items;
    int iterations?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    transfer_data_specs_2 transfer_data?;
    boolean trial?;
    int trial_end?;
};

# GrabPay is a payment method developed by [Grab](https://www.grab.com/sg/consumer/finance/pay/). GrabPay is a digital wallet - customers maintain a balance in their wallets that they pay out with. Check this [page](https://stripe.com/docs/payments/grabpay) for more details.
public type payment_method_param_22 record {
    display_preference_param display_preference?;
};

# 
public type Portal_subscription_cancel record {
    Portal_subscription_cancellation_reason cancellation_reason;
    # Whether the feature is enabled.
    boolean enabled;
    # Whether to cancel subscriptions immediately or at the end of the billing period.
    "at_period_end"|"immediately" mode;
    # Whether to create prorations when canceling subscriptions. Possible values are `none` and `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior;
};

@constraint:String {maxLength: 5000}
public type GetPaymentIntentsSearchQueriesExpandItemsString string;

public type charge_dispute_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Account_requirements_alternativeOriginalfieldsdueItemsString string;

# Represents the Queries record for the operation: GetTerminalReaders
public type GetTerminalReadersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTerminalReadersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Filters readers by device type
    "bbpos_chipper2x"|"bbpos_wisepad3"|"bbpos_wisepos_e"|"mobile_phone_reader"|"simulated_wisepos_e"|"stripe_m2"|"verifone_P400" device_type?;
    # A location ID to filter the response list to only readers at the specific location
    @constraint:String {maxLength: 5000}
    string location?;
    # Filters readers by serial number
    @constraint:String {maxLength: 5000}
    string serial_number?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # A status filter to filter readers to only offline or online readers
    "offline"|"online" status?;
};

public type issuing_authorizations_body record {|
    # The total amount to attempt to authorize. This amount is in the provided currency, or defaults to the card's currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    amount_details_specs amount_details?;
    # How the card details were provided. Defaults to online.
    "chip"|"contactless"|"keyed_in"|"online"|"swipe" authorization_method?;
    # Card associated with this authorization.
    @constraint:String {maxLength: 5000}
    string card;
    # The currency of the authorization. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Specifies which fields in the response should be expanded.
    issuing_authorizations_bodyExpandItemsString[] expand?;
    fleet_specs fleet?;
    fuel_specs fuel?;
    # If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.
    boolean is_amount_controllable?;
    merchant_data_specs merchant_data?;
    network_data_specs network_data?;
    verification_data_specs verification_data?;
    # The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`. Will populate as `null` when no digital wallet was utilized.
    "apple_pay"|"google_pay"|"samsung_pay" wallet?;
|};

@constraint:String {maxLength: 5000}
public type GetTerminalLocationsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPaymentMethodsQueriesExpandItemsString string;

# The customer's current subscriptions, if any.
public type SubscriptionList_1 record {
    # Details about each object.
    Subscription[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Portal_flows_after_completion_hosted_confirmation record {
    # A custom message to display to the customer after the flow is completed.
    string? custom_message?;
};

# 
public type CustomerResourceCustomerList record {
    Customer[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/customers`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetCouponsQueriesExpandItemsString string;

# The person's registered address.
public type address_specs_1 record {
    @constraint:String {maxLength: 100}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 200}
    string line1?;
    @constraint:String {maxLength: 200}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerBalanceTransactionsTransactionQueriesExpandItemsString string;

# Swish is a [real-time](https://stripe.com/docs/payments/real-time) payment method popular in Sweden. It allows customers to [authenticate and approve](https://stripe.com/docs/payments/payment-methods#customer-actions) payments using the Swish mobile app and the Swedish BankID mobile app. Check this [page](https://stripe.com/docs/payments/swish) for more details.
public type payment_method_param_38 record {
    display_preference_param display_preference?;
};

# 
public type Payment_method_interac_present record {
    # Card brand. Can be `interac`, `mastercard` or `visa`.
    string? brand?;
    # The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.
    string? cardholder_name?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    # The last four digits of the card.
    string? last4?;
    # Contains information about card networks that can be used to process the payment.
    Payment_method_card_present_networks? networks?;
    # EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.
    Payment_method_interac_presentPreferredlocalesItemsString[]? preferred_locales?;
    # How card details were read in this transaction.
    "contact_emv"|"contactless_emv"|"contactless_magstripe_mode"|"magnetic_stripe_fallback"|"magnetic_stripe_track2"? read_method?;
};

# Stripe users in the United States can accept ACH direct debit payments from customers with a US bank account using the Automated Clearing House (ACH) payments system operated by Nacha. Check this [page](https://stripe.com/docs/payments/ach-debit) for more details.
public type payment_method_param_39 record {
    display_preference_param display_preference?;
};

# PromptPay is a Thailand-based payment method that allows customers to make a payment using their preferred app from participating banks. Check this [page](https://stripe.com/docs/payments/promptpay) for more details.
public type payment_method_param_34 record {
    display_preference_param display_preference?;
};

public type inline_response_200_5 Terminal\.reader|Deleted_terminal\.reader;

# Revolut Pay, developed by Revolut, a global finance app, is a digital wallet payment method. Revolut Pay uses the customer’s stored balance or cards to fund the payment, and offers the option for non-Revolut customers to save their details after their first purchase.
public type payment_method_param_35 record {
    display_preference_param display_preference?;
};

# The [Single Euro Payments Area (SEPA)](https://en.wikipedia.org/wiki/Single_Euro_Payments_Area) is an initiative of the European Union to simplify payments within and across member countries. SEPA established and enforced banking standards to allow for the direct debiting of every EUR-denominated bank account within the SEPA region, check this [page](https://stripe.com/docs/payments/sepa-debit) for more details.
public type payment_method_param_36 record {
    display_preference_param display_preference?;
};

public type shipping_fail_body record {|
    # Specifies which fields in the response should be expanded.
    shipping_fail_bodyExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type GetClimateProductsQueriesExpandItemsString string;

# Stripe users in Europe and the United States can use the [Payment Intents API](https://stripe.com/docs/payments/payment-intents)—a single integration path for creating payments using any supported method—to accept [Sofort](https://www.sofort.com/) payments from customers. Check this [page](https://stripe.com/docs/payments/sofort) for more details.
public type payment_method_param_37 record {
    display_preference_param display_preference?;
};

# OXXO is a Mexican chain of convenience stores with thousands of locations across Latin America and represents nearly 20% of online transactions in Mexico. OXXO allows customers to pay bills and online purchases in-store with cash. Check this [page](https://stripe.com/docs/payments/oxxo) for more details.
public type payment_method_param_30 record {
    display_preference_param display_preference?;
};

# Przelewy24 is a Poland-based payment method aggregator that allows customers to complete transactions online using bank transfers and other methods. Bank transfers account for 30% of online payments in Poland and Przelewy24 provides a way for customers to pay with over 165 banks. Check this [page](https://stripe.com/docs/payments/p24) for more details.
public type payment_method_param_31 record {
    display_preference_param display_preference?;
};

# PayNow is a Singapore-based payment method that allows customers to make a payment using their preferred app from participating banks and participating non-bank financial institutions. Check this [page](https://stripe.com/docs/payments/paynow) for more details.
public type payment_method_param_32 record {
    display_preference_param display_preference?;
};

# PayPal, a digital wallet popular with customers in Europe, allows your customers worldwide to pay using their PayPal account. Check this [page](https://stripe.com/docs/payments/paypal) for more details.
public type payment_method_param_33 record {
    display_preference_param display_preference?;
};

# 
public type Checkout_mobilepay_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Shows last VerificationSession error
public type Gelato_session_last_error record {
    # A short machine-readable string giving the reason for the verification or user-session failure.
    "abandoned"|"consent_declined"|"country_not_supported"|"device_not_supported"|"document_expired"|"document_type_not_supported"|"document_unverified_other"|"email_unverified_other"|"email_verification_declined"|"id_number_insufficient_document_data"|"id_number_mismatch"|"id_number_unverified_other"|"phone_unverified_other"|"phone_verification_declined"|"selfie_document_missing_photo"|"selfie_face_mismatch"|"selfie_manipulated"|"selfie_unverified_other"|"under_supported_age"? code?;
    # A message that explains the reason for verification or user-session failure.
    string? reason?;
};

@constraint:String {maxLength: 5000}
public type GetInvoiceitemsQueriesExpandItemsString string;

public type transactions_create_force_capture_body record {|
    # The total amount to attempt to capture. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Card associated with this transaction.
    @constraint:String {maxLength: 5000}
    string card;
    # The currency of the capture. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Specifies which fields in the response should be expanded.
    transactions_create_force_capture_bodyExpandItemsString[] expand?;
    merchant_data_specs merchant_data?;
    purchase_details_specs purchase_details?;
|};

# 
public type Cancellation_details record {
    # Additional comments about why the user canceled the subscription, if the subscription was canceled explicitly by the user.
    string? comment?;
    # The customer submitted reason for why they canceled, if the subscription was canceled explicitly by the user.
    "customer_service"|"low_quality"|"missing_features"|"other"|"switched_service"|"too_complex"|"too_expensive"|"unused"? feedback?;
    # Why this subscription was canceled.
    "cancellation_requested"|"payment_disputed"|"payment_failed"? reason?;
};

# If provided, this hash will be used to create a PaymentMethod. The new PaymentMethod will appear
# in the [payment_method](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-payment_method)
# property on the PaymentIntent.
public type payment_method_data_params record {
    payment_method_param acss_debit?;
    record {} affirm?;
    record {} afterpay_clearpay?;
    record {} alipay?;
    "always"|"limited"|"unspecified" allow_redisplay?;
    record {} amazon_pay?;
    param_4 au_becs_debit?;
    param_5 bacs_debit?;
    record {} bancontact?;
    billing_details_inner_params billing_details?;
    record {} blik?;
    param_6 boleto?;
    record {} cashapp?;
    record {} customer_balance?;
    param_7 eps?;
    param_8 fpx?;
    record {} giropay?;
    record {} grabpay?;
    param_9 ideal?;
    record {} interac_present?;
    param_10 klarna?;
    record {} konbini?;
    record {} link?;
    record {|string...;|} metadata?;
    record {} mobilepay?;
    record {} multibanco?;
    record {} oxxo?;
    param_11 p24?;
    record {} paynow?;
    record {} paypal?;
    record {} pix?;
    record {} promptpay?;
    radar_options_with_hidden_options_1 radar_options?;
    record {} revolut_pay?;
    param_12 sepa_debit?;
    param_13 sofort?;
    record {} swish?;
    record {} twint?;
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type;
    payment_method_param_1 us_bank_account?;
    record {} wechat_pay?;
    record {} zip?;
};

public type webhook_endpoints_webhook_endpoint_bodyExpandItemsString string;

# This hash contains the card payment method options.
public type Confirmation_tokens_resource_payment_method_options_resource_card record {
    # The `cvc_update` Token collected from the Payment Element.
    string? cvc_token?;
};

# 
public type Payment_method_details_klarna record {
    # The Klarna payment method used for this transaction.
    # Can be one of `pay_later`, `pay_now`, `pay_with_financing`, or `pay_in_installments`
    string? payment_method_category?;
    # Preferred language of the Klarna authorization page that the customer is redirected to.
    # Can be one of `de-AT`, `en-AT`, `nl-BE`, `fr-BE`, `en-BE`, `de-DE`, `en-DE`, `da-DK`, `en-DK`, `es-ES`, `en-ES`, `fi-FI`, `sv-FI`, `en-FI`, `en-GB`, `en-IE`, `it-IT`, `en-IT`, `nl-NL`, `en-NL`, `nb-NO`, `en-NO`, `sv-SE`, `en-SE`, `en-US`, `es-US`, `fr-FR`, `en-FR`, `cs-CZ`, `en-CZ`, `ro-RO`, `en-RO`, `el-GR`, `en-GR`, `en-AU`, `en-NZ`, `en-CA`, `fr-CA`, `pl-PL`, `en-PL`, `pt-PT`, `en-PT`, `de-CH`, `fr-CH`, `it-CH`, or `en-CH`
    string? preferred_locale?;
};

public type inline_response_200_1 Card|Bank_account|Source;

# 
public type Payment_method_details_ach_credit_transfer record {
    # Account number to transfer funds to.
    string? account_number?;
    # Name of the bank associated with the routing number.
    string? bank_name?;
    # Routing transit number for the bank account to transfer funds to.
    string? routing_number?;
    # SWIFT code of the bank associated with the routing number.
    string? swift_code?;
};

public type inline_response_200_2 Payment_source|Deleted_payment_source;

public type inline_response_200_3 Terminal\.configuration|Deleted_terminal\.configuration;

# 
public type Payment_method_details_sofort record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Bank Identifier Code of the bank associated with the bank account.
    string? bic?;
    # Two-letter ISO code representing the country the bank account is located in.
    string? country?;
    # The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.
    string|Payment_method? generated_sepa_debit?;
    # The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.
    string|Mandate? generated_sepa_debit_mandate?;
    # Last four characters of the IBAN.
    string? iban_last4?;
    # Preferred language of the SOFORT authorization page that the customer is redirected to.
    # Can be one of `de`, `en`, `es`, `fr`, `it`, `nl`, or `pl`
    "de"|"en"|"es"|"fr"|"it"|"nl"|"pl"? preferred_language?;
    # Owner's verified full name. Values are verified or provided by SOFORT directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
};

public type inline_response_200_4 Terminal\.location|Deleted_terminal\.location;

@constraint:String {maxLength: 5000}
public type External_account_requirementsPastdueItemsString string;

# Represents the Queries record for the operation: GetDisputes
public type GetDisputesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetDisputesQueriesExpandItemsString[] expand?;
    # Only return disputes associated to the charge specified by this charge ID.
    @constraint:String {maxLength: 5000}
    string charge?;
    created_9 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return disputes associated to the PaymentIntent specified by this PaymentIntent ID.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetTransfersTransferReversalsIdQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetIssuingTokensToken
public type GetIssuingTokensTokenQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingTokensTokenQueriesExpandItemsString[] expand?;
};

public type Subscriptions_resource_subscription_invoice_settingsAccounttaxidsItemsnull string|Tax_id|Deleted_tax_id;

# Information about the person represented by the account. This field is null unless `business_type` is set to `individual`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
public type individual_specs record {
    address_specs address?;
    japan_address_kana_specs address_kana?;
    japan_address_kanji_specs address_kanji?;
    record {int day; int month; int year;}|"" dob?;
    string email?;
    @constraint:String {maxLength: 100}
    string first_name?;
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    string gender?;
    @constraint:String {maxLength: 5000}
    string id_number?;
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    @constraint:String {maxLength: 100}
    string last_name?;
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    record {|string...;|}|"" metadata?;
    string phone?;
    "existing"|"none" political_exposure?;
    address_specs registered_address?;
    individual_relationship_specs relationship?;
    @constraint:String {maxLength: 5000}
    string ssn_last_4?;
    person_verification_specs verification?;
};

# Zip gives your customers a way to split purchases over a series of payments. Check this [page](https://stripe.com/docs/payments/zip) for more details like country availability.
public type payment_method_param_41 record {
    display_preference_param display_preference?;
};

@constraint:String {maxLength: 5000}
public type GetLinkedAccountsAccountQueriesExpandItemsString string;

# If this is an `acss_debit` PaymentMethod, this hash contains details about the ACSS Debit payment method.
public type payment_method_param_42 record {
    @constraint:String {maxLength: 5000}
    string account_number;
    @constraint:String {maxLength: 5000}
    string institution_number;
    @constraint:String {maxLength: 5000}
    string transit_number;
};

# Sort Code Records contain U.K. bank account details per the sort code format.
public type Funding_instructions_bank_transfer_sort_code_record record {
    # The name of the person or business that owns the bank account
    @constraint:String {maxLength: 5000}
    string account_holder_name;
    # The account number
    @constraint:String {maxLength: 5000}
    string account_number;
    # The six-digit sort code
    @constraint:String {maxLength: 5000}
    string sort_code;
};

# Represents the Queries record for the operation: GetIssuingPhysicalBundles
public type GetIssuingPhysicalBundlesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIssuingPhysicalBundlesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return physical bundles with the given type.
    "custom"|"standard" 'type?;
    # Only return physical bundles with the given status.
    "active"|"inactive"|"review" status?;
};

# This hash contains details about the online acceptance.
public type Confirmation_tokens_resource_mandate_data_resource_customer_acceptance_resource_online record {
    # The IP address from which the Mandate was accepted by the customer.
    string? ip_address?;
    # The user agent of the browser from which the Mandate was accepted by the customer.
    string? user_agent?;
};

# If this is an `us_bank_account` PaymentMethod, this hash contains details about the US bank account payment method.
public type payment_method_param_43 record {
    "company"|"individual" account_holder_type?;
    @constraint:String {maxLength: 5000}
    string account_number?;
    "checking"|"savings" account_type?;
    @constraint:String {maxLength: 5000}
    string financial_connections_account?;
    @constraint:String {maxLength: 5000}
    string routing_number?;
};

# 
public type Portal_flows_flow record {
    Portal_flows_flow_after_completion after_completion;
    # Configuration when `flow.type=subscription_cancel`.
    Portal_flows_flow_subscription_cancel? subscription_cancel?;
    # Configuration when `flow.type=subscription_update`.
    Portal_flows_flow_subscription_update? subscription_update?;
    # Configuration when `flow.type=subscription_update_confirm`.
    Portal_flows_flow_subscription_update_confirm? subscription_update_confirm?;
    # Type of flow that the customer will go through.
    "payment_method_update"|"subscription_cancel"|"subscription_update"|"subscription_update_confirm" 'type;
};

# 
public type Invoice_setting_customer_rendering_options record {
    # How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.
    string? amount_tax_display?;
};

public type registrations_id_bodyExpandItemsString string;

public type all_prices_recurring_params record {
    "day"|"month"|"week"|"year" interval?;
    @constraint:String {maxLength: 5000}
    string meter?;
    "licensed"|"metered" usage_type?;
};

# Describes a fixed amount to charge for shipping. Must be present if type is `fixed_amount`.
public type fixed_amount_update record {
    record {|currency_option_update...;|} currency_options?;
};

# WeChat, owned by Tencent, is China's leading mobile app with over 1 billion monthly active users. Chinese consumers can use WeChat Pay to pay for goods and services inside of businesses' apps and websites. WeChat Pay users buy most frequently in gaming, e-commerce, travel, online education, and food/nutrition. Check this [page](https://stripe.com/docs/payments/wechat-pay) for more details.
public type payment_method_param_40 record {
    display_preference_param display_preference?;
};

# 
public type Setup_intent_next_action_verify_with_microdeposits record {
    # The timestamp when the microdeposits are expected to land.
    int arrival_date;
    # The URL for the hosted verification page, which allows customers to verify their bank account.
    @constraint:String {maxLength: 5000}
    string hosted_verification_url;
    # The type of the microdeposit sent to the customer. Used to distinguish between different verification methods.
    "amounts"|"descriptor_code"? microdeposit_type?;
};

# 
public type TreasuryReceivedCreditsResourceCreditReversalList record {
    # Details about each object.
    Treasury\.credit_reversal[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type Account_requirementsPastdueItemsString string;

# 
public type Payment_method_options_paynow record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type ApmsSourcesSourceTransactionList record {
    Source_transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type Source_type_wechat record {
    string prepay_id?;
    string? qr_code_url?;
    string statement_descriptor?;
};

# 
public type CreditNoteLinesList record {
    # Details about each object.
    Credit_note_line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# The person's address.
public type legal_entity_and_kyc_address_specs_1 record {
    @constraint:String {maxLength: 100}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 200}
    string line1?;
    @constraint:String {maxLength: 200}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

public type settings_terms_of_service_specs record {
    int date?;
    string ip?;
    string|"" user_agent?;
};

public type shipping_deliver_body record {|
    # Specifies which fields in the response should be expanded.
    shipping_deliver_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_method_fpx record {
    # The customer's bank, if provided. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`, or `bank_of_china`.
    "affin_bank"|"agrobank"|"alliance_bank"|"ambank"|"bank_islam"|"bank_muamalat"|"bank_of_china"|"bank_rakyat"|"bsn"|"cimb"|"deutsche_bank"|"hong_leong_bank"|"hsbc"|"kfh"|"maybank2e"|"maybank2u"|"ocbc"|"pb_enterprise"|"public_bank"|"rhb"|"standard_chartered"|"uob" bank;
};

public type intent_confirm_bodyExpandItemsString string;

public type persons_person_bodyExpandItemsString string;

# Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`.
public type transform_usage_param record {
    int divide_by;
    "down"|"up" round;
};

# Settings related to subscription trials.
public type trial_settings_config_1 record {
    end_behavior end_behavior;
};

# Controls phone number collection settings during checkout.
# 
# We recommend that you review your privacy policy and check with your legal contacts.
public type phone_number_collection_params_1 record {
    boolean enabled;
};

public type invoice_settings_2 record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    int days_until_due?;
    param_3 issuer?;
};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountQueriesExpandItemsString string;

# 
public type Invoice_setting_rendering_options record {
    # How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.
    string? amount_tax_display?;
};

public type invoice_settings_1 record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    int days_until_due?;
    param_2 issuer?;
};

@constraint:String {maxLength: 5000}
public type GetExchangeRatesQueriesExpandItemsString string;

# Behavior after the purchase is complete.
public type after_completion_params record {
    after_completion_confirmation_page_params hosted_confirmation?;
    after_completion_redirect_params redirect?;
    "hosted_confirmation"|"redirect" 'type;
};

# 
public type Payment_method_details_card_wallet_google_pay record {
};

# Use this parameter to automatically create a Transfer when the payment succeeds. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
public type transfer_data_update_params record {
    int amount?;
};

public type Treasury\.debit_reversal record {
    int amount;
    int created;
    string currency;
    string? financial_account?;
    string? hosted_regulatory_receipt_url?;
    string id;
    Treasury_received_debits_resource_debit_reversal_linked_flows? linked_flows?;
    boolean livemode;
    record {|string...;|} metadata;
    "ach"|"card" network;
    "treasury.debit_reversal" 'object;
    string received_debit;
    "failed"|"processing"|"succeeded" status;
    Treasury_received_debits_resource_status_transitions status_transitions;
    string|Treasury\.transaction? 'transaction?;
};

# 
public type Balance_amount_by_source_type record {
    # Amount for bank account.
    int bank_account?;
    # Amount for card.
    int card?;
    # Amount for FPX.
    int fpx?;
};

# 
public type Checkout_ideal_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Bank_connections_resource_balance record {
    # The time that the external institution calculated this balance. Measured in seconds since the Unix epoch.
    int as_of;
    Bank_connections_resource_balance_api_resource_cash_balance cash?;
    Bank_connections_resource_balance_api_resource_credit_balance credit?;
    # The balances owed to (or by) the account holder.
    # 
    # Each key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
    # 
    # Each value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.
    record {|int...;|} current;
    # The `type` of the balance. An additional hash is included on the balance with a name matching this value.
    "cash"|"credit" 'type;
};

# 
public type Tax_product_registrations_resource_country_options_united_states record {
    Tax_product_registrations_resource_country_options_us_local_amusement_tax local_amusement_tax?;
    Tax_product_registrations_resource_country_options_us_local_lease_tax local_lease_tax?;
    # Two-letter US state code ([ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)).
    @constraint:String {maxLength: 5000}
    string state;
    # Type of registration in the US.
    "local_amusement_tax"|"local_lease_tax"|"state_communications_tax"|"state_sales_tax" 'type;
};

public type intent_increment_authorization_body record {|
    # The updated total amount that you intend to collect from the cardholder. This amount must be greater than the currently authorized amount.
    int amount;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    int application_fee_amount?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 1000}
    string description?;
    # Specifies which fields in the response should be expanded.
    intent_increment_authorization_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # For card charges, use [statement_descriptor_suffix](https://stripe.com/docs/payments/account/statement-descriptors#dynamic). Otherwise, you can use this value as the complete description of a charge on your customers' statements. It must contain at least one letter and be 1–22 characters long.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    transfer_data_update_params_2 transfer_data?;
|};

@constraint:String {maxLength: 5000}
public type GetShippingRatesQueriesExpandItemsString string;

public type account_bank_accounts_body record {|
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; "checking"|"futsu"|"savings"|"toza" account_type?; string country; string currency?; record {record {bank_account_ownership_verificationFilesItemsString[] files?;} bank_account_ownership_verification?;} documents?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    # When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.
    boolean default_for_currency?;
    # Specifies which fields in the response should be expanded.
    account_bank_accounts_bodyExpandItemsString[] expand?;
    # Please refer to full [documentation](https://stripe.com/docs/api) instead.
    @constraint:String {maxLength: 5000}
    string external_account?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

public type payment_links_payment_link_body record {|
    # Whether the payment link's `url` is active. If `false`, customers visiting the URL will be shown a page saying that the link has been deactivated.
    boolean active?;
    after_completion_params after_completion?;
    # Enables user redeemable promotion codes.
    boolean allow_promotion_codes?;
    automatic_tax_params_1 automatic_tax?;
    # Configuration for collecting the customer's billing address. Defaults to `auto`.
    "auto"|"required" billing_address_collection?;
    # Collect additional information from your customer using custom fields. Up to 3 fields are supported.
    record {record {record {string label; string value;}[] options;} dropdown?; string 'key; record {string custom; "custom" 'type;} label; record {int maximum_length?; int minimum_length?;} numeric?; boolean optional?; record {int maximum_length?; int minimum_length?;} text?; "dropdown"|"numeric"|"text" 'type;}[]|"" custom_fields?;
    custom_text_param custom_text?;
    # Configures whether [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link create a [Customer](https://stripe.com/docs/api/customers).
    "always"|"if_required" customer_creation?;
    # Specifies which fields in the response should be expanded.
    payment_links_payment_link_bodyExpandItemsString[] expand?;
    # The custom message to be displayed to a customer when a payment link is no longer active.
    string|"" inactive_message?;
    invoice_creation_update_params invoice_creation?;
    # The line items representing what is being sold. Each line item represents an item being sold. Up to 20 line items are supported.
    line_items_update_params[] line_items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. Metadata associated with this Payment Link will automatically be copied to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link.
    record {|string...;|} metadata?;
    payment_intent_data_update_params payment_intent_data?;
    # Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.This may occur if the Checkout Session includes a free trial or a discount.
    # 
    # Can only be set in `subscription` mode. Defaults to `always`.
    # 
    # If you'd like information on how to collect a payment method outside of Checkout, read the guide on [configuring subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).
    "always"|"if_required" payment_method_collection?;
    # The list of payment method types that customers can use. Pass an empty string to enable dynamic payment methods that use your [payment method settings](https://dashboard.stripe.com/settings/payment_methods).
    ("affirm"|"afterpay_clearpay"|"alipay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip")[]|"" payment_method_types?;
    # Settings that restrict the usage of a payment link.
    record {record {int 'limit;} completed_sessions;}|"" restrictions?;
    # Configuration for collecting the customer's shipping address.
    record {("AC"|"AD"|"AE"|"AF"|"AG"|"AI"|"AL"|"AM"|"AO"|"AQ"|"AR"|"AT"|"AU"|"AW"|"AX"|"AZ"|"BA"|"BB"|"BD"|"BE"|"BF"|"BG"|"BH"|"BI"|"BJ"|"BL"|"BM"|"BN"|"BO"|"BQ"|"BR"|"BS"|"BT"|"BV"|"BW"|"BY"|"BZ"|"CA"|"CD"|"CF"|"CG"|"CH"|"CI"|"CK"|"CL"|"CM"|"CN"|"CO"|"CR"|"CV"|"CW"|"CY"|"CZ"|"DE"|"DJ"|"DK"|"DM"|"DO"|"DZ"|"EC"|"EE"|"EG"|"EH"|"ER"|"ES"|"ET"|"FI"|"FJ"|"FK"|"FO"|"FR"|"GA"|"GB"|"GD"|"GE"|"GF"|"GG"|"GH"|"GI"|"GL"|"GM"|"GN"|"GP"|"GQ"|"GR"|"GS"|"GT"|"GU"|"GW"|"GY"|"HK"|"HN"|"HR"|"HT"|"HU"|"ID"|"IE"|"IL"|"IM"|"IN"|"IO"|"IQ"|"IS"|"IT"|"JE"|"JM"|"JO"|"JP"|"KE"|"KG"|"KH"|"KI"|"KM"|"KN"|"KR"|"KW"|"KY"|"KZ"|"LA"|"LB"|"LC"|"LI"|"LK"|"LR"|"LS"|"LT"|"LU"|"LV"|"LY"|"MA"|"MC"|"MD"|"ME"|"MF"|"MG"|"MK"|"ML"|"MM"|"MN"|"MO"|"MQ"|"MR"|"MS"|"MT"|"MU"|"MV"|"MW"|"MX"|"MY"|"MZ"|"NA"|"NC"|"NE"|"NG"|"NI"|"NL"|"NO"|"NP"|"NR"|"NU"|"NZ"|"OM"|"PA"|"PE"|"PF"|"PG"|"PH"|"PK"|"PL"|"PM"|"PN"|"PR"|"PS"|"PT"|"PY"|"QA"|"RE"|"RO"|"RS"|"RU"|"RW"|"SA"|"SB"|"SC"|"SE"|"SG"|"SH"|"SI"|"SJ"|"SK"|"SL"|"SM"|"SN"|"SO"|"SR"|"SS"|"ST"|"SV"|"SX"|"SZ"|"TA"|"TC"|"TD"|"TF"|"TG"|"TH"|"TJ"|"TK"|"TL"|"TM"|"TN"|"TO"|"TR"|"TT"|"TV"|"TW"|"TZ"|"UA"|"UG"|"US"|"UY"|"UZ"|"VA"|"VC"|"VE"|"VG"|"VN"|"VU"|"WF"|"WS"|"XK"|"YE"|"YT"|"ZA"|"ZM"|"ZW"|"ZZ")[] allowed_countries;}|"" shipping_address_collection?;
    subscription_data_update_params subscription_data?;
    tax_id_collection_params tax_id_collection?;
|};

public type quote_finalize_body record {|
    # Specifies which fields in the response should be expanded.
    quote_finalize_bodyExpandItemsString[] expand?;
    # A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.
    int expires_at?;
|};

public type identity_verification_sessions_bodyExpandItemsString string;

# 
public type Deleted_webhook_endpoint record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "webhook_endpoint" 'object;
};

# 
public type Treasury_received_credits_resource_source_flows_details record {
    Treasury\.credit_reversal credit_reversal?;
    Treasury\.outbound_payment outbound_payment?;
    Payout payout?;
    # The type of the source flow that originated the ReceivedCredit.
    "credit_reversal"|"other"|"outbound_payment"|"payout" 'type;
};

public type one_time_price_data_1 record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

# Fields that specify how to calculate a meter event's value.
public type meter_value_settings_param record {
    @constraint:String {maxLength: 100}
    string event_payload_key;
};

@constraint:String {maxLength: 5000}
public type Person_requirementsCurrentlydueItemsString string;

public type coupons_body record {|
    # A positive integer representing the amount to subtract from an invoice total (required if `percent_off` is not passed).
    int amount_off?;
    applies_to_params applies_to?;
    # Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the `amount_off` parameter (required if `amount_off` is passed).
    string currency?;
    # Coupons defined in each available currency option (only supported if `amount_off` is passed). Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|currency_option_1...;|} currency_options?;
    # Specifies how long the discount will be in effect if used on a subscription. Defaults to `once`.
    "forever"|"once"|"repeating" duration?;
    # Required only if `duration` is `repeating`, in which case it must be a positive integer that specifies the number of months the discount will be in effect.
    int duration_in_months?;
    # Specifies which fields in the response should be expanded.
    coupons_bodyExpandItemsString[] expand?;
    # Unique string of your choice that will be used to identify this coupon when applying it to a customer. If you don't want to specify a particular code, you can leave the ID blank and we'll generate a random code for you.
    @constraint:String {maxLength: 5000}
    string id?;
    # A positive integer specifying the number of times the coupon can be redeemed before it's no longer valid. For example, you might have a 50% off coupon that the first 20 readers of your blog can use.
    int max_redemptions?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.
    @constraint:String {maxLength: 40}
    string name?;
    # A positive float larger than 0, and smaller or equal to 100, that represents the discount the coupon will apply (required if `amount_off` is not passed).
    decimal percent_off?;
    # Unix timestamp specifying the last time at which the coupon can be redeemed. After the redeem_by date, the coupon can no longer be applied to new customers.
    int redeem_by?;
|};

@constraint:String {maxLength: 5000}
public type Country_specSupportedpaymentcurrenciesItemsString string;

# 
public type Account_settings record {
    Account_bacs_debit_payments_settings bacs_debit_payments?;
    Account_branding_settings branding;
    Account_card_issuing_settings card_issuing?;
    Account_card_payments_settings card_payments;
    Account_dashboard_settings dashboard;
    Account_invoices_settings invoices?;
    Account_payments_settings payments;
    Account_payout_settings payouts?;
    Account_sepa_debit_payments_settings sepa_debit_payments?;
    Account_treasury_settings treasury?;
};

public type payment_method_param_1 record {
    "company"|"individual" account_holder_type?;
    @constraint:String {maxLength: 5000}
    string account_number?;
    "checking"|"savings" account_type?;
    @constraint:String {maxLength: 5000}
    string financial_connections_account?;
    @constraint:String {maxLength: 5000}
    string routing_number?;
};

# Canadian pre-authorized debit payments, check this [page](https://stripe.com/docs/payments/acss-debit) for more details like country availability.
public type payment_method_param_2 record {
    display_preference_param display_preference?;
};

# [Affirm](https://www.affirm.com/) gives your customers a way to split purchases over a series of payments. Depending on the purchase, they can pay with four interest-free payments (Split Pay) or pay over a longer term (Installments), which might include interest. Check this [page](https://stripe.com/docs/payments/affirm) for more details like country availability.
public type payment_method_param_3 record {
    display_preference_param display_preference?;
};

# Afterpay gives your customers a way to pay for purchases in installments, check this [page](https://stripe.com/docs/payments/afterpay-clearpay) for more details like country availability. Afterpay is particularly popular among businesses selling fashion, beauty, and sports products.
public type payment_method_param_4 record {
    display_preference_param display_preference?;
};

# 
public type Payment_method_options_card_present_routing record {
    # Requested routing priority
    "domestic"|"international"? requested_priority?;
};

# Alipay is a digital wallet in China that has more than a billion active users worldwide. Alipay users can pay on the web or on a mobile device using login credentials or their Alipay app. Alipay has a low dispute rate and reduces fraud by authenticating payments using the customer's login credentials. Check this [page](https://stripe.com/docs/payments/alipay) for more details.
public type payment_method_param_5 record {
    display_preference_param display_preference?;
};

# Amazon Pay is a wallet payment method that lets your customers check out the same way as on Amazon.
public type payment_method_param_6 record {
    display_preference_param display_preference?;
};

@constraint:String {maxLength: 5000}
public type GetWebhookEndpointsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetExchangeRates
public type GetExchangeRatesQueries record {
    # A cursor for use in pagination. `ending_before` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with the exchange rate for currency X your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetExchangeRatesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and total number of supported payout currencies, and the default is the max.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with the exchange rate for currency X, your subsequent call can include `starting_after=X` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetEntitlementsFeaturesIdQueriesExpandItemsString string;

# When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.
public type credit_note_shipping_cost record {
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
};

# Represents the Queries record for the operation: GetCustomersCustomerBankAccounts
public type GetCustomersCustomerBankAccountsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerBankAccountsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

public type billing_portal_sessions_bodyExpandItemsString string;

public type topup_cancel_bodyExpandItemsString string;

public type tax_ids_bodyExpandItemsString string;

# External accounts (bank accounts and debit cards) currently attached to this account. External accounts are only returned for requests where `controller[is_controller]` is true.
public type ExternalAccountList_1 record {
    # The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.
    (Bank_account|Card)[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type monthly_estimated_revenue_specs record {
    int amount;
    string currency;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerTaxIdsIdQueriesExpandItemsString string;

# Contains settings related to adding funds to a FinancialAccount from another Account with the same owner.
public type inbound_transfers_1 record {
    access_with_ach_details ach?;
};

# Point in Time
public type Gelato_data_document_report_expiration_date record {
    # Numerical day between 1 and 31.
    int? day?;
    # Numerical month between 1 and 12.
    int? month?;
    # The four-digit year.
    int? year?;
};

@constraint:String {maxLength: 5000}
public type GetTaxRatesQueriesExpandItemsString string;

public type person_verification_specs record {
    person_verification_document_specs additional_document?;
    person_verification_document_specs document?;
};

public type setup_intent_param record {
    setup_intent_mandate_options_param mandate_options?;
    "amex"|"cartes_bancaires"|"diners"|"discover"|"eftpos_au"|"interac"|"jcb"|"mastercard"|"unionpay"|"unknown"|"visa" network?;
    "any"|"automatic"|"challenge" request_three_d_secure?;
    setup_intent_payment_method_options_param_1 three_d_secure?;
};

# 
public type Issuing_card_shipping record {
    Address address;
    # Address validation details for the shipment.
    Issuing_card_shipping_address_validation? address_validation?;
    # The delivery company that shipped a card.
    "dhl"|"fedex"|"royal_mail"|"usps"? carrier?;
    # Additional information that may be required for clearing customs.
    Issuing_card_shipping_customs? customs?;
    # A unix timestamp representing a best estimate of when the card will be delivered.
    int? eta?;
    # Recipient name.
    @constraint:String {maxLength: 5000}
    string name;
    # The phone number of the receiver of the shipment. Our courier partners will use this number to contact you in the event of card delivery issues. For individual shipments to the EU/UK, if this field is empty, we will provide them with the phone number provided when the cardholder was initially created.
    string? phone_number?;
    # Whether a signature is required for card delivery. This feature is only supported for US users. Standard shipping service does not support signature on delivery. The default value for standard shipping service is false and for express and priority services is true.
    boolean? require_signature?;
    # Shipment service, such as `standard` or `express`.
    "express"|"priority"|"standard" 'service;
    # The delivery status of the card.
    "canceled"|"delivered"|"failure"|"pending"|"returned"|"shipped"? status?;
    # A tracking number for a card shipment.
    string? tracking_number?;
    # A link to the shipping carrier's site where you can view detailed information about a card shipment.
    string? tracking_url?;
    # Packaging options.
    "bulk"|"individual" 'type;
};

@constraint:String {maxLength: 5000}
public type GetBalanceQueriesExpandItemsString string;

# 
public type Tax_product_resource_jurisdiction record {
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country;
    # A human-readable name for the jurisdiction imposing the tax.
    @constraint:String {maxLength: 5000}
    string display_name;
    # Indicates the level of the jurisdiction imposing the tax.
    "city"|"country"|"county"|"district"|"state" level;
    # [ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, "NY" for New York, United States.
    string? state?;
};

# 
public type TaxIDsList record {
    # Details about each object.
    Tax_id[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Represents the Queries record for the operation: GetTreasuryTransactionEntriesId
public type GetTreasuryTransactionEntriesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryTransactionEntriesIdQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetPricesSearch
public type GetPricesSearchQueries record {
    # Specifies which fields in the response should be expanded.
    GetPricesSearchQueriesExpandItemsString[] expand?;
    # The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for prices](https://stripe.com/docs/search#query-fields-for-prices).
    @constraint:String {maxLength: 5000}
    string query;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.
    @constraint:String {maxLength: 5000}
    string page?;
};

# 
public type Payment_method_card_present_networks record {
    # All available networks for the card.
    Payment_method_card_present_networksAvailableItemsString[] available;
    # The preferred network for the card.
    string? preferred?;
};

public type recovery_params record {
    boolean allow_promotion_codes?;
    boolean enabled;
};

# Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.
# 
# Related guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)
public type Tax_rate record {
    # Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.
    boolean active;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    string? country?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.
    string? description?;
    # The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.
    @constraint:String {maxLength: 5000}
    string display_name;
    # Actual/effective tax rate percentage out of 100. For tax calculations with automatic_tax[enabled]=true,
    # this percentage reflects the rate actually used to calculate tax based on the product's taxability
    # and whether the user is registered to collect taxes in the corresponding jurisdiction.
    decimal? effective_percentage?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # This specifies if the tax rate is inclusive or exclusive.
    boolean inclusive;
    # The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.
    string? jurisdiction?;
    # The level of the jurisdiction that imposes this tax rate. Will be `null` for manually defined tax rates.
    "city"|"country"|"county"|"district"|"multiple"|"state"? jurisdiction_level?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "tax_rate" 'object;
    # Tax rate percentage out of 100. For tax calculations with automatic_tax[enabled]=true, this percentage includes the statutory tax rate of non-taxable jurisdictions.
    decimal percentage;
    # [ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, "NY" for New York, United States.
    string? state?;
    # The high-level tax type, such as `vat` or `sales_tax`.
    "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat"? tax_type?;
};

public type payments_config_param record {
    boolean enabled;
    payments_features_param features?;
};

public type access record {
    boolean requested;
};

# 
public type Payment_method_options_boleto record {
    # The number of calendar days before a Boleto voucher expires. For example, if you create a Boleto voucher on Monday and you set expires_after_days to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo time.
    int expires_after_days;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# 
public type Refund_destination_details record {
    Destination_details_unimplemented affirm?;
    Destination_details_unimplemented afterpay_clearpay?;
    Destination_details_unimplemented alipay?;
    Destination_details_unimplemented amazon_pay?;
    Destination_details_unimplemented au_bank_transfer?;
    Refund_destination_details_generic blik?;
    Refund_destination_details_generic br_bank_transfer?;
    Refund_destination_details_card card?;
    Destination_details_unimplemented cashapp?;
    Destination_details_unimplemented customer_cash_balance?;
    Destination_details_unimplemented eps?;
    Refund_destination_details_generic eu_bank_transfer?;
    Refund_destination_details_generic gb_bank_transfer?;
    Destination_details_unimplemented giropay?;
    Destination_details_unimplemented grabpay?;
    Refund_destination_details_generic jp_bank_transfer?;
    Destination_details_unimplemented klarna?;
    Refund_destination_details_generic multibanco?;
    Refund_destination_details_generic mx_bank_transfer?;
    Refund_destination_details_generic p24?;
    Destination_details_unimplemented paynow?;
    Destination_details_unimplemented paypal?;
    Destination_details_unimplemented pix?;
    Destination_details_unimplemented revolut?;
    Destination_details_unimplemented sofort?;
    Refund_destination_details_generic swish?;
    Refund_destination_details_generic th_bank_transfer?;
    # The type of transaction-specific details of the payment method used in the refund (e.g., `card`). An additional hash is included on `destination_details` with a name matching this value. It contains information specific to the refund transaction.
    @constraint:String {maxLength: 5000}
    string 'type;
    Refund_destination_details_generic us_bank_transfer?;
    Destination_details_unimplemented wechat_pay?;
    Destination_details_unimplemented zip?;
};

public type end_behavior record {
    "cancel"|"create_invoice"|"pause" missing_payment_method;
};

# 
public type Payment_pages_checkout_session_custom_text_position record {
    # Text may be up to 1200 characters in length.
    @constraint:String {maxLength: 500}
    string message;
};

# 
public type PaymentPagesCheckoutSessionListLineItems record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Invoices_resource_shipping_cost record {
    # Total shipping cost before any taxes are applied.
    int amount_subtotal;
    # Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.
    int amount_tax;
    # Total shipping cost after taxes are applied.
    int amount_total;
    # The ID of the ShippingRate for this invoice.
    string|Shipping_rate? shipping_rate?;
    # The taxes applied to the shipping rate.
    Line_items_tax_amount[] taxes?;
};

public type accounts_account_bodyExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_ideal record {
    # The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.
    "abn_amro"|"asn_bank"|"bunq"|"handelsbanken"|"ing"|"knab"|"moneyou"|"n26"|"nn"|"rabobank"|"regiobank"|"revolut"|"sns_bank"|"triodos_bank"|"van_lanschot"|"yoursafe"? bank?;
    # The Bank Identifier Code of the customer's bank.
    "ABNANL2A"|"ASNBNL21"|"BITSNL2A"|"BUNQNL2A"|"FVLBNL22"|"HANDNL2A"|"INGBNL2A"|"KNABNL2H"|"MOYONL21"|"NNBANL2G"|"NTSBDEB1"|"RABONL2U"|"RBRBNL21"|"REVOIE23"|"REVOLT21"|"SNSBNL2A"|"TRIONL2U"? bic?;
    # The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    string|Payment_method? generated_sepa_debit?;
    # The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    string|Mandate? generated_sepa_debit_mandate?;
    # Last four characters of the IBAN.
    string? iban_last4?;
    # Owner's verified full name. Values are verified or provided by iDEAL directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
};

# Represents the Queries record for the operation: GetTreasuryDebitReversals
public type GetTreasuryDebitReversalsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryDebitReversalsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return DebitReversals for a given resolution.
    "lost"|"won" resolution?;
    # Only return DebitReversals for the ReceivedDebit ID.
    @constraint:String {maxLength: 5000}
    string received_debit?;
    # Only return DebitReversals for a given status.
    "canceled"|"completed"|"processing" status?;
};

public type review_approve_bodyExpandItemsString string;

public type id_reversals_body record {|
    # A positive integer in cents (or local equivalent) representing how much of this transfer to reverse. Can only reverse up to the unreversed amount remaining of the transfer. Partial transfer reversals are only allowed for transfers to Stripe Accounts. Defaults to the entire transfer amount.
    int amount?;
    # An arbitrary string which you can attach to a reversal object. This will be unset if you POST an empty value.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    id_reversals_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Boolean indicating whether the application fee should be refunded when reversing this transfer. If a full transfer reversal is given, the full application fee will be refunded. Otherwise, the application fee will be refunded with an amount proportional to the amount of the transfer reversed.
    boolean refund_application_fee?;
|};

public type account_unsubscribe_body record {|
    # Specifies which fields in the response should be expanded.
    account_unsubscribe_bodyExpandItemsString[] expand?;
    # The list of account features from which you would like to unsubscribe.
    ("transactions")[] features;
|};

# 
public type Payment_method_options_afterpay_clearpay record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # An internal identifier or reference that this payment corresponds to. You must limit the identifier to 128 characters, and it can only contain letters, numbers, underscores, backslashes, and dashes.
    # This field differs from the statement descriptor and item name.
    string? reference?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Payment-method-specific configuration
public type Confirmation_tokens_resource_payment_method_options record {
    # This hash contains the card payment method options.
    Confirmation_tokens_resource_payment_method_options_resource_card? card?;
};

# 
public type Issuing_dispute_treasury record {
    # The Treasury [DebitReversal](https://stripe.com/docs/api/treasury/debit_reversals) representing this Issuing dispute
    string? debit_reversal?;
    # The Treasury [ReceivedDebit](https://stripe.com/docs/api/treasury/received_debits) that is being disputed.
    @constraint:String {maxLength: 5000}
    string received_debit;
};

public type transfers_transfer_bodyExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_amazon_pay record {
};

public type quote_accept_body record {|
    # Specifies which fields in the response should be expanded.
    quote_accept_bodyExpandItemsString[] expand?;
|};

public type test_clock_advance_body record {|
    # Specifies which fields in the response should be expanded.
    test_clock_advance_bodyExpandItemsString[] expand?;
    # The time to advance the test clock. Must be after the test clock's current frozen time. Cannot be more than two intervals in the future from the shortest subscription in this test clock. If there are no subscriptions in this test clock, it cannot be more than two years in the future.
    int frozen_time;
|};

public type id_reactivate_body record {|
    # Specifies which fields in the response should be expanded.
    id_reactivate_bodyExpandItemsString[] expand?;
|};

# 
public type Invoices_resource_line_items_proration_details record {
    # For a credit proration `line_item`, the original debit line_items to which the credit proration applies.
    Invoices_resource_line_items_credited_items? credited_items?;
};

# 
public type SearchResult record {
    Charge[] data;
    boolean has_more;
    string? next_page?;
    # String representing the object's type. Objects of the same type share the same value.
    "search_result" 'object;
    # The total number of objects that match the query, only accurate up to 10,000.
    int total_count?;
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetCouponsCouponQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetPaymentLinksPaymentLinkLineItems
public type GetPaymentLinksPaymentLinkLineItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPaymentLinksPaymentLinkLineItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type Terminal\.reader record {
    Terminal_reader_reader_resource_reader_action? action?;
    string? device_sw_version?;
    "bbpos_chipper2x"|"bbpos_wisepad3"|"bbpos_wisepos_e"|"mobile_phone_reader"|"simulated_wisepos_e"|"stripe_m2"|"verifone_P400" device_type;
    string id;
    string? ip_address?;
    string label;
    boolean livemode;
    string|Terminal\.location? location?;
    record {|string...;|} metadata;
    "terminal.reader" 'object;
    string serial_number;
    "offline"|"online"? status?;
};

@constraint:String {maxLength: 5000}
public type GetTaxRegistrationsIdQueriesExpandItemsString string;

# 
public type Payment_intent_next_action_promptpay_display_qr_code record {
    # The raw data string used to generate QR code, it should be used together with QR code library.
    @constraint:String {maxLength: 5000}
    string data;
    # The URL to the hosted PromptPay instructions page, which allows customers to view the PromptPay QR code.
    @constraint:String {maxLength: 5000}
    string hosted_instructions_url;
    # The PNG path used to render the QR code, can be used as the source in an HTML img tag
    @constraint:String {maxLength: 5000}
    string image_url_png;
    # The SVG path used to render the QR code, can be used as the source in an HTML img tag
    @constraint:String {maxLength: 5000}
    string image_url_svg;
};

public type Deleted_test_helpers\.test_clock record {
    true deleted;
    string id;
    "test_helpers.test_clock" 'object;
};

# The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to.
public type transfer_data_params_1 record {
    int amount?;
    string destination;
};

# Params for disputes related to Treasury FinancialAccounts
public type treasury_param record {
    @constraint:String {maxLength: 5000}
    string received_debit;
};

# 
public type Payment_method_options_multibanco record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type customers_customer_bodyPreferredlocalesItemsString string;

public type terminal_locations_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetAccount
public type GetAccountQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountQueriesExpandItemsString[] expand?;
};

# 
public type Shipping_rate_delivery_estimate record {
    # The upper bound of the estimated range. If empty, represents no upper bound i.e., infinite.
    Shipping_rate_delivery_estimate_bound? maximum?;
    # The lower bound of the estimated range. If empty, represents no lower bound.
    Shipping_rate_delivery_estimate_bound? minimum?;
};

# Represents the Queries record for the operation: GetFinancialConnectionsTransactions
public type GetFinancialConnectionsTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetFinancialConnectionsTransactionsQueriesExpandItemsString[] expand?;
    # A filter on the list based on the object `transacted_at` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
    transacted_at transacted_at?;
    # A filter on the list based on the object `transaction_refresh` field. The value can be a dictionary with the following options:
    transaction_refresh_params transaction_refresh?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # The ID of the Stripe account whose transactions will be retrieved.
    @constraint:String {maxLength: 5000}
    string account;
};

# 
public type Setup_intent_next_action_redirect_to_url record {
    # If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.
    string? return_url?;
    # The URL you must redirect your customer to in order to authenticate.
    string? url?;
};

# Each customer has a [Balance](https://stripe.com/docs/api/customers/object#customer_object-balance) value,
# which denotes a debit or credit that's automatically applied to their next invoice upon finalization.
# You may modify the value directly by using the [update customer API](https://stripe.com/docs/api/customers/update),
# or by creating a Customer Balance Transaction, which increments or decrements the customer's `balance` by the specified `amount`.
# 
# Related guide: [Customer balance](https://stripe.com/docs/billing/customer/balance)
public type Customer_balance_transaction record {
    # The amount of the transaction. A negative value is a credit for the customer's balance, and a positive value is a debit to the customer's `balance`.
    int amount;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The ID of the credit note (if any) related to the transaction.
    string|Credit_note? credit_note?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # The ID of the customer the transaction belongs to.
    string|Customer customer;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # The customer's `balance` after the transaction was applied. A negative value decreases the amount due on the customer's next invoice. A positive value increases the amount due on the customer's next invoice.
    int ending_balance;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The ID of the invoice (if any) related to the transaction.
    string|Invoice? invoice?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "customer_balance_transaction" 'object;
    # Transaction type: `adjustment`, `applied_to_invoice`, `credit_note`, `initial`, `invoice_overpaid`, `invoice_too_large`, `invoice_too_small`, `unspent_receiver_credit`, or `unapplied_from_invoice`. See the [Customer Balance page](https://stripe.com/docs/billing/customer/balance#types) to learn more about transaction types.
    "adjustment"|"applied_to_invoice"|"credit_note"|"initial"|"invoice_overpaid"|"invoice_too_large"|"invoice_too_small"|"migration"|"unapplied_from_invoice"|"unspent_receiver_credit" 'type;
};

# Represents the Queries record for the operation: GetSubscriptionItemsSubscriptionItemUsageRecordSummaries
public type GetSubscriptionItemsSubscriptionItemUsageRecordSummariesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSubscriptionItemsSubscriptionItemUsageRecordSummariesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetSigmaScheduledQueryRunsQueriesExpandItemsString string;

# 
public type Charge_fraud_details record {
    # Assessments from Stripe. If set, the value is `fraudulent`.
    @constraint:String {maxLength: 5000}
    string stripe_report?;
    # Assessments reported by you. If set, possible values of are `safe` and `fraudulent`.
    @constraint:String {maxLength: 5000}
    string user_report?;
};

# Represents the Queries record for the operation: GetReportingReportRuns
public type GetReportingReportRunsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetReportingReportRunsQueriesExpandItemsString[] expand?;
    # Only return Report Runs that were created during the given date interval.
    created_33 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Issuing_transaction_amount_details record {
    # The fee charged by the ATM for the cash withdrawal.
    int? atm_fee?;
    # The amount of cash requested by the cardholder.
    int? cashback_amount?;
};

# Represents the Queries record for the operation: GetCharges
public type GetChargesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetChargesQueriesExpandItemsString[] expand?;
    # Only return charges for this transfer group.
    @constraint:String {maxLength: 5000}
    string transfer_group?;
    # Only return charges that were created during the given date interval.
    created_4 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return charges that were created by the PaymentIntent specified by this PaymentIntent ID.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # Only return charges for the customer specified by this customer ID.
    @constraint:String {maxLength: 5000}
    string customer?;
};

public type Reporting\\\\\\\.report_typeDefaultcolumnsItemsString string;

public type forwarding_requests_body record {|
    # Specifies which fields in the response should be expanded.
    forwarding_requests_bodyExpandItemsString[] expand?;
    # The PaymentMethod to insert into the forwarded request. Forwarding previously consumed PaymentMethods is allowed.
    @constraint:String {maxLength: 5000}
    string payment_method;
    # The field kinds to be replaced in the forwarded request.
    ("card_cvc"|"card_expiry"|"card_number"|"cardholder_name")[] replacements;
    request_param request?;
    # The destination URL for the forwarded request. Must be supported by the config.
    @constraint:String {maxLength: 5000}
    string url;
|};

# Represents the Queries record for the operation: GetSubscriptionsSubscriptionExposedId
public type GetSubscriptionsSubscriptionExposedIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetSubscriptionsSubscriptionExposedIdQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetPlans
public type GetPlansQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPlansQueriesExpandItemsString[] expand?;
    # Only return plans for the given product.
    @constraint:String {maxLength: 5000}
    string product?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_25 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return plans that are active or inactive (e.g., pass `false` to list all inactive plans).
    boolean active?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type authorizations_authorization_bodyExpandItemsString string;

public type setup_intent_mandate_options_param record {
    int amount;
    "fixed"|"maximum" amount_type;
    string currency;
    @constraint:String {maxLength: 200}
    string description?;
    int end_date?;
    "day"|"month"|"sporadic"|"week"|"year" interval;
    int interval_count?;
    @constraint:String {maxLength: 80}
    string reference;
    int start_date;
    ("india")[] supported_types?;
};

# 
public type Paypal_seller_protection record {
    # An array of conditions that are covered for the transaction, if applicable.
    ("fraudulent"|"product_not_received")[]? dispute_categories?;
    # Indicates whether the transaction is eligible for PayPal's seller protection.
    "eligible"|"not_eligible"|"partially_eligible" status;
};

# 
public type Payment_links_resource_phone_number_collection record {
    # If `true`, a phone number will be collected during checkout.
    boolean enabled;
};

@constraint:String {maxLength: 5000}
public type GetEntitlementsFeaturesQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetApplicationFeesFeeRefundsIdQueriesExpandItemsString string;

# The list of items the customer is purchasing.
public type TaxProductResourceTaxCalculationLineItemList_1 record {
    # Details about each object.
    Tax\.calculation_line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/tax/calculations/[^/]+/line_items`}
    string url;
};

# 
public type Invoice_payment_method_options_us_bank_account_linked_account_options_filters record {
    # The account subcategories to use to filter for possible accounts to link. Valid subcategories are `checking` and `savings`.
    ("checking"|"savings")[] account_subcategories?;
};

public type bank_accounts_id_body_1ExpandItemsString string;

public type account_bank_accounts_bodyExpandItemsString string;

# 
public type Issuing_transaction_treasury record {
    # The Treasury [ReceivedCredit](https://stripe.com/docs/api/treasury/received_credits) representing this Issuing transaction if it is a refund
    string? received_credit?;
    # The Treasury [ReceivedDebit](https://stripe.com/docs/api/treasury/received_debits) representing this Issuing transaction if it is a capture
    string? received_debit?;
};

# PaymentMethodConfigurations control which payment methods are displayed to your customers when you don't explicitly specify payment method types. You can have multiple configurations with different sets of payment methods for different scenarios.
# 
# There are two types of PaymentMethodConfigurations. Which is used depends on the [charge type](https://stripe.com/docs/connect/charges):
# 
# **Direct** configurations apply to payments created on your account, including Connect destination charges, Connect separate charges and transfers, and payments not involving Connect.
# 
# **Child** configurations apply to payments created on your connected accounts using direct charges, and charges with the on_behalf_of parameter.
# 
# Child configurations have a `parent` that sets default values and controls which settings connected accounts may override. You can specify a parent ID at payment time, and Stripe will automatically resolve the connected account’s associated child configuration. Parent configurations are [managed in the dashboard](https://dashboard.stripe.com/settings/payment_methods/connected_accounts) and are not available in this API.
# 
# Related guides:
# - [Payment Method Configurations API](https://stripe.com/docs/connect/payment-method-configurations)
# - [Multiple configurations on dynamic payment methods](https://stripe.com/docs/payments/multiple-payment-method-configs)
# - [Multiple configurations for your Connect accounts](https://stripe.com/docs/connect/multiple-payment-method-configurations)
public type Payment_method_configuration record {
    Payment_method_config_resource_payment_method_properties acss_debit?;
    # Whether the configuration can be used for new payments.
    boolean active;
    Payment_method_config_resource_payment_method_properties affirm?;
    Payment_method_config_resource_payment_method_properties afterpay_clearpay?;
    Payment_method_config_resource_payment_method_properties alipay?;
    Payment_method_config_resource_payment_method_properties amazon_pay?;
    Payment_method_config_resource_payment_method_properties apple_pay?;
    # For child configs, the Connect application associated with the configuration.
    string? application?;
    Payment_method_config_resource_payment_method_properties au_becs_debit?;
    Payment_method_config_resource_payment_method_properties bacs_debit?;
    Payment_method_config_resource_payment_method_properties bancontact?;
    Payment_method_config_resource_payment_method_properties blik?;
    Payment_method_config_resource_payment_method_properties boleto?;
    Payment_method_config_resource_payment_method_properties card?;
    Payment_method_config_resource_payment_method_properties cartes_bancaires?;
    Payment_method_config_resource_payment_method_properties cashapp?;
    Payment_method_config_resource_payment_method_properties customer_balance?;
    Payment_method_config_resource_payment_method_properties eps?;
    Payment_method_config_resource_payment_method_properties fpx?;
    Payment_method_config_resource_payment_method_properties giropay?;
    Payment_method_config_resource_payment_method_properties google_pay?;
    Payment_method_config_resource_payment_method_properties grabpay?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    Payment_method_config_resource_payment_method_properties ideal?;
    # The default configuration is used whenever a payment method configuration is not specified.
    boolean is_default;
    Payment_method_config_resource_payment_method_properties jcb?;
    Payment_method_config_resource_payment_method_properties klarna?;
    Payment_method_config_resource_payment_method_properties konbini?;
    Payment_method_config_resource_payment_method_properties link?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    Payment_method_config_resource_payment_method_properties mobilepay?;
    Payment_method_config_resource_payment_method_properties multibanco?;
    # The configuration's name.
    @constraint:String {maxLength: 5000}
    string name;
    # String representing the object's type. Objects of the same type share the same value.
    "payment_method_configuration" 'object;
    Payment_method_config_resource_payment_method_properties oxxo?;
    Payment_method_config_resource_payment_method_properties p24?;
    # For child configs, the configuration's parent configuration.
    string? parent?;
    Payment_method_config_resource_payment_method_properties paynow?;
    Payment_method_config_resource_payment_method_properties paypal?;
    Payment_method_config_resource_payment_method_properties promptpay?;
    Payment_method_config_resource_payment_method_properties revolut_pay?;
    Payment_method_config_resource_payment_method_properties sepa_debit?;
    Payment_method_config_resource_payment_method_properties sofort?;
    Payment_method_config_resource_payment_method_properties swish?;
    Payment_method_config_resource_payment_method_properties us_bank_account?;
    Payment_method_config_resource_payment_method_properties wechat_pay?;
    Payment_method_config_resource_payment_method_properties zip?;
};

# 
public type Payment_method_details_zip record {
};

public type fixed_amount record {
    int amount;
    string currency;
    record {|currency_option...;|} currency_options?;
};

# 
public type Issuing_dispute_evidence record {
    Issuing_dispute_canceled_evidence canceled?;
    Issuing_dispute_duplicate_evidence duplicate?;
    Issuing_dispute_fraudulent_evidence fraudulent?;
    Issuing_dispute_merchandise_not_as_described_evidence merchandise_not_as_described?;
    Issuing_dispute_no_valid_authorization_evidence no_valid_authorization?;
    Issuing_dispute_not_received_evidence not_received?;
    Issuing_dispute_other_evidence other?;
    # The reason for filing the dispute. Its value will match the field containing the evidence.
    "canceled"|"duplicate"|"fraudulent"|"merchandise_not_as_described"|"no_valid_authorization"|"not_received"|"other"|"service_not_as_described" reason;
    Issuing_dispute_service_not_as_described_evidence service_not_as_described?;
};

# Represents the Queries record for the operation: GetIdentityVerificationReports
public type GetIdentityVerificationReportsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIdentityVerificationReportsQueriesExpandItemsString[] expand?;
    # Only return VerificationReports created by this VerificationSession ID. It is allowed to provide a VerificationIntent ID.
    @constraint:String {maxLength: 5000}
    string verification_session?;
    # Only return VerificationReports that were created during the given date interval.
    created_13 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A string to reference this user. This can be a customer ID, a session ID, or similar, and can be used to reconcile this verification with your internal systems.
    @constraint:String {maxLength: 5000}
    string client_reference_id?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return VerificationReports of this type
    "document"|"id_number" 'type?;
};

@constraint:String {maxLength: 5000}
public type Account_capability_requirementsPendingverificationItemsString string;

# 
public type Payment_intent_next_action_display_oxxo_details record {
    # The timestamp after which the OXXO voucher expires.
    int? expires_after?;
    # The URL for the hosted OXXO voucher page, which allows customers to view and print an OXXO voucher.
    string? hosted_voucher_url?;
    # OXXO reference number.
    string? number?;
};

# You can add one or multiple tax IDs to a [customer](https://stripe.com/docs/api/customers) or account.
# Customer and account tax IDs get displayed on related invoices and credit notes.
# 
# Related guides: [Customer tax identification numbers](https://stripe.com/docs/billing/taxes/tax-ids), [Account tax IDs](https://stripe.com/docs/invoicing/connect#account-tax-ids)
public type Tax_id record {
    # Two-letter ISO code representing the country of the tax ID.
    string? country?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # ID of the customer.
    string|Customer? customer?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "tax_id" 'object;
    # The account or customer the tax ID belongs to.
    Tax_i_ds_owner? owner?;
    # Type of the tax ID, one of `ad_nrt`, `ae_trn`, `ar_cuit`, `au_abn`, `au_arn`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `kz_bin`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sv_nit`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, `uy_ruc`, `ve_rif`, `vn_tin`, or `za_vat`. Note that some legacy tax IDs have type `unknown`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"unknown"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # Value of the tax ID.
    @constraint:String {maxLength: 5000}
    string value;
    # Tax ID verification information.
    Tax_id_verification? verification?;
};

public type account_disconnect_body_1ExpandItemsString string;

# 
public type Treasury_financial_accounts_resource_closed_status_details record {
    # The array that contains reasons for a FinancialAccount closure.
    ("account_rejected"|"closed_by_platform"|"other")[] reasons;
};

# 
public type SearchResult_5 record {
    Product[] data;
    boolean has_more;
    string? next_page?;
    # String representing the object's type. Objects of the same type share the same value.
    "search_result" 'object;
    # The total number of objects that match the query, only accurate up to 10,000.
    int total_count?;
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type SearchResult_4 record {
    Price[] data;
    boolean has_more;
    string? next_page?;
    # String representing the object's type. Objects of the same type share the same value.
    "search_result" 'object;
    # The total number of objects that match the query, only accurate up to 10,000.
    int total_count?;
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type SearchResult_3 record {
    Payment_intent[] data;
    boolean has_more;
    string? next_page?;
    # String representing the object's type. Objects of the same type share the same value.
    "search_result" 'object;
    # The total number of objects that match the query, only accurate up to 10,000.
    int total_count?;
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type SearchResult_2 record {
    Invoice[] data;
    boolean has_more;
    string? next_page?;
    # String representing the object's type. Objects of the same type share the same value.
    "search_result" 'object;
    # The total number of objects that match the query, only accurate up to 10,000.
    int total_count?;
    @constraint:String {maxLength: 5000}
    string url;
};

# Represents the Queries record for the operation: GetCountrySpecsCountry
public type GetCountrySpecsCountryQueries record {
    # Specifies which fields in the response should be expanded.
    GetCountrySpecsCountryQueriesExpandItemsString[] expand?;
};

# 
public type APIMethodRefundList record {
    Refund[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/refunds`}
    string url;
};

public type credit_notes_bodyExpandItemsString string;

# 
public type SearchResult_6 record {
    Subscription[] data;
    boolean has_more;
    string? next_page?;
    # String representing the object's type. Objects of the same type share the same value.
    "search_result" 'object;
    # The total number of objects that match the query, only accurate up to 10,000.
    int total_count?;
    @constraint:String {maxLength: 5000}
    string url;
};

# Represents the Queries record for the operation: GetIssuingCardholdersCardholder
public type GetIssuingCardholdersCardholderQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingCardholdersCardholderQueriesExpandItemsString[] expand?;
};

# A customer's `Cash balance` represents real funds. Customers can add funds to their cash balance by sending a bank transfer. These funds can be used for payment and can eventually be paid out to your bank account.
public type Cash_balance record {
    # A hash of all cash balances available to this customer. You cannot delete a customer with any cash balances, even if the balance is 0. Amounts are represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    record {|int...;|}? available?;
    # The ID of the customer whose cash balance this object represents.
    @constraint:String {maxLength: 5000}
    string customer;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "cash_balance" 'object;
    Customer_balance_customer_balance_settings settings;
};

public type custom_field_param record {
    custom_field_dropdown_param dropdown?;
    @constraint:String {maxLength: 200}
    string 'key;
    custom_field_label_param label;
    custom_field_numeric_param numeric?;
    boolean optional?;
    custom_field_text_param text?;
    "dropdown"|"numeric"|"text" 'type;
};

public type linked_account_options_paramPermissionsItemsString "balances"|"ownership"|"payment_method"|"transactions";

public type lodging_specs record {
    int check_in_at?;
    int nights?;
};

# 
public type SearchResult_1 record {
    Customer[] data;
    boolean has_more;
    string? next_page?;
    # String representing the object's type. Objects of the same type share the same value.
    "search_result" 'object;
    # The total number of objects that match the query, only accurate up to 10,000.
    int total_count?;
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Billing_meter_resource_aggregation_settings record {
    # Specifies how events are aggregated.
    "count"|"sum" formula;
};

# 
public type Tax_product_resource_tax_settings_defaults record {
    # Default [tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#tax-behavior) used to specify whether the price is considered inclusive of taxes or exclusive of taxes. If the item's price has a tax behavior set, it will take precedence over the default tax behavior.
    "exclusive"|"inclusive"|"inferred_by_currency"? tax_behavior?;
    # Default [tax code](https://stripe.com/docs/tax/tax-categories) used to classify your products and prices.
    string? tax_code?;
};

public type param_11 record {
    "alior_bank"|"bank_millennium"|"bank_nowy_bfg_sa"|"bank_pekao_sa"|"banki_spbdzielcze"|"blik"|"bnp_paribas"|"boz"|"citi_handlowy"|"credit_agricole"|"envelobank"|"etransfer_pocztowy24"|"getin_bank"|"ideabank"|"ing"|"inteligo"|"mbank_mtransfer"|"nest_przelew"|"noble_pay"|"pbac_z_ipko"|"plus_bank"|"santander_przelew24"|"tmobile_usbugi_bankowe"|"toyota_bank"|"velobank"|"volkswagen_bank" bank?;
};

# 
public type TaxProductRegistrationsResourceTaxRegistrationList record {
    Tax\.registration[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/tax/registrations`}
    string url;
};

public type param_12 record {
    @constraint:String {maxLength: 5000}
    string iban;
};

public type param_10 record {
    date_of_birth dob?;
};

# If this is a `bacs_debit` PaymentMethod, this hash contains details about the Bacs Direct Debit bank account.
public type param_15 record {
    @constraint:String {maxLength: 5000}
    string account_number?;
    @constraint:String {maxLength: 5000}
    string sort_code?;
};

# Represents the Queries record for the operation: GetSubscriptionItemsItem
public type GetSubscriptionItemsItemQueries record {
    # Specifies which fields in the response should be expanded.
    GetSubscriptionItemsItemQueriesExpandItemsString[] expand?;
};

public type DiscountsItemsObject record {
    string coupon?;
    string discount?;
    string promotion_code?;
};

public type test_helpers_confirmation_tokens_body record {|
    # Specifies which fields in the response should be expanded.
    test_helpers_confirmation_tokens_bodyExpandItemsString[] expand?;
    # ID of an existing PaymentMethod.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    payment_method_data_params_2 payment_method_data?;
    # Return URL used to confirm the Intent.
    string return_url?;
    # Indicates that you intend to make future payments with this ConfirmationToken's payment method.
    # 
    # The presence of this property will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete.
    "off_session"|"on_session" setup_future_usage?;
    recipient_shipping_with_optional_fields_address_1 shipping?;
|};

# If this is a `boleto` PaymentMethod, this hash contains details about the Boleto payment method.
public type param_16 record {
    @constraint:String {maxLength: 5000}
    string tax_id;
};

public type param_13 record {
    "AT"|"BE"|"DE"|"ES"|"IT"|"NL" country;
};

# Represents the Queries record for the operation: GetPayouts
public type GetPayoutsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPayoutsQueriesExpandItemsString[] expand?;
    # Only return payouts that were created during the given date interval.
    created_24 created?;
    # The ID of an external account - only return payouts sent to this external account.
    string destination?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return payouts that are expected to arrive during the given date interval.
    arrival_date arrival_date?;
    # Only return payouts that have the given status: `pending`, `paid`, `failed`, or `canceled`.
    @constraint:String {maxLength: 5000}
    string status?;
};

# If this is an `au_becs_debit` PaymentMethod, this hash contains details about the bank account.
public type param_14 record {
    @constraint:String {maxLength: 5000}
    string account_number;
    @constraint:String {maxLength: 5000}
    string bsb_number;
};

# If this is an `ideal` PaymentMethod, this hash contains details about the iDEAL payment method.
public type param_19 record {
    "abn_amro"|"asn_bank"|"bunq"|"handelsbanken"|"ing"|"knab"|"moneyou"|"n26"|"nn"|"rabobank"|"regiobank"|"revolut"|"sns_bank"|"triodos_bank"|"van_lanschot"|"yoursafe" bank?;
};

# 
public type Transform_quantity record {
    # Divide usage by this number.
    int divide_by;
    # After division, either round the result `up` or `down`.
    "down"|"up" round;
};

# If this is an `eps` PaymentMethod, this hash contains details about the EPS payment method.
public type param_17 record {
    "arzte_und_apotheker_bank"|"austrian_anadi_bank_ag"|"bank_austria"|"bankhaus_carl_spangler"|"bankhaus_schelhammer_und_schattera_ag"|"bawag_psk_ag"|"bks_bank_ag"|"brull_kallmus_bank_ag"|"btv_vier_lander_bank"|"capital_bank_grawe_gruppe_ag"|"deutsche_bank_ag"|"dolomitenbank"|"easybank_ag"|"erste_bank_und_sparkassen"|"hypo_alpeadriabank_international_ag"|"hypo_bank_burgenland_aktiengesellschaft"|"hypo_noe_lb_fur_niederosterreich_u_wien"|"hypo_oberosterreich_salzburg_steiermark"|"hypo_tirol_bank_ag"|"hypo_vorarlberg_bank_ag"|"marchfelder_bank"|"oberbank_ag"|"raiffeisen_bankengruppe_osterreich"|"schoellerbank_ag"|"sparda_bank_wien"|"volksbank_gruppe"|"volkskreditbank_ag"|"vr_bank_braunau" bank?;
};

@constraint:String {maxLength: 5000}
public type GetBillingPortalConfigurationsQueriesExpandItemsString string;

public type released_at record {int gt?; int gte?; int lt?; int lte?;}|int;

# If this is an `fpx` PaymentMethod, this hash contains details about the FPX payment method.
public type param_18 record {
    "affin_bank"|"agrobank"|"alliance_bank"|"ambank"|"bank_islam"|"bank_muamalat"|"bank_of_china"|"bank_rakyat"|"bsn"|"cimb"|"deutsche_bank"|"hong_leong_bank"|"hsbc"|"kfh"|"maybank2e"|"maybank2u"|"ocbc"|"pb_enterprise"|"public_bank"|"rhb"|"standard_chartered"|"uob" bank;
};

public type Source_type_card record {
    string? address_line1_check?;
    string? address_zip_check?;
    string? brand?;
    string? country?;
    string? cvc_check?;
    string? dynamic_last4?;
    int? exp_month?;
    int? exp_year?;
    string fingerprint?;
    string? funding?;
    string? last4?;
    string? name?;
    string three_d_secure?;
    string? tokenization_method?;
};

@constraint:String {maxLength: 5000}
public type GetPaymentMethodDomainsQueriesExpandItemsString string;

public type setup_intent_payment_method_options_param_2 record {
    record {} mandate_options?;
};

# 
public type Payment_flows_automatic_payment_methods_payment_intent record {
    # Controls whether this PaymentIntent will accept redirect-based payment methods.
    # 
    # Redirect-based payment methods may require your customer to be redirected to a payment method's app or site for authentication or additional steps. To [confirm](https://stripe.com/docs/api/payment_intents/confirm) this PaymentIntent, you may be required to provide a `return_url` to redirect customers back to your site after they authenticate or complete the payment.
    "always"|"never" allow_redirects?;
    # Automatically calculates compatible payment methods
    boolean enabled;
};

@constraint:String {maxLength: 5000}
public type GetIssuingTokensTokenQueriesExpandItemsString string;

# 
public type PaymentFlowsPaymentIntentList record {
    Payment_intent[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/payment_intents`}
    string url;
};

public type setup_intent_payment_method_options_param_1 record {
    "A"|"C"|"I"|"N"|"R"|"U"|"Y" ares_trans_status?;
    @constraint:String {maxLength: 5000}
    string cryptogram?;
    "01"|"02"|"05"|"06"|"07" electronic_commerce_indicator?;
    network_options_param network_options?;
    @constraint:String {maxLength: 2}
    string requestor_challenge_indicator?;
    @constraint:String {maxLength: 5000}
    string transaction_id?;
    "1.0.2"|"2.1.0"|"2.2.0" version?;
};

public type customer_details_params record {
    string email;
};

# Represents the Queries record for the operation: GetLinkedAccountsAccountOwners
public type GetLinkedAccountsAccountOwnersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetLinkedAccountsAccountOwnersQueriesExpandItemsString[] expand?;
    # The ID of the ownership object to fetch owners from.
    @constraint:String {maxLength: 5000}
    string ownership;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# Configuration overrides
public type process_setup_config record {
    boolean enable_customer_cancellation?;
};

public type lines_line_item_id_body record {|
    # The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.
    int amount?;
    # An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.
    @constraint:String {maxLength: 5000}
    string description?;
    # Controls whether discounts apply to this line item. Defaults to false for prorations or negative line items, and true for all other line items. Cannot be set to true for prorations.
    boolean discountable?;
    # The coupons, promotion codes & existing discounts which apply to the line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    lines_line_item_id_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. For [type=subscription](https://stripe.com/docs/api/invoices/line_item#invoice_line_item_object-type) line items, the incoming metadata specified on the request is directly used to set this value, in contrast to [type=invoiceitem](api/invoices/line_item#invoice_line_item_object-type) line items, where any existing metadata on the invoice line is merged with the incoming data.
    record {|string...;|}|"" metadata?;
    period period?;
    # The ID of the price object. One of `price` or `price_data` is required.
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data_with_product_data_1 price_data?;
    # Non-negative integer. The quantity of units for the line item.
    int quantity?;
    # A list of up to 10 tax amounts for this line item. This can be useful if you calculate taxes on your own or use a third-party to calculate them. You cannot set tax amounts if any line item has [tax_rates](https://stripe.com/docs/api/invoices/line_item#invoice_line_item_object-tax_rates) or if the invoice has [default_tax_rates](https://stripe.com/docs/api/invoices/object#invoice_object-default_tax_rates) or uses [automatic tax](https://stripe.com/docs/tax/invoicing). Pass an empty string to remove previously defined tax amounts.
    record {int amount; record {string country?; string description?; string display_name; boolean inclusive; string jurisdiction?; decimal percentage; string state?; "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;} tax_rate_data; int taxable_amount;}[]|"" tax_amounts?;
    # The tax rates which apply to the line item. When set, the `default_tax_rates` on the invoice do not apply to this line item. Pass an empty string to remove previously-defined tax rates.
    TaxratesItemsString[]|"" tax_rates?;
|};

public type param record {
    string account?;
    "account"|"self" 'type;
};

public type setup_intent_payment_method_options_param_3 record {
    linked_account_options_param_1 financial_connections?;
    mandate_options_param_1 mandate_options?;
    networks_options_param networks?;
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.
public type radar_options_with_hidden_options record {
    @constraint:String {maxLength: 5000}
    string session?;
};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountCapabilitiesCapabilityQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetCreditNotesCreditNoteLinesQueriesExpandItemsString string;

public type radar_value_list_items_bodyExpandItemsString string;

# If this is a `sepa_debit` PaymentMethod, this hash contains details about the SEPA debit bank account.
public type param_22 record {
    @constraint:String {maxLength: 5000}
    string iban;
};

# If this is a `sofort` PaymentMethod, this hash contains details about the SOFORT payment method.
public type param_23 record {
    "AT"|"BE"|"DE"|"ES"|"IT"|"NL" country;
};

# 
public type Legal_entity_company_verification record {
    Legal_entity_company_verification_document document;
};

public type charge_capture_bodyExpandItemsString string;

# If this is a `klarna` PaymentMethod, this hash contains details about the Klarna payment method.
public type param_20 record {
    date_of_birth dob?;
};

# The desired new PIN for this card.
public type encrypted_pin_param_1 record {
    @constraint:String {maxLength: 5000}
    string encrypted_number?;
};

# If this is a `p24` PaymentMethod, this hash contains details about the P24 payment method.
public type param_21 record {
    "alior_bank"|"bank_millennium"|"bank_nowy_bfg_sa"|"bank_pekao_sa"|"banki_spbdzielcze"|"blik"|"bnp_paribas"|"boz"|"citi_handlowy"|"credit_agricole"|"envelobank"|"etransfer_pocztowy24"|"getin_bank"|"ideabank"|"ing"|"inteligo"|"mbank_mtransfer"|"nest_przelew"|"noble_pay"|"pbac_z_ipko"|"plus_bank"|"santander_przelew24"|"tmobile_usbugi_bankowe"|"toyota_bank"|"velobank"|"volkswagen_bank" bank?;
};

@constraint:String {maxLength: 5000}
public type GetFilesFileQueriesExpandItemsString string;

# SPEI Records contain Mexico bank account details per the SPEI format.
public type Funding_instructions_bank_transfer_spei_record record {
    # The three-digit bank code
    @constraint:String {maxLength: 5000}
    string bank_code;
    # The short banking institution name
    @constraint:String {maxLength: 5000}
    string bank_name;
    # The CLABE number
    @constraint:String {maxLength: 5000}
    string clabe;
};

# 
public type Checkout_swish_payment_method_options record {
    # The order reference that will be displayed to customers in the Swish application. Defaults to the `id` of the Payment Intent.
    string? reference?;
};

# A list of [file links](https://stripe.com/docs/api#file_links) that point at this file.
public type FileResourceFileLinkList_1 record {
    # Details about each object.
    File_link[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/file_links`}
    string url;
};

public type reader_cancel_action_body record {|
    # Specifies which fields in the response should be expanded.
    reader_cancel_action_bodyExpandItemsString[] expand?;
|};

# Represents the Queries record for the operation: GetLinkedAccounts
public type GetLinkedAccountsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetLinkedAccountsQueriesExpandItemsString[] expand?;
    # If present, only return accounts that belong to the specified account holder. `account_holder[customer]` and `account_holder[account]` are mutually exclusive.
    accountholder_params_2 account_holder?;
    # If present, only return accounts that were collected as part of the given session.
    @constraint:String {maxLength: 5000}
    string session?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Billing_meter_resource_billing_meter_value record {
    # The key in the meter event payload to use as the value for this meter.
    @constraint:String {maxLength: 5000}
    string event_payload_key;
};

public type outbound_payments record {
    access_with_ach_details ach?;
    access us_domestic_wire?;
};

# FinancialAddresses contain identifying information that resolves to a FinancialAccount.
public type Funding_instructions_bank_transfer_financial_address record {
    Funding_instructions_bank_transfer_aba_record aba?;
    Funding_instructions_bank_transfer_iban_record iban?;
    Funding_instructions_bank_transfer_sort_code_record sort_code?;
    Funding_instructions_bank_transfer_spei_record spei?;
    # The payment networks supported by this FinancialAddress
    ("ach"|"bacs"|"domestic_wire_us"|"fps"|"sepa"|"spei"|"swift"|"zengin")[] supported_networks?;
    Funding_instructions_bank_transfer_swift_record swift?;
    # The type of financial address
    "aba"|"iban"|"sort_code"|"spei"|"swift"|"zengin" 'type;
    Funding_instructions_bank_transfer_zengin_record zengin?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryOutboundTransfersOutboundTransferQueriesExpandItemsString string;

public type Entitlements\.active_entitlement record {
    string|Entitlements\.feature feature;
    string id;
    boolean livemode;
    string lookup_key;
    "entitlements.active_entitlement" 'object;
};

@constraint:String {maxLength: 5000}
public type GetTaxCodesQueriesExpandItemsString string;

# 
public type Mandate_cashapp record {
};

# 
public type Treasury_outbound_payments_resource_us_domestic_wire_tracking_details record {
    # IMAD of the OutboundPayment for payments sent over the `us_domestic_wire` network.
    @constraint:String {maxLength: 5000}
    string imad;
    # OMAD of the OutboundPayment for payments sent over the `us_domestic_wire` network.
    string? omad?;
};

# Represents the Queries record for the operation: GetQuotesQuoteComputedUpfrontLineItems
public type GetQuotesQuoteComputedUpfrontLineItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetQuotesQuoteComputedUpfrontLineItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type spending_limits_param record {
    int amount;
    (spending_limits_paramCategoriesItemsString)[] categories?;
    "all_time"|"daily"|"monthly"|"per_authorization"|"weekly"|"yearly" interval;
};

public type billing_meter_event_adjustments_body record {|
    event_adjustment_cancel_settings_param cancel?;
    # The name of the meter event. Corresponds with the `event_name` field on a meter.
    @constraint:String {maxLength: 100}
    string event_name;
    # Specifies which fields in the response should be expanded.
    billing_meter_event_adjustments_bodyExpandItemsString[] expand?;
    # Specifies whether to cancel a single event or a range of events for a time period. Time period cancellation is not supported yet.
    "cancel" 'type;
|};

@constraint:String {maxLength: 5000}
public type GetAccountQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerCashBalanceTransactionsTransactionQueriesExpandItemsString string;

public type credit_note_shipping_cost_2 record {
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
};

# Represents the Queries record for the operation: GetRadarEarlyFraudWarningsEarlyFraudWarning
public type GetRadarEarlyFraudWarningsEarlyFraudWarningQueries record {
    # Specifies which fields in the response should be expanded.
    GetRadarEarlyFraudWarningsEarlyFraudWarningQueriesExpandItemsString[] expand?;
};

# Details about the authorization, such as identifiers, set by the card network.
public type network_data_specs record {
    @constraint:String {maxLength: 5000}
    string acquiring_institution_id?;
};

# This is an object representing a Stripe account. You can retrieve it to see
# properties on the account like its current requirements or if the account is
# enabled to make live charges or receive payouts.
# 
# For accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
# is `application`, which includes Custom accounts, the properties below are always
# returned.
# 
# For accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
# is `stripe`, which includes Standard and Express accounts, some properties are only returned
# until you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions)
# to start Connect Onboarding. Learn about the [differences between accounts](/connect/accounts).
public type Account record {
    # Business information about the account.
    Account_business_profile? business_profile?;
    # The business type. After you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property is only returned for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    "company"|"government_entity"|"individual"|"non_profit"? business_type?;
    Account_capabilities capabilities?;
    # Whether the account can create live charges.
    boolean charges_enabled?;
    Legal_entity_company company?;
    Account_unification_account_controller controller?;
    # The account's country.
    @constraint:String {maxLength: 5000}
    string country?;
    # Time at which the account was connected. Measured in seconds since the Unix epoch.
    int created?;
    # Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).
    @constraint:String {maxLength: 5000}
    string default_currency?;
    # Whether account details have been submitted. Accounts with Stripe Dashboard access, which includes Standard accounts, cannot receive payouts before this is true. Accounts where this is false should be directed to [an onboarding flow](/connect/onboarding) to finish submitting account details.
    boolean details_submitted?;
    # An email address associated with the account. It's not used for authentication and Stripe doesn't market to this field without explicit approval from the platform.
    string? email?;
    ExternalAccountList_1 external_accounts?;
    Account_future_requirements future_requirements?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    Person individual?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "account" 'object;
    # Whether Stripe can send payouts to this account.
    boolean payouts_enabled?;
    Account_requirements requirements?;
    # Options for customizing how the account functions within Stripe.
    Account_settings? settings?;
    Account_tos_acceptance tos_acceptance?;
    # The Stripe account type. Can be `standard`, `express`, `custom`, or `none`.
    "custom"|"express"|"none"|"standard" 'type?;
};

@constraint:String {maxLength: 5000}
public type GetChargesChargeRefundsRefundQueriesExpandItemsString string;

public type credit_note_shipping_cost_1 record {
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
};

# 
public type Deleted_invoice record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "invoice" 'object;
};

# 
public type Treasury_inbound_transfers_resource_inbound_transfer_resource_status_transitions record {
    # Timestamp describing when an InboundTransfer changed status to `canceled`.
    int? canceled_at?;
    # Timestamp describing when an InboundTransfer changed status to `failed`.
    int? failed_at?;
    # Timestamp describing when an InboundTransfer changed status to `succeeded`.
    int? succeeded_at?;
};

public type ephemeral_keys_bodyExpandItemsString string;

# 
public type Terminal_configuration_configuration_resource_currency_specific_config record {
    # Fixed amounts displayed when collecting a tip
    int[]? fixed_amounts?;
    # Percentages displayed when collecting a tip
    int[]? percentages?;
    # Below this amount, fixed amounts will be displayed; above it, percentages will be displayed
    int smart_tip_threshold?;
};

public type Deleted_terminal\.configuration record {
    true deleted;
    string id;
    "terminal.configuration" 'object;
};

@constraint:String {maxLength: 5000}
public type GetInvoicesUpcomingLinesQueriesExpandItemsString string;

public type flow_data_subscription_update_param record {
    @constraint:String {maxLength: 5000}
    string subscription;
};

# 
public type Email_sent record {
    # The timestamp when the email was sent.
    int email_sent_at;
    # The recipient's email address.
    @constraint:String {maxLength: 5000}
    string email_sent_to;
};

# A line item.
public type Item record {
    # Total discount amount applied. If no discounts were applied, defaults to 0.
    int amount_discount;
    # Total before any discounts or taxes are applied.
    int amount_subtotal;
    # Total tax amount applied. If no tax was applied, defaults to 0.
    int amount_tax;
    # Total after discounts and taxes.
    int amount_total;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users. Defaults to product name.
    @constraint:String {maxLength: 5000}
    string description;
    # The discounts applied to the line item.
    Line_items_discount_amount[] discounts?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "item" 'object;
    # The price used to generate the line item.
    Price? price?;
    # The quantity of products being purchased.
    int? quantity?;
    # The taxes applied to the line item.
    Line_items_tax_amount[] taxes?;
};

# Hash containing carrier text, for use with physical bundles that support carrier text.
public type carrier_text_param record {
    string|"" footer_body?;
    string|"" footer_title?;
    string|"" header_body?;
    string|"" header_title?;
};

# 
public type Token_card_networks record {
    # The preferred network for co-branded cards. Can be `cartes_bancaires`, `mastercard`, `visa` or `invalid_preference` if requested network is not valid for the card.
    string? preferred?;
};

# 
public type Issuing_cardholder_card_issuing record {
    # Information about cardholder acceptance of Celtic [Authorized User Terms](https://stripe.com/docs/issuing/cards#accept-authorized-user-terms). Required for cards backed by a Celtic program.
    Issuing_cardholder_user_terms_acceptance? user_terms_acceptance?;
};

# Represents the Queries record for the operation: GetPrices
public type GetPricesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPricesQueriesExpandItemsString[] expand?;
    # Only return prices for the given product.
    @constraint:String {maxLength: 5000}
    string product?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_26 created?;
    # Only return prices with these recurring fields.
    all_prices_recurring_params recurring?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return prices that are active or inactive (e.g., pass `false` to list all inactive prices).
    boolean active?;
    # Only return prices for the given currency.
    string currency?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return the price with these lookup_keys, if any exist. You can specify up to 10 lookup_keys.
    GetPricesQueriesLookupkeysItemsString[] lookup_keys?;
    # Only return prices of type `recurring` or `one_time`.
    "one_time"|"recurring" 'type?;
};

public type validated_country_address record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

public type Radar\.value_list record {
    string alias;
    int created;
    string created_by;
    string id;
    "card_bin"|"card_fingerprint"|"case_sensitive_string"|"country"|"customer_id"|"email"|"ip_address"|"sepa_debit_fingerprint"|"string"|"us_bank_account_fingerprint" item_type;
    RadarListListItemList_1 list_items;
    boolean livemode;
    record {|string...;|} metadata;
    string name;
    "radar.value_list" 'object;
};

public type test_helpers_test_clocks_bodyExpandItemsString string;

# 
public type Payment_method_options_fpx record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type mandate_acceptance_params record {
    int date?;
    string ip?;
    mandate_offline_acceptance_params offline?;
    mandate_online_acceptance_params online?;
    "accepted"|"pending"|"refused"|"revoked" status;
    "offline"|"online" 'type?;
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

# 
public type Deleted_price record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "price" 'object;
};

# 
public type Gelato_report_document_options record {
    # Array of strings of allowed identity document types. If the provided identity document isn’t one of the allowed types, the verification check will fail with a document_type_not_allowed error code.
    ("driving_license"|"id_card"|"passport")[] allowed_types?;
    # Collect an ID number and perform an [ID number check](https://stripe.com/docs/identity/verification-checks?type=id-number) with the document’s extracted name and date of birth.
    boolean require_id_number?;
    # Disable image uploads, identity document images have to be captured using the device’s camera.
    boolean require_live_capture?;
    # Capture a face image and perform a [selfie check](https://stripe.com/docs/identity/verification-checks?type=selfie) comparing a photo ID and a picture of your user’s face. [Learn more](https://stripe.com/docs/identity/selfie).
    boolean require_matching_selfie?;
};

# Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required.
public type one_time_price_data_with_product_data_1 record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product?;
    product_data product_data?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type subscription_cancellation_reason_creation_param record {
    boolean enabled;
    ("customer_service"|"low_quality"|"missing_features"|"other"|"switched_service"|"too_complex"|"too_expensive"|"unused")[]|"" options;
};

public type treasury_debit_reversals_bodyExpandItemsString string;

public type issuing_authorizations_bodyExpandItemsString string;

public type Line_itemDiscountsItemsnull string|Discount;

public type dispute_close_body_1 record {|
    # Specifies which fields in the response should be expanded.
    dispute_close_body_1ExpandItemsString[] expand?;
|};

# 
public type InvoiceLinesList record {
    # Details about each object.
    Line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# You can store multiple cards on a customer in order to charge the customer
# later. You can also store multiple debit cards on a recipient in order to
# transfer to those cards later.
# 
# Related guide: [Card payments with Sources](https://stripe.com/docs/sources/cards)
public type Card record {
    # The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead. This property is only available for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    string|Account? account?;
    # City/District/Suburb/Town/Village.
    string? address_city?;
    # Billing address country, if provided when creating card.
    string? address_country?;
    # Address line 1 (Street address/PO Box/Company name).
    string? address_line1?;
    # If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_line1_check?;
    # Address line 2 (Apartment/Suite/Unit/Building).
    string? address_line2?;
    # State/County/Province/Region.
    string? address_state?;
    # ZIP or postal code.
    string? address_zip?;
    # If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_zip_check?;
    # A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.
    ("instant"|"standard")[]? available_payout_methods?;
    # Card brand. Can be `American Express`, `Diners Club`, `Discover`, `Eftpos Australia`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.
    @constraint:String {maxLength: 5000}
    string brand;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency. This property is only available for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    string? currency?;
    # The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.
    string|Customer|Deleted_customer? customer?;
    # If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).
    string? cvc_check?;
    # Whether this card is the default external account for its currency. This property is only available for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    boolean? default_for_currency?;
    # (For tokenized numbers only.) The last four digits of the device account number.
    string? dynamic_last4?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    @constraint:String {maxLength: 5000}
    string funding;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The last four digits of the card.
    @constraint:String {maxLength: 5000}
    string last4;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # Cardholder name.
    string? name?;
    Token_card_networks networks?;
    # String representing the object's type. Objects of the same type share the same value.
    "card" 'object;
    # For external accounts that are cards, possible values are `new` and `errored`. If a payout fails, the status is set to `errored` and [scheduled payouts](https://stripe.com/docs/payouts#payout-schedule) are stopped until account details are updated.
    string? status?;
    # If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.
    string? tokenization_method?;
};

# 
public type Bank_connections_resource_transaction_resource_status_transitions record {
    # Time at which this transaction posted. Measured in seconds since the Unix epoch.
    int? posted_at?;
    # Time at which this transaction was voided. Measured in seconds since the Unix epoch.
    int? void_at?;
};

public type automatic_tax_filter_params record {
    boolean enabled;
};

# 
public type Gelato_verification_session_options record {
    Gelato_session_document_options document?;
    Gelato_session_email_options email?;
    Gelato_session_id_number_options id_number?;
    Gelato_session_phone_options phone?;
};

public type payment_method_detach_body record {|
    # Specifies which fields in the response should be expanded.
    payment_method_detach_bodyExpandItemsString[] expand?;
|};

# 
public type Issuing_dispute_merchandise_not_as_described_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
    # Date when the product was received.
    int? received_at?;
    # Description of the cardholder's attempt to return the product.
    string? return_description?;
    # Result of cardholder's attempt to return the product.
    "merchant_rejected"|"successful"? return_status?;
    # Date when the product was returned or attempted to be returned.
    int? returned_at?;
};

public type intent_confirm_body_1 record {|
    # The client secret of the SetupIntent.
    @constraint:String {maxLength: 5000}
    string client_secret?;
    # ID of the ConfirmationToken used to confirm this SetupIntent.
    # 
    # If the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.
    @constraint:String {maxLength: 5000}
    string confirmation_token?;
    # Specifies which fields in the response should be expanded.
    intent_confirm_body_1ExpandItemsString[] expand?;
    record {record {int accepted_at?; record {} offline?; record {string ip_address; string user_agent;} online?; "offline"|"online" 'type;} customer_acceptance;}|""|record {record {record {string ip_address?; string user_agent?;} online; "online" 'type;} customer_acceptance;} mandate_data?;
    # ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    payment_method_data_params_1 payment_method_data?;
    payment_method_options_param_16 payment_method_options?;
    # The URL to redirect your customer back to after they authenticate on the payment method's app or site.
    # If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.
    # This parameter is only used for cards and other redirect-based payment methods.
    string return_url?;
    # Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.
    boolean use_stripe_sdk?;
|};

public type linked_account_options_param_1 record {
    linked_account_options_filters_param filters?;
    (linked_account_options_param_1PermissionsItemsString)[] permissions?;
    ("balances"|"ownership"|"transactions")[] prefetch?;
    @constraint:String {maxLength: 5000}
    string return_url?;
};

@constraint:String {maxLength: 5000}
public type GetTaxIdsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetAccountsQueriesExpandItemsString string;

public type Issuing\.settlement record {
    string bin;
    int clearing_date;
    int created;
    string currency;
    string id;
    int interchange_fees;
    boolean livemode;
    record {|string...;|} metadata;
    int net_total;
    "visa" network;
    int network_fees;
    string network_settlement_identifier;
    "issuing.settlement" 'object;
    string settlement_service;
    int transaction_count;
    int transaction_volume;
};

public type intent_increment_authorization_bodyExpandItemsString string;

# 
public type Payment_pages_checkout_session_payment_method_reuse_agreement record {
    # Determines the position and visibility of the payment method reuse agreement in the UI. When set to `auto`, Stripe's defaults will be used.
    # 
    # When set to `hidden`, the payment method reuse agreement text will always be hidden in the UI.
    "auto"|"hidden" position;
};

public type outbound_transfer_post_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetInvoicesSearchQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetInvoicesInvoiceLinesQueriesExpandItemsString string;

# The Kanji variation of the person's address (Japan only).
public type japan_address_kanji_specs_1 record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
    @constraint:String {maxLength: 5000}
    string town?;
};

# 
public type TaxRatesList record {
    Tax_rate[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/tax_rates`}
    string url;
};

# 
public type Invoice_setting_customer_setting record {
    # Default custom fields to be displayed on invoices for this customer.
    Invoice_setting_custom_field[]? custom_fields?;
    # ID of a payment method that's attached to the customer, to be used as the customer's default payment method for subscriptions and invoices.
    string|Payment_method? default_payment_method?;
    # Default footer to be displayed on invoices for this customer.
    string? footer?;
    # Default options for invoice PDF rendering for this customer.
    Invoice_setting_customer_rendering_options? rendering_options?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryFinancialAccountsQueriesExpandItemsString string;

public type authorization_expire_body record {|
    # Specifies which fields in the response should be expanded.
    authorization_expire_bodyExpandItemsString[] expand?;
|};

# Represents the Queries record for the operation: GetInvoicesUpcoming
public type GetInvoicesUpcomingQueries record {
    # A list of up to 20 subscription items, each with an attached price. This field has been deprecated and will be removed in a future API version. Use `subscription_details.items` instead.
    subscription_item_update_params[] subscription_items?;
    # List of invoice items to add or update in the upcoming invoice preview.
    invoice_item_preview_params[] invoice_items?;
    # For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.billing_cycle_anchor` instead.
    subscription_billing_cycle_anchor subscription_billing_cycle_anchor?;
    # The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_details.items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_details.items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.
    @constraint:String {maxLength: 5000}
    string subscription?;
    # The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.
    param_2 issuer?;
    # This simulates the subscription being canceled or expired immediately. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_now` instead.
    boolean subscription_cancel_now?;
    # Details about the customer you want to invoice or overrides for an existing customer. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
    customer_details_param_1 customer_details?;
    # Boolean indicating whether this subscription should cancel at the end of the current period. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at_period_end` instead.
    boolean subscription_cancel_at_period_end?;
    # The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the subscription or customer. This works for both coupons directly applied to an invoice and coupons applied to a subscription. Pass an empty string to avoid inheriting any discounts.
    discounts discounts?;
    # For paused subscriptions, setting `subscription_resume_at` to `now` will preview the invoice that will be generated if the subscription is resumed. This field has been deprecated and will be removed in a future API version. Use `subscription_details.resume_at` instead.
    "now" subscription_resume_at?;
    # Date a subscription is intended to start (can be future or past). This field has been deprecated and will be removed in a future API version. Use `subscription_details.start_date` instead.
    int subscription_start_date?;
    # The currency to preview this invoice in. Defaults to that of `customer` if not specified.
    string currency?;
    # If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period and within the current phase of the schedule backing this subscription, if the schedule exists. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_date` instead.
    int subscription_proration_date?;
    # The schedule creation or modification params to apply as a preview. Cannot be used with `subscription` or `subscription_` prefixed fields.
    schedule_details_params_1 schedule_details?;
    # The ID of the coupon to apply to this phase of the subscription schedule. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    on_behalf_of on_behalf_of?;
    # If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required. This field has been deprecated and will be removed in a future API version. Use `subscription_details.trial_end` instead.
    subscription_trial_end subscription_trial_end?;
    # The identifier of the schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.
    @constraint:String {maxLength: 5000}
    string schedule?;
    # Specifies which fields in the response should be expanded.
    GetInvoicesUpcomingQueriesExpandItemsString[] expand?;
    # Settings for automatic tax lookup for this invoice preview.
    automatic_tax_param_2 automatic_tax?;
    # The subscription creation or modification params to apply as a preview. Cannot be used with `schedule` or `schedule_details` fields.
    subscription_details_params_1 subscription_details?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at` instead.
    subscription_cancel_at subscription_cancel_at?;
    # If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set. This field has been deprecated and will be removed in a future API version. Use `subscription_details.default_tax_rates` instead.
    subscription_default_tax_rates subscription_default_tax_rates?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_behavior` instead.
    "always_invoice"|"create_prorations"|"none" subscription_proration_behavior?;
    # Customizes the types of values to include when calculating the invoice. Defaults to `next` if unspecified.
    "next"|"recurring" preview_mode?;
    # The identifier of the customer whose upcoming invoice you'd like to retrieve. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
    @constraint:String {maxLength: 5000}
    string customer?;
};

# 
public type AccountList record {
    Account[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/accounts`}
    string url;
};

public type sources_source_body record {|
    # Amount associated with the source.
    int amount?;
    # Specifies which fields in the response should be expanded.
    sources_source_bodyExpandItemsString[] expand?;
    mandate_params mandate?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    owner_1 owner?;
    order_params source_order?;
|};

# 
public type Billing_details record {
    # Billing address.
    Address? address?;
    # Email address.
    string? email?;
    # Full name.
    string? name?;
    # Billing phone number (including extension).
    string? phone?;
};

public type fleet_cardholder_prompt_data_specs record {
    @constraint:String {maxLength: 5000}
    string driver_id?;
    int odometer?;
    @constraint:String {maxLength: 5000}
    string unspecified_id?;
    @constraint:String {maxLength: 5000}
    string user_id?;
    @constraint:String {maxLength: 5000}
    string vehicle_number?;
};

@constraint:String {maxLength: 5000}
public type GetRadarValueListItemsQueriesExpandItemsString string;

# 
public type PaymentMethodDomainResourcePaymentMethodDomainList record {
    Payment_method_domain[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/payment_method_domains`}
    string url;
};

public type id_return_body record {|
    # Specifies which fields in the response should be expanded.
    id_return_bodyExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type PersonFullnamealiasesItemsString string;

public type tax_registrations_body record {|
    # Time at which the Tax Registration becomes active. It can be either `now` to indicate the current time, or a future timestamp measured in seconds since the Unix epoch.
    "now"|int active_from;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country;
    country_options country_options;
    # Specifies which fields in the response should be expanded.
    tax_registrations_bodyExpandItemsString[] expand?;
    # If set, the Tax Registration stops being active at this time. If not set, the Tax Registration will be active indefinitely. Timestamp measured in seconds since the Unix epoch.
    int expires_at?;
|};

public type treasury_received_debits_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetTaxCodes
public type GetTaxCodesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTaxCodesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

public type treasury_outbound_payments_body record {|
    # Amount (in cents) to be transferred.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the customer to whom the OutboundPayment is sent. Must match the Customer attached to the `destination_payment_method` passed in.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # The PaymentMethod to use as the payment instrument for the OutboundPayment. Exclusive with `destination_payment_method_data`.
    @constraint:String {maxLength: 5000}
    string destination_payment_method?;
    payment_method_data destination_payment_method_data?;
    payment_method_options_2 destination_payment_method_options?;
    end_user_details_params end_user_details?;
    # Specifies which fields in the response should be expanded.
    treasury_outbound_payments_bodyExpandItemsString[] expand?;
    # The FinancialAccount to pull funds from.
    string financial_account;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The description that appears on the receiving end for this OutboundPayment (for example, bank statement for external bank transfer). Maximum 10 characters for `ach` payments, 140 characters for `us_domestic_wire` payments, or 500 characters for `stripe` network transfers. The default value is "payment".
    @constraint:String {maxLength: 5000}
    string statement_descriptor?;
|};

# Verifications that Stripe performed on information that the cardholder provided to the merchant.
public type verification_data_specs record {
    "match"|"mismatch"|"not_provided" address_line1_check?;
    "match"|"mismatch"|"not_provided" address_postal_code_check?;
    authentication_exemption_specs authentication_exemption?;
    "match"|"mismatch"|"not_provided" cvc_check?;
    "match"|"mismatch"|"not_provided" expiry_check?;
    three_d_secure_specs three_d_secure?;
};

# Represents the Queries record for the operation: GetAccountsAccountCapabilitiesCapability
public type GetAccountsAccountCapabilitiesCapabilityQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountCapabilitiesCapabilityQueriesExpandItemsString[] expand?;
};

# 
public type Inbound_transfers_payment_method_details_us_bank_account record {
    # Account holder type: individual or company.
    "company"|"individual"? account_holder_type?;
    # Account type: checkings or savings. Defaults to checking if omitted.
    "checking"|"savings"? account_type?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    string|Mandate mandate?;
    # The network rails used. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.
    "ach" network;
    # Routing number of the bank account.
    string? routing_number?;
};

public type Deleted_external_account Deleted_bank_account|Deleted_card;

# Represents the Queries record for the operation: GetPromotionCodes
public type GetPromotionCodesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPromotionCodesQueriesExpandItemsString[] expand?;
    # Only return promotion codes that have this case-insensitive code.
    @constraint:String {maxLength: 5000}
    string code?;
    # Only return promotion codes for this coupon.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_28 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Filter promotion codes by whether they are active.
    boolean active?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return promotion codes that are restricted to this customer.
    @constraint:String {maxLength: 5000}
    string customer?;
};

public type subscriptions_body record {|
    # A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.
    add_invoice_item_entry[] add_invoice_items?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
    decimal|"" application_fee_percent?;
    automatic_tax_config_4 automatic_tax?;
    # For new subscriptions, a past timestamp to backdate the subscription's start date to. If set, the first invoice will contain a proration for the timespan between the start date and the current time. Can be combined with trials and the billing cycle anchor.
    int backdate_start_date?;
    # A future timestamp in UTC format to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). The anchor is the reference point that aligns future billing cycle dates. It sets the day of week for `week` intervals, the day of month for `month` and `year` intervals, and the month of year for `year` intervals.
    int billing_cycle_anchor?;
    billing_cycle_anchor_config_param billing_cycle_anchor_config?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.
    int cancel_at?;
    # Boolean indicating whether this subscription should cancel at the end of the current period.
    boolean cancel_at_period_end?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # The identifier of the customer to subscribe.
    @constraint:String {maxLength: 5000}
    string customer;
    # Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.
    int days_until_due?;
    # ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_source?;
    # The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    @constraint:String {maxLength: 500}
    string description?;
    # The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    subscriptions_bodyExpandItemsString[] expand?;
    invoice_settings_param_1 invoice_settings?;
    # A list of up to 20 subscription items, each with an attached price.
    subscription_item_create_params[] items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted.
    boolean off_session?;
    # The account on behalf of which to charge, for each of the subscription's invoices.
    string|"" on_behalf_of?;
    # Only applies to subscriptions with `collection_method=charge_automatically`.
    # 
    # Use `allow_incomplete` to create Subscriptions with `status=incomplete` if the first invoice can't be paid. Creating Subscriptions with this status allows you to manage scenarios where additional customer actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    # 
    # Use `default_incomplete` to create Subscriptions with `status=incomplete` when the first invoice requires payment, otherwise start as active. Subscriptions transition to `status=active` when successfully confirming the PaymentIntent on the first invoice. This allows simpler management of scenarios where additional customer actions are needed to pay a subscription’s invoice, such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the PaymentIntent is not confirmed within 23 hours Subscriptions transition to `status=incomplete_expired`, which is a terminal state.
    # 
    # Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice can't be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further customer action is needed, this parameter doesn't create a Subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
    # 
    # `pending_if_incomplete` is only used with updates and cannot be passed when creating a Subscription.
    # 
    # Subscriptions with `collection_method=send_invoice` are automatically activated regardless of the first Invoice status.
    "allow_incomplete"|"default_incomplete"|"error_if_incomplete"|"pending_if_incomplete" payment_behavior?;
    payment_settings payment_settings?;
    # Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.
    record {"day"|"month"|"week"|"year" interval; int interval_count?;}|"" pending_invoice_item_interval?;
    # The ID of a promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) resulting from the `billing_cycle_anchor`. If no value is passed, the default is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    transfer_data_specs_3 transfer_data?;
    # Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    "now"|int trial_end?;
    # Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    boolean trial_from_plan?;
    # Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    int trial_period_days?;
    trial_settings_config_1 trial_settings?;
|};

public type subscription_items_item_body record {|
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds.
    record {int usage_gte;}|"" billing_thresholds?;
    # The coupons to redeem into discounts for the subscription item.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    subscription_items_item_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted.
    boolean off_session?;
    # Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    # 
    # Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.
    # 
    # Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).
    # 
    # Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
    "allow_incomplete"|"default_incomplete"|"error_if_incomplete"|"pending_if_incomplete" payment_behavior?;
    # The ID of the price object. One of `price` or `price_data` is required. When changing a subscription item's price, `quantity` is set to 1 unless a `quantity` parameter is provided.
    @constraint:String {maxLength: 5000}
    string price?;
    recurring_price_data_2 price_data?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    # If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.
    int proration_date?;
    # The quantity you'd like to apply to the subscription item you're creating.
    int quantity?;
    # A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates.
    TaxratesItemsString[]|"" tax_rates?;
|};

# Represents the Queries record for the operation: GetApplicationFeesId
public type GetApplicationFeesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetApplicationFeesIdQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_transaction_fleet_non_fuel_price_data record {
    # Gross non-fuel amount that should equal the sum of the line items, inclusive of taxes.
    string? gross_amount_decimal?;
};

# Settings that restrict the usage of a payment link.
public type restrictions_params record {
    completed_sessions_params completed_sessions;
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer record {
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer eu_bank_transfer?;
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_gb_bank_transfer gb_bank_transfer?;
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_jp_bank_transfer jp_bank_transfer?;
    # The user-supplied reference field on the bank transfer.
    string? reference?;
    # The funding method type used to fund the customer balance. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
    "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer" 'type;
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_us_bank_transfer us_bank_transfer?;
};

public type payout_settings_specs record {
    boolean debit_negative_balances?;
    transfer_schedule_specs schedule?;
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
};

# This hash contains details about the customer acceptance of the Mandate.
public type Confirmation_tokens_resource_mandate_data_resource_customer_acceptance record {
    # If this is a Mandate accepted online, this hash contains details about the online acceptance.
    Confirmation_tokens_resource_mandate_data_resource_customer_acceptance_resource_online? online?;
    # The type of customer acceptance information included with the Mandate.
    @constraint:String {maxLength: 5000}
    string 'type;
};

# 
public type Card_generated_from_payment_method_details record {
    Payment_method_details_card_present card_present?;
    # The type of payment method transaction-specific details from the transaction that generated this `card` payment method. Always `card_present`.
    @constraint:String {maxLength: 5000}
    string 'type;
};

public type subscription_item_usage_records_body record {|
    # Valid values are `increment` (default) or `set`. When using `increment` the specified `quantity` will be added to the usage at the specified timestamp. The `set` action will overwrite the usage quantity at that timestamp. If the subscription has [billing thresholds](https://stripe.com/docs/api/subscriptions/object#subscription_object-billing_thresholds), `increment` is the only allowed value.
    "increment"|"set" action?;
    # Specifies which fields in the response should be expanded.
    subscription_item_usage_records_bodyExpandItemsString[] expand?;
    # The usage quantity for the specified timestamp.
    int quantity;
    # The timestamp for the usage event. This timestamp must be within the current billing period of the subscription of the provided `subscription_item`, and must not be in the future. When passing `"now"`, Stripe records usage for the current time. Default is `"now"` if a value is not provided.
    "now"|int timestamp?;
|};

# 
public type Dispute_payment_method_details record {
    Dispute_payment_method_details_card card?;
    Dispute_payment_method_details_klarna klarna?;
    Dispute_payment_method_details_paypal paypal?;
    # Payment method type.
    "card"|"klarna"|"paypal" 'type;
};

@constraint:String {maxLength: 5000}
public type GetIssuingAuthorizationsAuthorizationQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetWebhookEndpointsWebhookEndpoint
public type GetWebhookEndpointsWebhookEndpointQueries record {
    # Specifies which fields in the response should be expanded.
    GetWebhookEndpointsWebhookEndpointQueriesExpandItemsString[] expand?;
};

# You can now model subscriptions more flexibly using the [Prices API](https://stripe.com/docs/api#prices). It replaces the Plans API and is backwards compatible to simplify your migration.
# 
# Plans define the base price, currency, and billing cycle for recurring purchases of products.
# [Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and plans help you track pricing. Different physical goods or levels of service should be represented by products, and pricing options should be represented by plans. This approach lets you change prices without having to change your provisioning scheme.
# 
# For example, you might have a single "gold" product that has plans for $10/month, $100/year, €9/month, and €90/year.
# 
# Related guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription) and more about [products and prices](https://stripe.com/docs/products-prices/overview).
public type Plan record {
    # Whether the plan can be used for new purchases.
    boolean active;
    # Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.
    "last_during_period"|"last_ever"|"max"|"sum"? aggregate_usage?;
    # The unit amount in cents (or local equivalent) to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.
    int? amount?;
    # The unit amount in cents (or local equivalent) to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.
    string? amount_decimal?;
    # Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.
    "per_unit"|"tiered" billing_scheme;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.
    "day"|"month"|"week"|"year" interval;
    # The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.
    int interval_count;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # The meter tracking the usage of a metered price
    string? meter?;
    # A brief description of the plan, hidden from customers.
    string? nickname?;
    # String representing the object's type. Objects of the same type share the same value.
    "plan" 'object;
    # The product whose pricing this plan determines.
    string|Product|Deleted_product? product?;
    # Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    Plan_tier[] tiers?;
    # Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.
    "graduated"|"volume"? tiers_mode?;
    # Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.
    Transform_usage? transform_usage?;
    # Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
    int? trial_period_days?;
    # Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.
    "licensed"|"metered" usage_type;
};

public type add_invoice_item_entry record {
    discounts_data_param[] discounts?;
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data_with_negative_amounts price_data?;
    int quantity?;
    TaxratesItemsString[]|"" tax_rates?;
};

# 
public type Payment_method_bancontact record {
};

public type effective_at record {int gt?; int gte?; int lt?; int lte?;}|int;

# The business information shown to customers in the portal.
public type business_profile_create_param record {
    string|"" headline?;
    string privacy_policy_url?;
    string terms_of_service_url?;
};

# 
public type Payment_intent_payment_method_options record {
    Payment_intent_payment_method_options_acss_debit|Payment_intent_type_specific_payment_method_options_client acss_debit?;
    Payment_method_options_affirm|Payment_intent_type_specific_payment_method_options_client affirm?;
    Payment_method_options_afterpay_clearpay|Payment_intent_type_specific_payment_method_options_client afterpay_clearpay?;
    Payment_method_options_alipay|Payment_intent_type_specific_payment_method_options_client alipay?;
    Payment_method_options_amazon_pay|Payment_intent_type_specific_payment_method_options_client amazon_pay?;
    Payment_intent_payment_method_options_au_becs_debit|Payment_intent_type_specific_payment_method_options_client au_becs_debit?;
    Payment_method_options_bacs_debit|Payment_intent_type_specific_payment_method_options_client bacs_debit?;
    Payment_method_options_bancontact|Payment_intent_type_specific_payment_method_options_client bancontact?;
    Payment_intent_payment_method_options_blik|Payment_intent_type_specific_payment_method_options_client blik?;
    Payment_method_options_boleto|Payment_intent_type_specific_payment_method_options_client boleto?;
    Payment_intent_payment_method_options_card|Payment_intent_type_specific_payment_method_options_client card?;
    Payment_method_options_card_present|Payment_intent_type_specific_payment_method_options_client card_present?;
    Payment_method_options_cashapp|Payment_intent_type_specific_payment_method_options_client cashapp?;
    Payment_method_options_customer_balance|Payment_intent_type_specific_payment_method_options_client customer_balance?;
    Payment_intent_payment_method_options_eps|Payment_intent_type_specific_payment_method_options_client eps?;
    Payment_method_options_fpx|Payment_intent_type_specific_payment_method_options_client fpx?;
    Payment_method_options_giropay|Payment_intent_type_specific_payment_method_options_client giropay?;
    Payment_method_options_grabpay|Payment_intent_type_specific_payment_method_options_client grabpay?;
    Payment_method_options_ideal|Payment_intent_type_specific_payment_method_options_client ideal?;
    Payment_method_options_interac_present|Payment_intent_type_specific_payment_method_options_client interac_present?;
    Payment_method_options_klarna|Payment_intent_type_specific_payment_method_options_client klarna?;
    Payment_method_options_konbini|Payment_intent_type_specific_payment_method_options_client konbini?;
    Payment_intent_payment_method_options_link|Payment_intent_type_specific_payment_method_options_client link?;
    Payment_intent_payment_method_options_mobilepay|Payment_intent_type_specific_payment_method_options_client mobilepay?;
    Payment_method_options_multibanco|Payment_intent_type_specific_payment_method_options_client multibanco?;
    Payment_method_options_oxxo|Payment_intent_type_specific_payment_method_options_client oxxo?;
    Payment_method_options_p24|Payment_intent_type_specific_payment_method_options_client p24?;
    Payment_method_options_paynow|Payment_intent_type_specific_payment_method_options_client paynow?;
    Payment_method_options_paypal|Payment_intent_type_specific_payment_method_options_client paypal?;
    Payment_method_options_pix|Payment_intent_type_specific_payment_method_options_client pix?;
    Payment_method_options_promptpay|Payment_intent_type_specific_payment_method_options_client promptpay?;
    Payment_method_options_revolut_pay|Payment_intent_type_specific_payment_method_options_client revolut_pay?;
    Payment_intent_payment_method_options_sepa_debit|Payment_intent_type_specific_payment_method_options_client sepa_debit?;
    Payment_method_options_sofort|Payment_intent_type_specific_payment_method_options_client sofort?;
    Payment_intent_payment_method_options_swish|Payment_intent_type_specific_payment_method_options_client swish?;
    Payment_method_options_twint|Payment_intent_type_specific_payment_method_options_client twint?;
    Payment_intent_payment_method_options_us_bank_account|Payment_intent_type_specific_payment_method_options_client us_bank_account?;
    Payment_method_options_wechat_pay|Payment_intent_type_specific_payment_method_options_client wechat_pay?;
    Payment_method_options_zip|Payment_intent_type_specific_payment_method_options_client zip?;
};

# Configuration overrides
public type process_config record {
    boolean enable_customer_cancellation?;
    boolean skip_tipping?;
    tipping_config tipping?;
};

# Represents the Queries record for the operation: GetPaymentLinks
public type GetPaymentLinksQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPaymentLinksQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return payment links that are active or inactive (e.g., pass `false` to list all inactive payment links).
    boolean active?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type financial_connections_sessions_bodyPermissionsItemsString "balances"|"ownership"|"payment_method"|"transactions";

public type personalization_design_deactivate_body record {|
    # Specifies which fields in the response should be expanded.
    personalization_design_deactivate_bodyExpandItemsString[] expand?;
|};

# Information about the company or business. This field is available for any `business_type`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
public type company_specs record {
    legal_entity_and_kyc_address_specs address?;
    japan_address_kana_specs address_kana?;
    japan_address_kanji_specs address_kanji?;
    boolean directors_provided?;
    boolean executives_provided?;
    @constraint:String {maxLength: 5000}
    string export_license_id?;
    @constraint:String {maxLength: 5000}
    string export_purpose_code?;
    @constraint:String {maxLength: 100}
    string name?;
    @constraint:String {maxLength: 100}
    string name_kana?;
    @constraint:String {maxLength: 100}
    string name_kanji?;
    boolean owners_provided?;
    company_ownership_declaration ownership_declaration?;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string registration_number?;
    ""|"free_zone_establishment"|"free_zone_llc"|"government_instrumentality"|"governmental_unit"|"incorporated_non_profit"|"incorporated_partnership"|"limited_liability_partnership"|"llc"|"multi_member_llc"|"private_company"|"private_corporation"|"private_partnership"|"public_company"|"public_corporation"|"public_partnership"|"registered_charity"|"single_member_llc"|"sole_establishment"|"sole_proprietorship"|"tax_exempt_government_instrumentality"|"unincorporated_association"|"unincorporated_non_profit"|"unincorporated_partnership" structure?;
    @constraint:String {maxLength: 5000}
    string tax_id?;
    @constraint:String {maxLength: 5000}
    string tax_id_registrar?;
    @constraint:String {maxLength: 5000}
    string vat_id?;
    verification_specs verification?;
};

public type mandate_options_param_1 record {
    ""|"paper" collection_method?;
};

# 
public type Refund_next_action_display_details record {
    Email_sent email_sent;
    # The expiry timestamp.
    int expires_at;
};

# Source mandate notifications should be created when a notification related to
# a source mandate must be sent to the payer. They will trigger a webhook or
# deliver an email to the customer.
public type Source_mandate_notification record {
    Source_mandate_notification_acss_debit_data acss_debit?;
    # A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the amount associated with the mandate notification. The amount is expressed in the currency of the underlying source. Required if the notification type is `debit_initiated`.
    int? amount?;
    Source_mandate_notification_bacs_debit_data bacs_debit?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "source_mandate_notification" 'object;
    # The reason of the mandate notification. Valid reasons are `mandate_confirmed` or `debit_initiated`.
    @constraint:String {maxLength: 5000}
    string reason;
    Source_mandate_notification_sepa_debit_data sepa_debit?;
    Source 'source;
    # The status of the mandate notification. Valid statuses are `pending` or `submitted`.
    @constraint:String {maxLength: 5000}
    string status;
    # The type of source this mandate notification is attached to. Should be the source type identifier code for the payment method, such as `three_d_secure`.
    @constraint:String {maxLength: 5000}
    string 'type;
};

@constraint:String {maxLength: 5000}
public type GetInvoicesQueriesExpandItemsString string;

public type Account_invoices_settingsDefaultaccounttaxidsItemsnull string|Tax_id;

# 
public type Setup_attempt_payment_method_details_card_wallet record {
    Payment_method_details_card_wallet_apple_pay apple_pay?;
    Payment_method_details_card_wallet_google_pay google_pay?;
    # The type of the card wallet, one of `apple_pay`, `google_pay`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
    "apple_pay"|"google_pay"|"link" 'type;
};

# Settings for automatic tax lookup for this invoice preview.
public type automatic_tax_param_1 record {
    boolean enabled;
    param liability?;
};

# 
public type Credit_note_tax_amount record {
    # The amount, in cents (or local equivalent), of the tax.
    int amount;
    # Whether this tax amount is inclusive or exclusive.
    boolean inclusive;
    # The tax rate that was applied to get this tax amount.
    string|Tax_rate tax_rate;
    # The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.
    "customer_exempt"|"not_collecting"|"not_subject_to_tax"|"not_supported"|"portion_product_exempt"|"portion_reduced_rated"|"portion_standard_rated"|"product_exempt"|"product_exempt_holiday"|"proportionally_rated"|"reduced_rated"|"reverse_charge"|"standard_rated"|"taxable_basis_reduced"|"zero_rated"? taxability_reason?;
    # The amount on which tax is calculated, in cents (or local equivalent).
    int? taxable_amount?;
};

# 
public type GelatoVerificationReportList record {
    Identity\.verification_report[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/identity/verification_reports`}
    string url;
};

# Settings for automatic tax lookup for this invoice.
public type automatic_tax_param_4 record {
    boolean enabled;
    param_3 liability?;
};

# 
public type Payment_pages_checkout_session_saved_payment_method_options record {
    # Uses the `allow_redisplay` value of each saved payment method to filter the set presented to a returning customer. By default, only saved payment methods with ’allow_redisplay: ‘always’ are shown in Checkout.
    ("always"|"limited"|"unspecified")[]? allow_redisplay_filters?;
    # Enable customers to choose if they wish to remove their saved payment methods. Disabled by default.
    "disabled"|"enabled"? payment_method_remove?;
    # Enable customers to choose if they wish to save their payment method for future use. Disabled by default.
    "disabled"|"enabled"? payment_method_save?;
};

# Settings for automatic tax lookup for this quote and resulting invoices and subscriptions.
public type automatic_tax_param_5 record {
    boolean enabled;
    param_3 liability?;
};

public type linked_account_options_param record {
    (linked_account_options_paramPermissionsItemsString)[] permissions?;
    ("balances"|"ownership"|"transactions")[] prefetch?;
};

public type automatic_tax_param_2 record {
    boolean enabled;
    param liability?;
};

public type automatic_tax_param_3 record {
    boolean enabled;
    param_2 liability?;
};

@constraint:String {maxLength: 5000}
public type GetTerminalLocationsLocationQueriesExpandItemsString string;

public type apps_secrets_bodyExpandItemsString string;

# 
public type Invoices_resource_invoice_tax_id record {
    # The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eu_oss_vat`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, or `unknown`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"unknown"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # The value of the tax ID.
    string? value?;
};

# Balance information for the FinancialAccount
public type Treasury_financial_accounts_resource_balance record {
    # Funds the user can spend right now.
    record {|int...;|} cash;
    # Funds not spendable yet, but will become available at a later time.
    record {|int...;|} inbound_pending;
    # Funds in the account, but not spendable because they are being held for pending outbound flows.
    record {|int...;|} outbound_pending;
};

public type current_period_start record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Treasury_outbound_payments_resource_returned_status record {
    # Reason for the return.
    "account_closed"|"account_frozen"|"bank_account_restricted"|"bank_ownership_changed"|"declined"|"incorrect_account_holder_name"|"invalid_account_number"|"invalid_currency"|"no_account"|"other" code;
    # The Transaction associated with this object.
    string|Treasury\.transaction 'transaction;
};

# Additional details on the FinancialAccount Features information.
public type Treasury_financial_accounts_resource_toggles_setting_status_details record {
    # Represents the reason why the status is `pending` or `restricted`.
    "activating"|"capability_not_requested"|"financial_account_closed"|"rejected_other"|"rejected_unsupported_business"|"requirements_past_due"|"requirements_pending_verification"|"restricted_by_platform"|"restricted_other" code;
    # Represents what the user should do, if anything, to activate the Feature.
    "contact_stripe"|"provide_information"|"remove_restriction"? resolution?;
    # The `platform_restrictions` that are restricting this Feature.
    "inbound_flows"|"outbound_flows" restriction?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryOutboundPaymentsIdQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetPaymentIntents
public type GetPaymentIntentsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPaymentIntentsQueriesExpandItemsString[] expand?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp or a dictionary with a number of different query options.
    created_23 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return PaymentIntents for the customer that this customer ID specifies.
    @constraint:String {maxLength: 5000}
    string customer?;
};

# 
public type TerminalLocationLocationList record {
    Terminal\.location[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/terminal/locations`}
    string url;
};

public type on_behalf_of string|"";

@constraint:String {maxLength: 5000}
public type GetApplicationFeesIdRefundsQueriesExpandItemsString string;

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_jp_bank_transfer record {
    # The name of the bank of the sender of the funding.
    string? sender_bank?;
    # The name of the bank branch of the sender of the funding.
    string? sender_branch?;
    # The full name of the sender, as supplied by the sending bank.
    string? sender_name?;
};

# 
public type Period record {
    # The end date of this usage period. All usage up to and including this point in time is included.
    int? end?;
    # The start date of this usage period. All usage after this point in time is included.
    int? 'start?;
};

# 
public type Payment_pages_checkout_session_after_expiration_recovery record {
    # Enables user redeemable promotion codes on the recovered Checkout Sessions. Defaults to `false`
    boolean allow_promotion_codes;
    # If `true`, a recovery url will be generated to recover this Checkout Session if it
    # expires before a transaction is completed. It will be attached to the
    # Checkout Session object upon expiration.
    boolean enabled;
    # The timestamp at which the recovery URL will expire.
    int? expires_at?;
    # URL that creates a new Checkout Session when clicked that is a copy of this expired Checkout Session
    string? url?;
};

public type inbound_transfers record {
    access_with_ach_details ach?;
};

# The reason(s) the personalization design was rejected.
public type rejection_reasons_param record {
    ("geographic_location"|"inappropriate"|"network_name"|"non_binary_image"|"non_fiat_currency"|"other"|"other_entity"|"promotional_material")[] card_logo?;
    ("geographic_location"|"inappropriate"|"network_name"|"non_fiat_currency"|"other"|"other_entity"|"promotional_material")[] carrier_text?;
};

public type invoice_update_lines_bodyExpandItemsString string;

# 
public type Destination_details_unimplemented record {
};

# 
public type Setup_intent_type_specific_payment_method_options_client record {
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

public type payouts_body record {|
    # A positive integer in cents representing how much to payout.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # The ID of a bank account or a card to send the payout to. If you don't provide a destination, we use the default external account for the specified currency.
    string destination?;
    # Specifies which fields in the response should be expanded.
    payouts_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The method used to send this payout, which is `standard` or `instant`. We support `instant` for payouts to debit cards and bank accounts in certain countries. Learn more about [bank support for Instant Payouts](https://stripe.com/docs/payouts/instant-payouts-banks).
    "instant"|"standard" method?;
    # The balance type of your Stripe balance to draw this payout from. Balances for different payment sources are kept separately. You can find the amounts with the Balances API. One of `bank_account`, `card`, or `fpx`.
    "bank_account"|"card"|"fpx" source_type?;
    # A string that displays on the recipient's bank or card statement (up to 22 characters). A `statement_descriptor` that's longer than 22 characters return an error. Most banks truncate this information and display it inconsistently. Some banks might not display it at all.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
|};

public type plans_plan_body record {|
    # Whether the plan is currently available for new subscriptions.
    boolean active?;
    # Specifies which fields in the response should be expanded.
    plans_plan_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # A brief description of the plan, hidden from customers.
    @constraint:String {maxLength: 5000}
    string nickname?;
    # The product the plan belongs to. This cannot be changed once it has been used in a subscription or subscription schedule.
    @constraint:String {maxLength: 5000}
    string product?;
    # Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
    int trial_period_days?;
|};

public type payouts_payout_body record {|
    # Specifies which fields in the response should be expanded.
    payouts_payout_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

public type secrets_delete_bodyExpandItemsString string;

# 
public type Account_treasury_settings record {
    Account_terms_of_service tos_acceptance?;
};

# 
public type Refund_destination_details_card record {
    # Value of the reference number assigned to the refund.
    @constraint:String {maxLength: 5000}
    string reference?;
    # Status of the reference number on the refund. This can be `pending`, `available` or `unavailable`.
    @constraint:String {maxLength: 5000}
    string reference_status?;
    # Type of the reference number assigned to the refund.
    @constraint:String {maxLength: 5000}
    string reference_type?;
    # The type of refund. This can be `refund`, `reversal`, or `pending`.
    "pending"|"refund"|"reversal" 'type;
};

# 
public type Payment_method_customer_balance record {
};

# 
public type Payment_method_bacs_debit record {
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # Sort code of the bank account. (e.g., `10-20-30`)
    string? sort_code?;
};

# Configures how this subscription behaves during the trial period.
public type Subscriptions_trials_resource_trial_settings record {
    Subscriptions_trials_resource_end_behavior end_behavior;
};

public type reader_cancel_action_bodyExpandItemsString string;

# 
public type Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_overcapture_overcapture record {
    # The maximum amount that can be captured.
    int maximum_amount_capturable;
    # Indicates whether or not the authorized amount can be over-captured.
    "available"|"unavailable" status;
};

# The shipping cost to reverse.
public type transaction_shipping_cost_reversal record {
    int amount;
    int amount_tax;
};

# 
public type Deleted_tax_id record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "tax_id" 'object;
};

# 
public type Payment_links_resource_completed_sessions record {
    # The current number of checkout sessions that have been completed on the payment link which count towards the `completed_sessions` restriction to be met.
    int count;
    # The maximum number of checkout sessions that can be completed for the `completed_sessions` restriction to be met.
    int 'limit;
};

# 
public type FileResourceFileLinkList record {
    # Details about each object.
    File_link[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/file_links`}
    string url;
};

# 
public type Setup_attempt_payment_method_details_sepa_debit record {
};

public type invoices_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetSubscriptionItemsSubscriptionItemUsageRecordSummariesQueriesExpandItemsString string;

public type payouts_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetQuotesQuotePdfQueriesExpandItemsString string;

# 
public type FeeRefundList record {
    # Details about each object.
    Fee_refund[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Treasury_outbound_payments_resource_outbound_payment_resource_status_transitions record {
    # Timestamp describing when an OutboundPayment changed status to `canceled`.
    int? canceled_at?;
    # Timestamp describing when an OutboundPayment changed status to `failed`.
    int? failed_at?;
    # Timestamp describing when an OutboundPayment changed status to `posted`.
    int? posted_at?;
    # Timestamp describing when an OutboundPayment changed status to `returned`.
    int? returned_at?;
};

# Represents the Queries record for the operation: GetCustomersCustomerDiscount
public type GetCustomersCustomerDiscountQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerDiscountQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetQuotesQuote
public type GetQuotesQuoteQueries record {
    # Specifies which fields in the response should be expanded.
    GetQuotesQuoteQueriesExpandItemsString[] expand?;
};

# 
public type Invoice_payment_method_options_us_bank_account_linked_account_options record {
    Invoice_payment_method_options_us_bank_account_linked_account_options_filters filters?;
    # The list of permissions to request. The `payment_method` permission must be included.
    ("balances"|"ownership"|"payment_method"|"transactions")[] permissions?;
    # Data features requested to be retrieved upon account creation.
    ("balances"|"ownership"|"transactions")[]? prefetch?;
};

public type Tax\.calculation record {
    int amount_total;
    string currency;
    string? customer?;
    Tax_product_resource_customer_details customer_details;
    int? expires_at?;
    string? id?;
    TaxProductResourceTaxCalculationLineItemList_1? line_items?;
    boolean livemode;
    "tax.calculation" 'object;
    Tax_product_resource_ship_from_details? ship_from_details?;
    Tax_product_resource_tax_calculation_shipping_cost? shipping_cost?;
    int tax_amount_exclusive;
    int tax_amount_inclusive;
    Tax_product_resource_tax_breakdown[] tax_breakdown;
    int tax_date;
};

# Represents the Queries record for the operation: GetTaxRates
public type GetTaxRatesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Optional flag to filter by tax rates that are inclusive (or those that are not inclusive).
    boolean inclusive?;
    # Specifies which fields in the response should be expanded.
    GetTaxRatesQueriesExpandItemsString[] expand?;
    # Optional range for filtering created date.
    created_40 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Optional flag to filter by tax rates that are either active or inactive (archived).
    boolean active?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountPersonsPersonQueriesExpandItemsString string;

public type payouts_features_param record {
    boolean edit_payout_schedule?;
    boolean external_account_collection?;
    boolean instant_payouts?;
    boolean standard_payouts?;
};

# 
public type Treasury_received_debits_resource_reversal_details record {
    # Time before which a ReceivedDebit can be reversed.
    int? deadline?;
    # Set if a ReceivedDebit can't be reversed.
    "already_reversed"|"deadline_passed"|"network_restricted"|"other"|"source_flow_restricted"? restricted_reason?;
};

# 
public type Climate_removals_location record {
    # The city where the supplier is located.
    string? city?;
    # Two-letter ISO code representing the country where the supplier is located.
    @constraint:String {maxLength: 5000}
    string country;
    # The geographic latitude where the supplier is located.
    decimal? latitude?;
    # The geographic longitude where the supplier is located.
    decimal? longitude?;
    # The state/county/province/region where the supplier is located.
    string? region?;
};

# 
public type Connect_embedded_payouts_config_claim record {
    # Whether the embedded component is enabled.
    boolean enabled;
    Connect_embedded_payouts_features features;
};

public type owner_params record {
    string account?;
    @constraint:String {maxLength: 5000}
    string customer?;
    "account"|"application"|"customer"|"self" 'type;
};

# 
public type Linked_account_options_us_bank_account record {
    Payment_flows_private_payment_methods_us_bank_account_linked_account_options_filters filters?;
    # The list of permissions to request. The `payment_method` permission must be included.
    ("balances"|"ownership"|"payment_method"|"transactions")[] permissions?;
    # Data features requested to be retrieved upon account creation.
    ("balances"|"ownership"|"transactions")[]? prefetch?;
    # For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.
    @constraint:String {maxLength: 5000}
    string return_url?;
};

# 
public type Payment_method_details_link record {
    # Two-letter ISO code representing the funding source country beneath the Link payment.
    # You could use this attribute to get a sense of international fees.
    string? country?;
};

# Represents the Queries record for the operation: GetRadarValueListItems
public type GetRadarValueListItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetRadarValueListItemsQueriesExpandItemsString[] expand?;
    # Only return items that were created during the given date interval.
    created_30 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Identifier for the parent value list this item belongs to.
    @constraint:String {maxLength: 5000}
    string value_list;
    # Return items belonging to the parent list whose value matches the specified value (using an "is like" match).
    @constraint:String {maxLength: 800}
    string value?;
};

public type invoiceitems_invoiceitem_body record {|
    # The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.
    int amount?;
    # An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.
    @constraint:String {maxLength: 5000}
    string description?;
    # Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items. Cannot be set to true for prorations.
    boolean discountable?;
    # The coupons, promotion codes & existing discounts which apply to the invoice item or invoice line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    invoiceitems_invoiceitem_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    period period?;
    # The ID of the price object. One of `price` or `price_data` is required.
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data price_data?;
    # Non-negative integer. The quantity of units for the invoice item.
    int quantity?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    string|"" tax_code?;
    # The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item. Pass an empty string to remove previously-defined tax rates.
    TaxratesItemsString[]|"" tax_rates?;
    # The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount.
    int unit_amount?;
    # Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.
    string unit_amount_decimal?;
|};

# 
public type Checkout_p24_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type configuration_item_params record {
    record {int usage_gte;}|"" billing_thresholds?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    record {|string...;|} metadata?;
    @constraint:String {maxLength: 5000}
    string price?;
    recurring_price_data price_data?;
    int quantity?;
    TaxratesItemsString[]|"" tax_rates?;
};

public type session_redact_bodyExpandItemsString string;

# 
public type Issuing_card_authorization_controls record {
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to allow. All other categories will be blocked. Cannot be set with `blocked_categories`.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? allowed_categories?;
    # Array of strings containing representing countries from which authorizations will be allowed. Authorizations from merchants in all other countries will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `blocked_merchant_countries`. Provide an empty value to unset this control.
    Issuing_card_authorization_controlsAllowedmerchantcountriesItemsString[]? allowed_merchant_countries?;
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to decline. All other categories will be allowed. Cannot be set with `allowed_categories`.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? blocked_categories?;
    # Array of strings containing representing countries from which authorizations will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `allowed_merchant_countries`. Provide an empty value to unset this control.
    Issuing_card_authorization_controlsBlockedmerchantcountriesItemsString[]? blocked_merchant_countries?;
    # Limit spending with amount-based rules that apply across any cards this card replaced (i.e., its `replacement_for` card and _that_ card's `replacement_for` card, up the chain).
    Issuing_card_spending_limit[]? spending_limits?;
    # Currency of the amounts within `spending_limits`. Always the same as the currency of the card.
    string? spending_limits_currency?;
};

# Parameters required for the redirect flow. Required if the source is authenticated by a redirect (`flow` is `redirect`).
public type redirect_params record {
    string return_url;
};

@constraint:String {maxLength: 5000}
public type GetTaxSettingsQueriesExpandItemsString string;

public type invoices_invoice_body record {|
    # The account tax IDs associated with the invoice. Only editable when the invoice is a draft.
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    # A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees).
    int application_fee_amount?;
    # Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice.
    boolean auto_advance?;
    automatic_tax_param_4 automatic_tax?;
    # Either `charge_automatically` or `send_invoice`. This field can be updated only on `draft` invoices.
    "charge_automatically"|"send_invoice" collection_method?;
    # A list of up to 4 custom fields to be displayed on the invoice. If a value for `custom_fields` is specified, the list specified will replace the existing custom field list on this invoice. Pass an empty string to remove previously-defined fields.
    record {string name; string value;}[]|"" custom_fields?;
    # The number of days from which the invoice is created until it is due. Only valid for invoices where `collection_method=send_invoice`. This field can only be updated on `draft` invoices.
    int days_until_due?;
    # ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.
    string|"" default_source?;
    # The tax rates that will apply to any line item that does not have `tax_rates` set. Pass an empty string to remove previously-defined tax rates.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.
    @constraint:String {maxLength: 1500}
    string description?;
    # The discounts that will apply to the invoice. Pass an empty string to remove previously-defined discounts.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # The date on which payment for this invoice is due. Only valid for invoices where `collection_method=send_invoice`. This field can only be updated on `draft` invoices.
    int due_date?;
    # The date when this invoice is in effect. Same as `finalized_at` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the invoice PDF and receipt.
    int|"" effective_at?;
    # Specifies which fields in the response should be expanded.
    invoices_invoice_bodyExpandItemsString[] expand?;
    # Footer to be displayed on the invoice.
    @constraint:String {maxLength: 5000}
    string footer?;
    param_1 issuer?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Set the number for this invoice. If no number is present then a number will be assigned automatically when the invoice is finalized. In many markets, regulations require invoices to be unique, sequential and / or gapless. You are responsible for ensuring this is true across all your different invoicing systems in the event that you edit the invoice number using our API. If you use only Stripe for your invoices and do not change invoice numbers, Stripe handles this aspect of compliance for you automatically.
    string|"" number?;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    string|"" on_behalf_of?;
    payment_settings_1 payment_settings?;
    rendering_param rendering?;
    # Settings for the cost of shipping for this invoice.
    record {string shipping_rate?; record {record {record {"business_day"|"day"|"hour"|"month"|"week" unit; int value;} maximum?; record {"business_day"|"day"|"hour"|"month"|"week" unit; int value;} minimum?;} delivery_estimate?; string display_name; record {int amount; string currency; record {|record {int amount; "exclusive"|"inclusive"|"unspecified" tax_behavior?;}...;|} currency_options?;} fixed_amount?; record {|string...;|} metadata?; "exclusive"|"inclusive"|"unspecified" tax_behavior?; string tax_code?; "fixed_amount" 'type?;} shipping_rate_data?;}|"" shipping_cost?;
    # Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string|"" phone?;}|"" shipping_details?;
    # Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice's charge. This will be unset if you POST an empty value.
    record {int amount?; string destination;}|"" transfer_data?;
|};

public type branding_settings_specs record {
    @constraint:String {maxLength: 5000}
    string icon?;
    @constraint:String {maxLength: 5000}
    string logo?;
    @constraint:String {maxLength: 5000}
    string primary_color?;
    @constraint:String {maxLength: 5000}
    string secondary_color?;
};

public type account_sessions_bodyExpandItemsString string;

public type source_verify_bodyValuesItemsString string;

public type tax_settings_body record {|
    defaults_param defaults?;
    # Specifies which fields in the response should be expanded.
    tax_settings_bodyExpandItemsString[] expand?;
    head_office_param head_office?;
|};

public type Terminal\.location record {
    Address address;
    string configuration_overrides?;
    string display_name;
    string id;
    boolean livemode;
    record {|string...;|} metadata;
    "terminal.location" 'object;
};

# The accounts that were collected as part of this Session.
public type BankConnectionsResourceLinkedAccountList_1 record {
    # Details about each object.
    Financial_connections\.account[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/financial_connections/accounts`}
    string url;
};

# Stripe users can accept [Apple Pay](/payments/apple-pay) in iOS applications in iOS 9 and later, and on the web in Safari starting with iOS 10 or macOS Sierra. There are no additional fees to process Apple Pay payments, and the [pricing](/pricing) is the same as other card transactions. Check this [page](https://stripe.com/docs/apple-pay) for more details.
public type payment_method_param_7 record {
    display_preference_param display_preference?;
};

# Apple Pay Later, a payment method for customers to buy now and pay later, gives your customers a way to split purchases into four installments across six weeks.
public type payment_method_param_8 record {
    display_preference_param display_preference?;
};

# 
public type Person_future_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Fields that need to be collected to keep the person's account enabled. If not collected by the account's `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash, and may immediately become `past_due`, but the account may also be given a grace period depending on the account's enablement state prior to transition.
    Person_future_requirementsCurrentlydueItemsString[] currently_due;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[] errors;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `future_requirements[current_deadline]` becomes set.
    Person_future_requirementsEventuallydueItemsString[] eventually_due;
    # Fields that weren't collected by the account's `requirements.current_deadline`. These fields need to be collected to enable the person's account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.
    Person_future_requirementsPastdueItemsString[] past_due;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`. Fields might appear in `eventually_due` or `currently_due` and in `pending_verification` if verification fails but another verification is still pending.
    Person_future_requirementsPendingverificationItemsString[] pending_verification;
};

# Stripe users in Australia can accept Bulk Electronic Clearing System (BECS) direct debit payments from customers with an Australian bank account. Check this [page](https://stripe.com/docs/payments/au-becs-debit) for more details.
public type payment_method_param_9 record {
    display_preference_param display_preference?;
};

# Each key of the dictionary represents a capability, and each capability
# maps to its settings (for example, whether it has been requested or not). Each
# capability is inactive until you have provided its specific
# requirements and Stripe has verified them. An account might have some
# of its requested capabilities be active and some be inactive.
# 
# Required when [account.controller.stripe_dashboard.type](/api/accounts/create#create_account-controller-dashboard-type)
# is `none`, which includes Custom accounts.
public type capabilities_param record {
    capability_param acss_debit_payments?;
    capability_param affirm_payments?;
    capability_param afterpay_clearpay_payments?;
    capability_param amazon_pay_payments?;
    capability_param au_becs_debit_payments?;
    capability_param bacs_debit_payments?;
    capability_param bancontact_payments?;
    capability_param bank_transfer_payments?;
    capability_param blik_payments?;
    capability_param boleto_payments?;
    capability_param card_issuing?;
    capability_param card_payments?;
    capability_param cartes_bancaires_payments?;
    capability_param cashapp_payments?;
    capability_param eps_payments?;
    capability_param fpx_payments?;
    capability_param gb_bank_transfer_payments?;
    capability_param giropay_payments?;
    capability_param grabpay_payments?;
    capability_param ideal_payments?;
    capability_param india_international_payments?;
    capability_param jcb_payments?;
    capability_param jp_bank_transfer_payments?;
    capability_param klarna_payments?;
    capability_param konbini_payments?;
    capability_param legacy_payments?;
    capability_param link_payments?;
    capability_param mobilepay_payments?;
    capability_param multibanco_payments?;
    capability_param mx_bank_transfer_payments?;
    capability_param oxxo_payments?;
    capability_param p24_payments?;
    capability_param paynow_payments?;
    capability_param promptpay_payments?;
    capability_param revolut_pay_payments?;
    capability_param sepa_bank_transfer_payments?;
    capability_param sepa_debit_payments?;
    capability_param sofort_payments?;
    capability_param swish_payments?;
    capability_param tax_reporting_us_1099_k?;
    capability_param tax_reporting_us_1099_misc?;
    capability_param transfers?;
    capability_param treasury?;
    capability_param twint_payments?;
    capability_param us_bank_account_ach_payments?;
    capability_param us_bank_transfer_payments?;
    capability_param zip_payments?;
};

# 
public type Issuing_network_token_mastercard record {
    # A unique reference ID from MasterCard to represent the card account number.
    @constraint:String {maxLength: 5000}
    string card_reference_id?;
    # The network-unique identifier for the token.
    @constraint:String {maxLength: 5000}
    string token_reference_id;
    # The ID of the entity requesting tokenization, specific to MasterCard.
    @constraint:String {maxLength: 5000}
    string token_requestor_id;
    # The name of the entity requesting tokenization, if known. This is directly provided from MasterCard.
    @constraint:String {maxLength: 5000}
    string token_requestor_name?;
};

# Details about the request forwarded to the destination endpoint.
public type Forwarded_request_details record {
    # The body payload to send to the destination endpoint.
    @constraint:String {maxLength: 5000}
    string body;
    # The headers to include in the forwarded request. Can be omitted if no additional headers (excluding Stripe-generated ones such as the Content-Type header) should be included.
    Forwarded_request_header[] headers;
    # The HTTP method used to call the destination endpoint.
    "POST" http_method;
};

# 
public type ListAccountCapability record {
    Capability[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Invoices_resource_status_transitions record {
    # The time that the invoice draft was finalized.
    int? finalized_at?;
    # The time that the invoice was marked uncollectible.
    int? marked_uncollectible_at?;
    # The time that the invoice was paid.
    int? paid_at?;
    # The time that the invoice was voided.
    int? voided_at?;
};

# Configure actions after a Checkout Session has expired.
public type after_expiration_params record {
    recovery_params recovery?;
};

# Represents the Queries record for the operation: GetWebhookEndpoints
public type GetWebhookEndpointsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetWebhookEndpointsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type subscription_cancel_at int|"";

public type invoices_bodyDefaulttaxratesItemsString string;

# 
public type Invoice_payment_method_options_card record {
    Invoice_installments_card installments?;
    # We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    "any"|"automatic"|"challenge"? request_three_d_secure?;
};

# Represents the Queries record for the operation: GetForwardingRequestsId
public type GetForwardingRequestsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetForwardingRequestsIdQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_transaction_fleet_cardholder_prompt_data record {
    # Driver ID.
    string? driver_id?;
    # Odometer reading.
    int? odometer?;
    # An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type.
    string? unspecified_id?;
    # User ID.
    string? user_id?;
    # Vehicle number.
    string? vehicle_number?;
};
