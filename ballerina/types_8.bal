// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;

public type Issuing\.settlement record {
    string bin;
    int clearing_date;
    int created;
    string currency;
    string id;
    int interchange_fees;
    boolean livemode;
    record {|string...;|} metadata;
    int net_total;
    "visa" network;
    int network_fees;
    string network_settlement_identifier;
    "issuing.settlement" 'object;
    string settlement_service;
    int transaction_count;
    int transaction_volume;
};

public type intent_increment_authorization_bodyExpandItemsString string;

# 
public type Payment_pages_checkout_session_payment_method_reuse_agreement record {
    # Determines the position and visibility of the payment method reuse agreement in the UI. When set to `auto`, Stripe's defaults will be used.
    # 
    # When set to `hidden`, the payment method reuse agreement text will always be hidden in the UI.
    "auto"|"hidden" position;
};

public type outbound_transfer_post_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetInvoicesSearchQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetInvoicesInvoiceLinesQueriesExpandItemsString string;

# The Kanji variation of the person's address (Japan only).
public type japan_address_kanji_specs_1 record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
    @constraint:String {maxLength: 5000}
    string town?;
};

# 
public type TaxRatesList record {
    Tax_rate[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/tax_rates`}
    string url;
};

# 
public type Invoice_setting_customer_setting record {
    # Default custom fields to be displayed on invoices for this customer.
    Invoice_setting_custom_field[]? custom_fields?;
    # ID of a payment method that's attached to the customer, to be used as the customer's default payment method for subscriptions and invoices.
    string|Payment_method? default_payment_method?;
    # Default footer to be displayed on invoices for this customer.
    string? footer?;
    # Default options for invoice PDF rendering for this customer.
    Invoice_setting_customer_rendering_options? rendering_options?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryFinancialAccountsQueriesExpandItemsString string;

public type authorization_expire_body record {|
    # Specifies which fields in the response should be expanded.
    authorization_expire_bodyExpandItemsString[] expand?;
|};

# Represents the Queries record for the operation: GetInvoicesUpcoming
public type GetInvoicesUpcomingQueries record {
    # A list of up to 20 subscription items, each with an attached price. This field has been deprecated and will be removed in a future API version. Use `subscription_details.items` instead.
    subscription_item_update_params[] subscription_items?;
    # List of invoice items to add or update in the upcoming invoice preview.
    invoice_item_preview_params[] invoice_items?;
    # For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.billing_cycle_anchor` instead.
    subscription_billing_cycle_anchor subscription_billing_cycle_anchor?;
    # The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_details.items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_details.items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.
    @constraint:String {maxLength: 5000}
    string subscription?;
    # The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.
    param_2 issuer?;
    # This simulates the subscription being canceled or expired immediately. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_now` instead.
    boolean subscription_cancel_now?;
    # Details about the customer you want to invoice or overrides for an existing customer. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
    customer_details_param_1 customer_details?;
    # Boolean indicating whether this subscription should cancel at the end of the current period. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at_period_end` instead.
    boolean subscription_cancel_at_period_end?;
    # The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the subscription or customer. This works for both coupons directly applied to an invoice and coupons applied to a subscription. Pass an empty string to avoid inheriting any discounts.
    discounts discounts?;
    # For paused subscriptions, setting `subscription_resume_at` to `now` will preview the invoice that will be generated if the subscription is resumed. This field has been deprecated and will be removed in a future API version. Use `subscription_details.resume_at` instead.
    "now" subscription_resume_at?;
    # Date a subscription is intended to start (can be future or past). This field has been deprecated and will be removed in a future API version. Use `subscription_details.start_date` instead.
    int subscription_start_date?;
    # The currency to preview this invoice in. Defaults to that of `customer` if not specified.
    string currency?;
    # If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period and within the current phase of the schedule backing this subscription, if the schedule exists. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_date` instead.
    int subscription_proration_date?;
    # The schedule creation or modification params to apply as a preview. Cannot be used with `subscription` or `subscription_` prefixed fields.
    schedule_details_params_1 schedule_details?;
    # The ID of the coupon to apply to this phase of the subscription schedule. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    on_behalf_of on_behalf_of?;
    # If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required. This field has been deprecated and will be removed in a future API version. Use `subscription_details.trial_end` instead.
    subscription_trial_end subscription_trial_end?;
    # The identifier of the schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.
    @constraint:String {maxLength: 5000}
    string schedule?;
    # Specifies which fields in the response should be expanded.
    GetInvoicesUpcomingQueriesExpandItemsString[] expand?;
    # Settings for automatic tax lookup for this invoice preview.
    automatic_tax_param_2 automatic_tax?;
    # The subscription creation or modification params to apply as a preview. Cannot be used with `schedule` or `schedule_details` fields.
    subscription_details_params_1 subscription_details?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at` instead.
    subscription_cancel_at subscription_cancel_at?;
    # If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set. This field has been deprecated and will be removed in a future API version. Use `subscription_details.default_tax_rates` instead.
    subscription_default_tax_rates subscription_default_tax_rates?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_behavior` instead.
    "always_invoice"|"create_prorations"|"none" subscription_proration_behavior?;
    # Customizes the types of values to include when calculating the invoice. Defaults to `next` if unspecified.
    "next"|"recurring" preview_mode?;
    # The identifier of the customer whose upcoming invoice you'd like to retrieve. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
    @constraint:String {maxLength: 5000}
    string customer?;
};

# 
public type AccountList record {
    Account[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/accounts`}
    string url;
};

public type sources_source_body record {|
    # Amount associated with the source.
    int amount?;
    # Specifies which fields in the response should be expanded.
    sources_source_bodyExpandItemsString[] expand?;
    mandate_params mandate?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    owner_1 owner?;
    order_params source_order?;
|};

# 
public type Billing_details record {
    # Billing address.
    Address? address?;
    # Email address.
    string? email?;
    # Full name.
    string? name?;
    # Billing phone number (including extension).
    string? phone?;
};

public type fleet_cardholder_prompt_data_specs record {
    @constraint:String {maxLength: 5000}
    string driver_id?;
    int odometer?;
    @constraint:String {maxLength: 5000}
    string unspecified_id?;
    @constraint:String {maxLength: 5000}
    string user_id?;
    @constraint:String {maxLength: 5000}
    string vehicle_number?;
};

@constraint:String {maxLength: 5000}
public type GetRadarValueListItemsQueriesExpandItemsString string;

# 
public type PaymentMethodDomainResourcePaymentMethodDomainList record {
    Payment_method_domain[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/payment_method_domains`}
    string url;
};

public type id_return_body record {|
    # Specifies which fields in the response should be expanded.
    id_return_bodyExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type PersonFullnamealiasesItemsString string;

public type tax_registrations_body record {|
    # Time at which the Tax Registration becomes active. It can be either `now` to indicate the current time, or a future timestamp measured in seconds since the Unix epoch.
    "now"|int active_from;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country;
    country_options country_options;
    # Specifies which fields in the response should be expanded.
    tax_registrations_bodyExpandItemsString[] expand?;
    # If set, the Tax Registration stops being active at this time. If not set, the Tax Registration will be active indefinitely. Timestamp measured in seconds since the Unix epoch.
    int expires_at?;
|};

public type treasury_received_debits_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetTaxCodes
public type GetTaxCodesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTaxCodesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

public type treasury_outbound_payments_body record {|
    # Amount (in cents) to be transferred.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the customer to whom the OutboundPayment is sent. Must match the Customer attached to the `destination_payment_method` passed in.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # The PaymentMethod to use as the payment instrument for the OutboundPayment. Exclusive with `destination_payment_method_data`.
    @constraint:String {maxLength: 5000}
    string destination_payment_method?;
    payment_method_data destination_payment_method_data?;
    payment_method_options_2 destination_payment_method_options?;
    end_user_details_params end_user_details?;
    # Specifies which fields in the response should be expanded.
    treasury_outbound_payments_bodyExpandItemsString[] expand?;
    # The FinancialAccount to pull funds from.
    string financial_account;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The description that appears on the receiving end for this OutboundPayment (for example, bank statement for external bank transfer). Maximum 10 characters for `ach` payments, 140 characters for `us_domestic_wire` payments, or 500 characters for `stripe` network transfers. The default value is "payment".
    @constraint:String {maxLength: 5000}
    string statement_descriptor?;
|};

# Verifications that Stripe performed on information that the cardholder provided to the merchant.
public type verification_data_specs record {
    "match"|"mismatch"|"not_provided" address_line1_check?;
    "match"|"mismatch"|"not_provided" address_postal_code_check?;
    authentication_exemption_specs authentication_exemption?;
    "match"|"mismatch"|"not_provided" cvc_check?;
    "match"|"mismatch"|"not_provided" expiry_check?;
    three_d_secure_specs three_d_secure?;
};

# Represents the Queries record for the operation: GetAccountsAccountCapabilitiesCapability
public type GetAccountsAccountCapabilitiesCapabilityQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountCapabilitiesCapabilityQueriesExpandItemsString[] expand?;
};

# 
public type Inbound_transfers_payment_method_details_us_bank_account record {
    # Account holder type: individual or company.
    "company"|"individual"? account_holder_type?;
    # Account type: checkings or savings. Defaults to checking if omitted.
    "checking"|"savings"? account_type?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    string|Mandate mandate?;
    # The network rails used. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.
    "ach" network;
    # Routing number of the bank account.
    string? routing_number?;
};

public type Deleted_external_account Deleted_bank_account|Deleted_card;

# Represents the Queries record for the operation: GetPromotionCodes
public type GetPromotionCodesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPromotionCodesQueriesExpandItemsString[] expand?;
    # Only return promotion codes that have this case-insensitive code.
    @constraint:String {maxLength: 5000}
    string code?;
    # Only return promotion codes for this coupon.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_28 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Filter promotion codes by whether they are active.
    boolean active?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return promotion codes that are restricted to this customer.
    @constraint:String {maxLength: 5000}
    string customer?;
};

public type subscriptions_body record {|
    # A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.
    add_invoice_item_entry[] add_invoice_items?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
    decimal|"" application_fee_percent?;
    automatic_tax_config_4 automatic_tax?;
    # For new subscriptions, a past timestamp to backdate the subscription's start date to. If set, the first invoice will contain a proration for the timespan between the start date and the current time. Can be combined with trials and the billing cycle anchor.
    int backdate_start_date?;
    # A future timestamp in UTC format to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). The anchor is the reference point that aligns future billing cycle dates. It sets the day of week for `week` intervals, the day of month for `month` and `year` intervals, and the month of year for `year` intervals.
    int billing_cycle_anchor?;
    billing_cycle_anchor_config_param billing_cycle_anchor_config?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.
    int cancel_at?;
    # Boolean indicating whether this subscription should cancel at the end of the current period.
    boolean cancel_at_period_end?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # The identifier of the customer to subscribe.
    @constraint:String {maxLength: 5000}
    string customer;
    # Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.
    int days_until_due?;
    # ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_source?;
    # The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    @constraint:String {maxLength: 500}
    string description?;
    # The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    subscriptions_bodyExpandItemsString[] expand?;
    invoice_settings_param_1 invoice_settings?;
    # A list of up to 20 subscription items, each with an attached price.
    subscription_item_create_params[] items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted.
    boolean off_session?;
    # The account on behalf of which to charge, for each of the subscription's invoices.
    string|"" on_behalf_of?;
    # Only applies to subscriptions with `collection_method=charge_automatically`.
    # 
    # Use `allow_incomplete` to create Subscriptions with `status=incomplete` if the first invoice can't be paid. Creating Subscriptions with this status allows you to manage scenarios where additional customer actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    # 
    # Use `default_incomplete` to create Subscriptions with `status=incomplete` when the first invoice requires payment, otherwise start as active. Subscriptions transition to `status=active` when successfully confirming the PaymentIntent on the first invoice. This allows simpler management of scenarios where additional customer actions are needed to pay a subscription’s invoice, such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the PaymentIntent is not confirmed within 23 hours Subscriptions transition to `status=incomplete_expired`, which is a terminal state.
    # 
    # Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice can't be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further customer action is needed, this parameter doesn't create a Subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
    # 
    # `pending_if_incomplete` is only used with updates and cannot be passed when creating a Subscription.
    # 
    # Subscriptions with `collection_method=send_invoice` are automatically activated regardless of the first Invoice status.
    "allow_incomplete"|"default_incomplete"|"error_if_incomplete"|"pending_if_incomplete" payment_behavior?;
    payment_settings payment_settings?;
    # Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.
    record {"day"|"month"|"week"|"year" interval; int interval_count?;}|"" pending_invoice_item_interval?;
    # The ID of a promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) resulting from the `billing_cycle_anchor`. If no value is passed, the default is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    transfer_data_specs_3 transfer_data?;
    # Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    "now"|int trial_end?;
    # Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    boolean trial_from_plan?;
    # Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    int trial_period_days?;
    trial_settings_config_1 trial_settings?;
|};

public type subscription_items_item_body record {|
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds.
    record {int usage_gte;}|"" billing_thresholds?;
    # The coupons to redeem into discounts for the subscription item.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    subscription_items_item_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted.
    boolean off_session?;
    # Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    # 
    # Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.
    # 
    # Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).
    # 
    # Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
    "allow_incomplete"|"default_incomplete"|"error_if_incomplete"|"pending_if_incomplete" payment_behavior?;
    # The ID of the price object. One of `price` or `price_data` is required. When changing a subscription item's price, `quantity` is set to 1 unless a `quantity` parameter is provided.
    @constraint:String {maxLength: 5000}
    string price?;
    recurring_price_data_2 price_data?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    # If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.
    int proration_date?;
    # The quantity you'd like to apply to the subscription item you're creating.
    int quantity?;
    # A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates.
    TaxratesItemsString[]|"" tax_rates?;
|};

# Represents the Queries record for the operation: GetApplicationFeesId
public type GetApplicationFeesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetApplicationFeesIdQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_transaction_fleet_non_fuel_price_data record {
    # Gross non-fuel amount that should equal the sum of the line items, inclusive of taxes.
    string? gross_amount_decimal?;
};

# Settings that restrict the usage of a payment link.
public type restrictions_params record {
    completed_sessions_params completed_sessions;
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer record {
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer eu_bank_transfer?;
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_gb_bank_transfer gb_bank_transfer?;
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_jp_bank_transfer jp_bank_transfer?;
    # The user-supplied reference field on the bank transfer.
    string? reference?;
    # The funding method type used to fund the customer balance. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
    "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer" 'type;
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_us_bank_transfer us_bank_transfer?;
};

public type payout_settings_specs record {
    boolean debit_negative_balances?;
    transfer_schedule_specs schedule?;
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
};

# This hash contains details about the customer acceptance of the Mandate.
public type Confirmation_tokens_resource_mandate_data_resource_customer_acceptance record {
    # If this is a Mandate accepted online, this hash contains details about the online acceptance.
    Confirmation_tokens_resource_mandate_data_resource_customer_acceptance_resource_online? online?;
    # The type of customer acceptance information included with the Mandate.
    @constraint:String {maxLength: 5000}
    string 'type;
};

# 
public type Card_generated_from_payment_method_details record {
    Payment_method_details_card_present card_present?;
    # The type of payment method transaction-specific details from the transaction that generated this `card` payment method. Always `card_present`.
    @constraint:String {maxLength: 5000}
    string 'type;
};

public type subscription_item_usage_records_body record {|
    # Valid values are `increment` (default) or `set`. When using `increment` the specified `quantity` will be added to the usage at the specified timestamp. The `set` action will overwrite the usage quantity at that timestamp. If the subscription has [billing thresholds](https://stripe.com/docs/api/subscriptions/object#subscription_object-billing_thresholds), `increment` is the only allowed value.
    "increment"|"set" action?;
    # Specifies which fields in the response should be expanded.
    subscription_item_usage_records_bodyExpandItemsString[] expand?;
    # The usage quantity for the specified timestamp.
    int quantity;
    # The timestamp for the usage event. This timestamp must be within the current billing period of the subscription of the provided `subscription_item`, and must not be in the future. When passing `"now"`, Stripe records usage for the current time. Default is `"now"` if a value is not provided.
    "now"|int timestamp?;
|};

# 
public type Dispute_payment_method_details record {
    Dispute_payment_method_details_card card?;
    Dispute_payment_method_details_klarna klarna?;
    Dispute_payment_method_details_paypal paypal?;
    # Payment method type.
    "card"|"klarna"|"paypal" 'type;
};

@constraint:String {maxLength: 5000}
public type GetIssuingAuthorizationsAuthorizationQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetWebhookEndpointsWebhookEndpoint
public type GetWebhookEndpointsWebhookEndpointQueries record {
    # Specifies which fields in the response should be expanded.
    GetWebhookEndpointsWebhookEndpointQueriesExpandItemsString[] expand?;
};

# You can now model subscriptions more flexibly using the [Prices API](https://stripe.com/docs/api#prices). It replaces the Plans API and is backwards compatible to simplify your migration.
# 
# Plans define the base price, currency, and billing cycle for recurring purchases of products.
# [Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and plans help you track pricing. Different physical goods or levels of service should be represented by products, and pricing options should be represented by plans. This approach lets you change prices without having to change your provisioning scheme.
# 
# For example, you might have a single "gold" product that has plans for $10/month, $100/year, €9/month, and €90/year.
# 
# Related guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription) and more about [products and prices](https://stripe.com/docs/products-prices/overview).
public type Plan record {
    # Whether the plan can be used for new purchases.
    boolean active;
    # Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.
    "last_during_period"|"last_ever"|"max"|"sum"? aggregate_usage?;
    # The unit amount in cents (or local equivalent) to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.
    int? amount?;
    # The unit amount in cents (or local equivalent) to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.
    string? amount_decimal?;
    # Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.
    "per_unit"|"tiered" billing_scheme;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.
    "day"|"month"|"week"|"year" interval;
    # The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.
    int interval_count;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # The meter tracking the usage of a metered price
    string? meter?;
    # A brief description of the plan, hidden from customers.
    string? nickname?;
    # String representing the object's type. Objects of the same type share the same value.
    "plan" 'object;
    # The product whose pricing this plan determines.
    string|Product|Deleted_product? product?;
    # Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    Plan_tier[] tiers?;
    # Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.
    "graduated"|"volume"? tiers_mode?;
    # Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.
    Transform_usage? transform_usage?;
    # Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
    int? trial_period_days?;
    # Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.
    "licensed"|"metered" usage_type;
};

public type add_invoice_item_entry record {
    discounts_data_param[] discounts?;
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data_with_negative_amounts price_data?;
    int quantity?;
    TaxratesItemsString[]|"" tax_rates?;
};

# 
public type Payment_method_bancontact record {
};

public type effective_at record {int gt?; int gte?; int lt?; int lte?;}|int;

# The business information shown to customers in the portal.
public type business_profile_create_param record {
    string|"" headline?;
    string privacy_policy_url?;
    string terms_of_service_url?;
};

# 
public type Payment_intent_payment_method_options record {
    Payment_intent_payment_method_options_acss_debit|Payment_intent_type_specific_payment_method_options_client acss_debit?;
    Payment_method_options_affirm|Payment_intent_type_specific_payment_method_options_client affirm?;
    Payment_method_options_afterpay_clearpay|Payment_intent_type_specific_payment_method_options_client afterpay_clearpay?;
    Payment_method_options_alipay|Payment_intent_type_specific_payment_method_options_client alipay?;
    Payment_method_options_amazon_pay|Payment_intent_type_specific_payment_method_options_client amazon_pay?;
    Payment_intent_payment_method_options_au_becs_debit|Payment_intent_type_specific_payment_method_options_client au_becs_debit?;
    Payment_method_options_bacs_debit|Payment_intent_type_specific_payment_method_options_client bacs_debit?;
    Payment_method_options_bancontact|Payment_intent_type_specific_payment_method_options_client bancontact?;
    Payment_intent_payment_method_options_blik|Payment_intent_type_specific_payment_method_options_client blik?;
    Payment_method_options_boleto|Payment_intent_type_specific_payment_method_options_client boleto?;
    Payment_intent_payment_method_options_card|Payment_intent_type_specific_payment_method_options_client card?;
    Payment_method_options_card_present|Payment_intent_type_specific_payment_method_options_client card_present?;
    Payment_method_options_cashapp|Payment_intent_type_specific_payment_method_options_client cashapp?;
    Payment_method_options_customer_balance|Payment_intent_type_specific_payment_method_options_client customer_balance?;
    Payment_intent_payment_method_options_eps|Payment_intent_type_specific_payment_method_options_client eps?;
    Payment_method_options_fpx|Payment_intent_type_specific_payment_method_options_client fpx?;
    Payment_method_options_giropay|Payment_intent_type_specific_payment_method_options_client giropay?;
    Payment_method_options_grabpay|Payment_intent_type_specific_payment_method_options_client grabpay?;
    Payment_method_options_ideal|Payment_intent_type_specific_payment_method_options_client ideal?;
    Payment_method_options_interac_present|Payment_intent_type_specific_payment_method_options_client interac_present?;
    Payment_method_options_klarna|Payment_intent_type_specific_payment_method_options_client klarna?;
    Payment_method_options_konbini|Payment_intent_type_specific_payment_method_options_client konbini?;
    Payment_intent_payment_method_options_link|Payment_intent_type_specific_payment_method_options_client link?;
    Payment_intent_payment_method_options_mobilepay|Payment_intent_type_specific_payment_method_options_client mobilepay?;
    Payment_method_options_multibanco|Payment_intent_type_specific_payment_method_options_client multibanco?;
    Payment_method_options_oxxo|Payment_intent_type_specific_payment_method_options_client oxxo?;
    Payment_method_options_p24|Payment_intent_type_specific_payment_method_options_client p24?;
    Payment_method_options_paynow|Payment_intent_type_specific_payment_method_options_client paynow?;
    Payment_method_options_paypal|Payment_intent_type_specific_payment_method_options_client paypal?;
    Payment_method_options_pix|Payment_intent_type_specific_payment_method_options_client pix?;
    Payment_method_options_promptpay|Payment_intent_type_specific_payment_method_options_client promptpay?;
    Payment_method_options_revolut_pay|Payment_intent_type_specific_payment_method_options_client revolut_pay?;
    Payment_intent_payment_method_options_sepa_debit|Payment_intent_type_specific_payment_method_options_client sepa_debit?;
    Payment_method_options_sofort|Payment_intent_type_specific_payment_method_options_client sofort?;
    Payment_intent_payment_method_options_swish|Payment_intent_type_specific_payment_method_options_client swish?;
    Payment_method_options_twint|Payment_intent_type_specific_payment_method_options_client twint?;
    Payment_intent_payment_method_options_us_bank_account|Payment_intent_type_specific_payment_method_options_client us_bank_account?;
    Payment_method_options_wechat_pay|Payment_intent_type_specific_payment_method_options_client wechat_pay?;
    Payment_method_options_zip|Payment_intent_type_specific_payment_method_options_client zip?;
};

# Configuration overrides
public type process_config record {
    boolean enable_customer_cancellation?;
    boolean skip_tipping?;
    tipping_config tipping?;
};

# Represents the Queries record for the operation: GetPaymentLinks
public type GetPaymentLinksQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPaymentLinksQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return payment links that are active or inactive (e.g., pass `false` to list all inactive payment links).
    boolean active?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type financial_connections_sessions_bodyPermissionsItemsString "balances"|"ownership"|"payment_method"|"transactions";

public type personalization_design_deactivate_body record {|
    # Specifies which fields in the response should be expanded.
    personalization_design_deactivate_bodyExpandItemsString[] expand?;
|};

# Information about the company or business. This field is available for any `business_type`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
public type company_specs record {
    legal_entity_and_kyc_address_specs address?;
    japan_address_kana_specs address_kana?;
    japan_address_kanji_specs address_kanji?;
    boolean directors_provided?;
    boolean executives_provided?;
    @constraint:String {maxLength: 5000}
    string export_license_id?;
    @constraint:String {maxLength: 5000}
    string export_purpose_code?;
    @constraint:String {maxLength: 100}
    string name?;
    @constraint:String {maxLength: 100}
    string name_kana?;
    @constraint:String {maxLength: 100}
    string name_kanji?;
    boolean owners_provided?;
    company_ownership_declaration ownership_declaration?;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string registration_number?;
    ""|"free_zone_establishment"|"free_zone_llc"|"government_instrumentality"|"governmental_unit"|"incorporated_non_profit"|"incorporated_partnership"|"limited_liability_partnership"|"llc"|"multi_member_llc"|"private_company"|"private_corporation"|"private_partnership"|"public_company"|"public_corporation"|"public_partnership"|"registered_charity"|"single_member_llc"|"sole_establishment"|"sole_proprietorship"|"tax_exempt_government_instrumentality"|"unincorporated_association"|"unincorporated_non_profit"|"unincorporated_partnership" structure?;
    @constraint:String {maxLength: 5000}
    string tax_id?;
    @constraint:String {maxLength: 5000}
    string tax_id_registrar?;
    @constraint:String {maxLength: 5000}
    string vat_id?;
    verification_specs verification?;
};

public type mandate_options_param_1 record {
    ""|"paper" collection_method?;
};

# 
public type Refund_next_action_display_details record {
    Email_sent email_sent;
    # The expiry timestamp.
    int expires_at;
};

# Source mandate notifications should be created when a notification related to
# a source mandate must be sent to the payer. They will trigger a webhook or
# deliver an email to the customer.
public type Source_mandate_notification record {
    Source_mandate_notification_acss_debit_data acss_debit?;
    # A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the amount associated with the mandate notification. The amount is expressed in the currency of the underlying source. Required if the notification type is `debit_initiated`.
    int? amount?;
    Source_mandate_notification_bacs_debit_data bacs_debit?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "source_mandate_notification" 'object;
    # The reason of the mandate notification. Valid reasons are `mandate_confirmed` or `debit_initiated`.
    @constraint:String {maxLength: 5000}
    string reason;
    Source_mandate_notification_sepa_debit_data sepa_debit?;
    Source 'source;
    # The status of the mandate notification. Valid statuses are `pending` or `submitted`.
    @constraint:String {maxLength: 5000}
    string status;
    # The type of source this mandate notification is attached to. Should be the source type identifier code for the payment method, such as `three_d_secure`.
    @constraint:String {maxLength: 5000}
    string 'type;
};

@constraint:String {maxLength: 5000}
public type GetInvoicesQueriesExpandItemsString string;

public type Account_invoices_settingsDefaultaccounttaxidsItemsnull string|Tax_id;

# 
public type Setup_attempt_payment_method_details_card_wallet record {
    Payment_method_details_card_wallet_apple_pay apple_pay?;
    Payment_method_details_card_wallet_google_pay google_pay?;
    # The type of the card wallet, one of `apple_pay`, `google_pay`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
    "apple_pay"|"google_pay"|"link" 'type;
};

# Settings for automatic tax lookup for this invoice preview.
public type automatic_tax_param_1 record {
    boolean enabled;
    param liability?;
};

# 
public type Credit_note_tax_amount record {
    # The amount, in cents (or local equivalent), of the tax.
    int amount;
    # Whether this tax amount is inclusive or exclusive.
    boolean inclusive;
    # The tax rate that was applied to get this tax amount.
    string|Tax_rate tax_rate;
    # The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.
    "customer_exempt"|"not_collecting"|"not_subject_to_tax"|"not_supported"|"portion_product_exempt"|"portion_reduced_rated"|"portion_standard_rated"|"product_exempt"|"product_exempt_holiday"|"proportionally_rated"|"reduced_rated"|"reverse_charge"|"standard_rated"|"taxable_basis_reduced"|"zero_rated"? taxability_reason?;
    # The amount on which tax is calculated, in cents (or local equivalent).
    int? taxable_amount?;
};

# 
public type GelatoVerificationReportList record {
    Identity\.verification_report[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/identity/verification_reports`}
    string url;
};

# Settings for automatic tax lookup for this invoice.
public type automatic_tax_param_4 record {
    boolean enabled;
    param_3 liability?;
};

# 
public type Payment_pages_checkout_session_saved_payment_method_options record {
    # Uses the `allow_redisplay` value of each saved payment method to filter the set presented to a returning customer. By default, only saved payment methods with ’allow_redisplay: ‘always’ are shown in Checkout.
    ("always"|"limited"|"unspecified")[]? allow_redisplay_filters?;
    # Enable customers to choose if they wish to remove their saved payment methods. Disabled by default.
    "disabled"|"enabled"? payment_method_remove?;
    # Enable customers to choose if they wish to save their payment method for future use. Disabled by default.
    "disabled"|"enabled"? payment_method_save?;
};

# Settings for automatic tax lookup for this quote and resulting invoices and subscriptions.
public type automatic_tax_param_5 record {
    boolean enabled;
    param_3 liability?;
};

public type linked_account_options_param record {
    (linked_account_options_paramPermissionsItemsString)[] permissions?;
    ("balances"|"ownership"|"transactions")[] prefetch?;
};

public type automatic_tax_param_2 record {
    boolean enabled;
    param liability?;
};

public type automatic_tax_param_3 record {
    boolean enabled;
    param_2 liability?;
};

@constraint:String {maxLength: 5000}
public type GetTerminalLocationsLocationQueriesExpandItemsString string;

public type apps_secrets_bodyExpandItemsString string;

# 
public type Invoices_resource_invoice_tax_id record {
    # The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eu_oss_vat`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, or `unknown`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"unknown"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # The value of the tax ID.
    string? value?;
};

# Balance information for the FinancialAccount
public type Treasury_financial_accounts_resource_balance record {
    # Funds the user can spend right now.
    record {|int...;|} cash;
    # Funds not spendable yet, but will become available at a later time.
    record {|int...;|} inbound_pending;
    # Funds in the account, but not spendable because they are being held for pending outbound flows.
    record {|int...;|} outbound_pending;
};

public type current_period_start record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Treasury_outbound_payments_resource_returned_status record {
    # Reason for the return.
    "account_closed"|"account_frozen"|"bank_account_restricted"|"bank_ownership_changed"|"declined"|"incorrect_account_holder_name"|"invalid_account_number"|"invalid_currency"|"no_account"|"other" code;
    # The Transaction associated with this object.
    string|Treasury\.transaction 'transaction;
};

# Additional details on the FinancialAccount Features information.
public type Treasury_financial_accounts_resource_toggles_setting_status_details record {
    # Represents the reason why the status is `pending` or `restricted`.
    "activating"|"capability_not_requested"|"financial_account_closed"|"rejected_other"|"rejected_unsupported_business"|"requirements_past_due"|"requirements_pending_verification"|"restricted_by_platform"|"restricted_other" code;
    # Represents what the user should do, if anything, to activate the Feature.
    "contact_stripe"|"provide_information"|"remove_restriction"? resolution?;
    # The `platform_restrictions` that are restricting this Feature.
    "inbound_flows"|"outbound_flows" restriction?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryOutboundPaymentsIdQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetPaymentIntents
public type GetPaymentIntentsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPaymentIntentsQueriesExpandItemsString[] expand?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp or a dictionary with a number of different query options.
    created_23 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return PaymentIntents for the customer that this customer ID specifies.
    @constraint:String {maxLength: 5000}
    string customer?;
};

# 
public type TerminalLocationLocationList record {
    Terminal\.location[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/terminal/locations`}
    string url;
};

public type on_behalf_of string|"";

@constraint:String {maxLength: 5000}
public type GetApplicationFeesIdRefundsQueriesExpandItemsString string;

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_jp_bank_transfer record {
    # The name of the bank of the sender of the funding.
    string? sender_bank?;
    # The name of the bank branch of the sender of the funding.
    string? sender_branch?;
    # The full name of the sender, as supplied by the sending bank.
    string? sender_name?;
};

# 
public type Period record {
    # The end date of this usage period. All usage up to and including this point in time is included.
    int? end?;
    # The start date of this usage period. All usage after this point in time is included.
    int? 'start?;
};

# 
public type Payment_pages_checkout_session_after_expiration_recovery record {
    # Enables user redeemable promotion codes on the recovered Checkout Sessions. Defaults to `false`
    boolean allow_promotion_codes;
    # If `true`, a recovery url will be generated to recover this Checkout Session if it
    # expires before a transaction is completed. It will be attached to the
    # Checkout Session object upon expiration.
    boolean enabled;
    # The timestamp at which the recovery URL will expire.
    int? expires_at?;
    # URL that creates a new Checkout Session when clicked that is a copy of this expired Checkout Session
    string? url?;
};

public type inbound_transfers record {
    access_with_ach_details ach?;
};

# The reason(s) the personalization design was rejected.
public type rejection_reasons_param record {
    ("geographic_location"|"inappropriate"|"network_name"|"non_binary_image"|"non_fiat_currency"|"other"|"other_entity"|"promotional_material")[] card_logo?;
    ("geographic_location"|"inappropriate"|"network_name"|"non_fiat_currency"|"other"|"other_entity"|"promotional_material")[] carrier_text?;
};

public type invoice_update_lines_bodyExpandItemsString string;

# 
public type Destination_details_unimplemented record {
};

# 
public type Setup_intent_type_specific_payment_method_options_client record {
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

public type payouts_body record {|
    # A positive integer in cents representing how much to payout.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # The ID of a bank account or a card to send the payout to. If you don't provide a destination, we use the default external account for the specified currency.
    string destination?;
    # Specifies which fields in the response should be expanded.
    payouts_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The method used to send this payout, which is `standard` or `instant`. We support `instant` for payouts to debit cards and bank accounts in certain countries. Learn more about [bank support for Instant Payouts](https://stripe.com/docs/payouts/instant-payouts-banks).
    "instant"|"standard" method?;
    # The balance type of your Stripe balance to draw this payout from. Balances for different payment sources are kept separately. You can find the amounts with the Balances API. One of `bank_account`, `card`, or `fpx`.
    "bank_account"|"card"|"fpx" source_type?;
    # A string that displays on the recipient's bank or card statement (up to 22 characters). A `statement_descriptor` that's longer than 22 characters return an error. Most banks truncate this information and display it inconsistently. Some banks might not display it at all.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
|};

public type plans_plan_body record {|
    # Whether the plan is currently available for new subscriptions.
    boolean active?;
    # Specifies which fields in the response should be expanded.
    plans_plan_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # A brief description of the plan, hidden from customers.
    @constraint:String {maxLength: 5000}
    string nickname?;
    # The product the plan belongs to. This cannot be changed once it has been used in a subscription or subscription schedule.
    @constraint:String {maxLength: 5000}
    string product?;
    # Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
    int trial_period_days?;
|};

public type payouts_payout_body record {|
    # Specifies which fields in the response should be expanded.
    payouts_payout_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

public type secrets_delete_bodyExpandItemsString string;

# 
public type Account_treasury_settings record {
    Account_terms_of_service tos_acceptance?;
};

# 
public type Refund_destination_details_card record {
    # Value of the reference number assigned to the refund.
    @constraint:String {maxLength: 5000}
    string reference?;
    # Status of the reference number on the refund. This can be `pending`, `available` or `unavailable`.
    @constraint:String {maxLength: 5000}
    string reference_status?;
    # Type of the reference number assigned to the refund.
    @constraint:String {maxLength: 5000}
    string reference_type?;
    # The type of refund. This can be `refund`, `reversal`, or `pending`.
    "pending"|"refund"|"reversal" 'type;
};

# 
public type Payment_method_customer_balance record {
};

# 
public type Payment_method_bacs_debit record {
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # Sort code of the bank account. (e.g., `10-20-30`)
    string? sort_code?;
};

# Configures how this subscription behaves during the trial period.
public type Subscriptions_trials_resource_trial_settings record {
    Subscriptions_trials_resource_end_behavior end_behavior;
};

public type reader_cancel_action_bodyExpandItemsString string;

# 
public type Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_overcapture_overcapture record {
    # The maximum amount that can be captured.
    int maximum_amount_capturable;
    # Indicates whether or not the authorized amount can be over-captured.
    "available"|"unavailable" status;
};

# The shipping cost to reverse.
public type transaction_shipping_cost_reversal record {
    int amount;
    int amount_tax;
};

# 
public type Deleted_tax_id record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "tax_id" 'object;
};

# 
public type Payment_links_resource_completed_sessions record {
    # The current number of checkout sessions that have been completed on the payment link which count towards the `completed_sessions` restriction to be met.
    int count;
    # The maximum number of checkout sessions that can be completed for the `completed_sessions` restriction to be met.
    int 'limit;
};

# 
public type FileResourceFileLinkList record {
    # Details about each object.
    File_link[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/file_links`}
    string url;
};

# 
public type Setup_attempt_payment_method_details_sepa_debit record {
};

public type invoices_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetSubscriptionItemsSubscriptionItemUsageRecordSummariesQueriesExpandItemsString string;

public type payouts_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetQuotesQuotePdfQueriesExpandItemsString string;

# 
public type FeeRefundList record {
    # Details about each object.
    Fee_refund[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Treasury_outbound_payments_resource_outbound_payment_resource_status_transitions record {
    # Timestamp describing when an OutboundPayment changed status to `canceled`.
    int? canceled_at?;
    # Timestamp describing when an OutboundPayment changed status to `failed`.
    int? failed_at?;
    # Timestamp describing when an OutboundPayment changed status to `posted`.
    int? posted_at?;
    # Timestamp describing when an OutboundPayment changed status to `returned`.
    int? returned_at?;
};

# Represents the Queries record for the operation: GetCustomersCustomerDiscount
public type GetCustomersCustomerDiscountQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerDiscountQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetQuotesQuote
public type GetQuotesQuoteQueries record {
    # Specifies which fields in the response should be expanded.
    GetQuotesQuoteQueriesExpandItemsString[] expand?;
};

# 
public type Invoice_payment_method_options_us_bank_account_linked_account_options record {
    Invoice_payment_method_options_us_bank_account_linked_account_options_filters filters?;
    # The list of permissions to request. The `payment_method` permission must be included.
    ("balances"|"ownership"|"payment_method"|"transactions")[] permissions?;
    # Data features requested to be retrieved upon account creation.
    ("balances"|"ownership"|"transactions")[]? prefetch?;
};

public type Tax\.calculation record {
    int amount_total;
    string currency;
    string? customer?;
    Tax_product_resource_customer_details customer_details;
    int? expires_at?;
    string? id?;
    TaxProductResourceTaxCalculationLineItemList_1? line_items?;
    boolean livemode;
    "tax.calculation" 'object;
    Tax_product_resource_ship_from_details? ship_from_details?;
    Tax_product_resource_tax_calculation_shipping_cost? shipping_cost?;
    int tax_amount_exclusive;
    int tax_amount_inclusive;
    Tax_product_resource_tax_breakdown[] tax_breakdown;
    int tax_date;
};

# Represents the Queries record for the operation: GetTaxRates
public type GetTaxRatesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Optional flag to filter by tax rates that are inclusive (or those that are not inclusive).
    boolean inclusive?;
    # Specifies which fields in the response should be expanded.
    GetTaxRatesQueriesExpandItemsString[] expand?;
    # Optional range for filtering created date.
    created_40 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Optional flag to filter by tax rates that are either active or inactive (archived).
    boolean active?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountPersonsPersonQueriesExpandItemsString string;

public type payouts_features_param record {
    boolean edit_payout_schedule?;
    boolean external_account_collection?;
    boolean instant_payouts?;
    boolean standard_payouts?;
};

# 
public type Treasury_received_debits_resource_reversal_details record {
    # Time before which a ReceivedDebit can be reversed.
    int? deadline?;
    # Set if a ReceivedDebit can't be reversed.
    "already_reversed"|"deadline_passed"|"network_restricted"|"other"|"source_flow_restricted"? restricted_reason?;
};

# 
public type Climate_removals_location record {
    # The city where the supplier is located.
    string? city?;
    # Two-letter ISO code representing the country where the supplier is located.
    @constraint:String {maxLength: 5000}
    string country;
    # The geographic latitude where the supplier is located.
    decimal? latitude?;
    # The geographic longitude where the supplier is located.
    decimal? longitude?;
    # The state/county/province/region where the supplier is located.
    string? region?;
};

# 
public type Connect_embedded_payouts_config_claim record {
    # Whether the embedded component is enabled.
    boolean enabled;
    Connect_embedded_payouts_features features;
};

public type owner_params record {
    string account?;
    @constraint:String {maxLength: 5000}
    string customer?;
    "account"|"application"|"customer"|"self" 'type;
};

# 
public type Linked_account_options_us_bank_account record {
    Payment_flows_private_payment_methods_us_bank_account_linked_account_options_filters filters?;
    # The list of permissions to request. The `payment_method` permission must be included.
    ("balances"|"ownership"|"payment_method"|"transactions")[] permissions?;
    # Data features requested to be retrieved upon account creation.
    ("balances"|"ownership"|"transactions")[]? prefetch?;
    # For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.
    @constraint:String {maxLength: 5000}
    string return_url?;
};

# 
public type Payment_method_details_link record {
    # Two-letter ISO code representing the funding source country beneath the Link payment.
    # You could use this attribute to get a sense of international fees.
    string? country?;
};

# Represents the Queries record for the operation: GetRadarValueListItems
public type GetRadarValueListItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetRadarValueListItemsQueriesExpandItemsString[] expand?;
    # Only return items that were created during the given date interval.
    created_30 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Identifier for the parent value list this item belongs to.
    @constraint:String {maxLength: 5000}
    string value_list;
    # Return items belonging to the parent list whose value matches the specified value (using an "is like" match).
    @constraint:String {maxLength: 800}
    string value?;
};

public type invoiceitems_invoiceitem_body record {|
    # The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.
    int amount?;
    # An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.
    @constraint:String {maxLength: 5000}
    string description?;
    # Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items. Cannot be set to true for prorations.
    boolean discountable?;
    # The coupons, promotion codes & existing discounts which apply to the invoice item or invoice line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    invoiceitems_invoiceitem_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    period period?;
    # The ID of the price object. One of `price` or `price_data` is required.
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data price_data?;
    # Non-negative integer. The quantity of units for the invoice item.
    int quantity?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    string|"" tax_code?;
    # The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item. Pass an empty string to remove previously-defined tax rates.
    TaxratesItemsString[]|"" tax_rates?;
    # The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount.
    int unit_amount?;
    # Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.
    string unit_amount_decimal?;
|};

# 
public type Checkout_p24_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type configuration_item_params record {
    record {int usage_gte;}|"" billing_thresholds?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    record {|string...;|} metadata?;
    @constraint:String {maxLength: 5000}
    string price?;
    recurring_price_data price_data?;
    int quantity?;
    TaxratesItemsString[]|"" tax_rates?;
};

public type session_redact_bodyExpandItemsString string;

# 
public type Issuing_card_authorization_controls record {
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to allow. All other categories will be blocked. Cannot be set with `blocked_categories`.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? allowed_categories?;
    # Array of strings containing representing countries from which authorizations will be allowed. Authorizations from merchants in all other countries will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `blocked_merchant_countries`. Provide an empty value to unset this control.
    Issuing_card_authorization_controlsAllowedmerchantcountriesItemsString[]? allowed_merchant_countries?;
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to decline. All other categories will be allowed. Cannot be set with `allowed_categories`.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? blocked_categories?;
    # Array of strings containing representing countries from which authorizations will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `allowed_merchant_countries`. Provide an empty value to unset this control.
    Issuing_card_authorization_controlsBlockedmerchantcountriesItemsString[]? blocked_merchant_countries?;
    # Limit spending with amount-based rules that apply across any cards this card replaced (i.e., its `replacement_for` card and _that_ card's `replacement_for` card, up the chain).
    Issuing_card_spending_limit[]? spending_limits?;
    # Currency of the amounts within `spending_limits`. Always the same as the currency of the card.
    string? spending_limits_currency?;
};

# Parameters required for the redirect flow. Required if the source is authenticated by a redirect (`flow` is `redirect`).
public type redirect_params record {
    string return_url;
};

@constraint:String {maxLength: 5000}
public type GetTaxSettingsQueriesExpandItemsString string;

public type invoices_invoice_body record {|
    # The account tax IDs associated with the invoice. Only editable when the invoice is a draft.
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    # A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees).
    int application_fee_amount?;
    # Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice.
    boolean auto_advance?;
    automatic_tax_param_4 automatic_tax?;
    # Either `charge_automatically` or `send_invoice`. This field can be updated only on `draft` invoices.
    "charge_automatically"|"send_invoice" collection_method?;
    # A list of up to 4 custom fields to be displayed on the invoice. If a value for `custom_fields` is specified, the list specified will replace the existing custom field list on this invoice. Pass an empty string to remove previously-defined fields.
    record {string name; string value;}[]|"" custom_fields?;
    # The number of days from which the invoice is created until it is due. Only valid for invoices where `collection_method=send_invoice`. This field can only be updated on `draft` invoices.
    int days_until_due?;
    # ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.
    string|"" default_source?;
    # The tax rates that will apply to any line item that does not have `tax_rates` set. Pass an empty string to remove previously-defined tax rates.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.
    @constraint:String {maxLength: 1500}
    string description?;
    # The discounts that will apply to the invoice. Pass an empty string to remove previously-defined discounts.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # The date on which payment for this invoice is due. Only valid for invoices where `collection_method=send_invoice`. This field can only be updated on `draft` invoices.
    int due_date?;
    # The date when this invoice is in effect. Same as `finalized_at` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the invoice PDF and receipt.
    int|"" effective_at?;
    # Specifies which fields in the response should be expanded.
    invoices_invoice_bodyExpandItemsString[] expand?;
    # Footer to be displayed on the invoice.
    @constraint:String {maxLength: 5000}
    string footer?;
    param_1 issuer?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Set the number for this invoice. If no number is present then a number will be assigned automatically when the invoice is finalized. In many markets, regulations require invoices to be unique, sequential and / or gapless. You are responsible for ensuring this is true across all your different invoicing systems in the event that you edit the invoice number using our API. If you use only Stripe for your invoices and do not change invoice numbers, Stripe handles this aspect of compliance for you automatically.
    string|"" number?;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    string|"" on_behalf_of?;
    payment_settings_1 payment_settings?;
    rendering_param rendering?;
    # Settings for the cost of shipping for this invoice.
    record {string shipping_rate?; record {record {record {"business_day"|"day"|"hour"|"month"|"week" unit; int value;} maximum?; record {"business_day"|"day"|"hour"|"month"|"week" unit; int value;} minimum?;} delivery_estimate?; string display_name; record {int amount; string currency; record {|record {int amount; "exclusive"|"inclusive"|"unspecified" tax_behavior?;}...;|} currency_options?;} fixed_amount?; record {|string...;|} metadata?; "exclusive"|"inclusive"|"unspecified" tax_behavior?; string tax_code?; "fixed_amount" 'type?;} shipping_rate_data?;}|"" shipping_cost?;
    # Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string|"" phone?;}|"" shipping_details?;
    # Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice's charge. This will be unset if you POST an empty value.
    record {int amount?; string destination;}|"" transfer_data?;
|};

public type branding_settings_specs record {
    @constraint:String {maxLength: 5000}
    string icon?;
    @constraint:String {maxLength: 5000}
    string logo?;
    @constraint:String {maxLength: 5000}
    string primary_color?;
    @constraint:String {maxLength: 5000}
    string secondary_color?;
};

public type account_sessions_bodyExpandItemsString string;

public type source_verify_bodyValuesItemsString string;

public type tax_settings_body record {|
    defaults_param defaults?;
    # Specifies which fields in the response should be expanded.
    tax_settings_bodyExpandItemsString[] expand?;
    head_office_param head_office?;
|};

public type Terminal\.location record {
    Address address;
    string configuration_overrides?;
    string display_name;
    string id;
    boolean livemode;
    record {|string...;|} metadata;
    "terminal.location" 'object;
};

# The accounts that were collected as part of this Session.
public type BankConnectionsResourceLinkedAccountList_1 record {
    # Details about each object.
    Financial_connections\.account[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/financial_connections/accounts`}
    string url;
};

# Stripe users can accept [Apple Pay](/payments/apple-pay) in iOS applications in iOS 9 and later, and on the web in Safari starting with iOS 10 or macOS Sierra. There are no additional fees to process Apple Pay payments, and the [pricing](/pricing) is the same as other card transactions. Check this [page](https://stripe.com/docs/apple-pay) for more details.
public type payment_method_param_7 record {
    display_preference_param display_preference?;
};

# Apple Pay Later, a payment method for customers to buy now and pay later, gives your customers a way to split purchases into four installments across six weeks.
public type payment_method_param_8 record {
    display_preference_param display_preference?;
};

# 
public type Person_future_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Fields that need to be collected to keep the person's account enabled. If not collected by the account's `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash, and may immediately become `past_due`, but the account may also be given a grace period depending on the account's enablement state prior to transition.
    Person_future_requirementsCurrentlydueItemsString[] currently_due;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[] errors;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `future_requirements[current_deadline]` becomes set.
    Person_future_requirementsEventuallydueItemsString[] eventually_due;
    # Fields that weren't collected by the account's `requirements.current_deadline`. These fields need to be collected to enable the person's account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.
    Person_future_requirementsPastdueItemsString[] past_due;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`. Fields might appear in `eventually_due` or `currently_due` and in `pending_verification` if verification fails but another verification is still pending.
    Person_future_requirementsPendingverificationItemsString[] pending_verification;
};

# Stripe users in Australia can accept Bulk Electronic Clearing System (BECS) direct debit payments from customers with an Australian bank account. Check this [page](https://stripe.com/docs/payments/au-becs-debit) for more details.
public type payment_method_param_9 record {
    display_preference_param display_preference?;
};

# Each key of the dictionary represents a capability, and each capability
# maps to its settings (for example, whether it has been requested or not). Each
# capability is inactive until you have provided its specific
# requirements and Stripe has verified them. An account might have some
# of its requested capabilities be active and some be inactive.
# 
# Required when [account.controller.stripe_dashboard.type](/api/accounts/create#create_account-controller-dashboard-type)
# is `none`, which includes Custom accounts.
public type capabilities_param record {
    capability_param acss_debit_payments?;
    capability_param affirm_payments?;
    capability_param afterpay_clearpay_payments?;
    capability_param amazon_pay_payments?;
    capability_param au_becs_debit_payments?;
    capability_param bacs_debit_payments?;
    capability_param bancontact_payments?;
    capability_param bank_transfer_payments?;
    capability_param blik_payments?;
    capability_param boleto_payments?;
    capability_param card_issuing?;
    capability_param card_payments?;
    capability_param cartes_bancaires_payments?;
    capability_param cashapp_payments?;
    capability_param eps_payments?;
    capability_param fpx_payments?;
    capability_param gb_bank_transfer_payments?;
    capability_param giropay_payments?;
    capability_param grabpay_payments?;
    capability_param ideal_payments?;
    capability_param india_international_payments?;
    capability_param jcb_payments?;
    capability_param jp_bank_transfer_payments?;
    capability_param klarna_payments?;
    capability_param konbini_payments?;
    capability_param legacy_payments?;
    capability_param link_payments?;
    capability_param mobilepay_payments?;
    capability_param multibanco_payments?;
    capability_param mx_bank_transfer_payments?;
    capability_param oxxo_payments?;
    capability_param p24_payments?;
    capability_param paynow_payments?;
    capability_param promptpay_payments?;
    capability_param revolut_pay_payments?;
    capability_param sepa_bank_transfer_payments?;
    capability_param sepa_debit_payments?;
    capability_param sofort_payments?;
    capability_param swish_payments?;
    capability_param tax_reporting_us_1099_k?;
    capability_param tax_reporting_us_1099_misc?;
    capability_param transfers?;
    capability_param treasury?;
    capability_param twint_payments?;
    capability_param us_bank_account_ach_payments?;
    capability_param us_bank_transfer_payments?;
    capability_param zip_payments?;
};

# 
public type Issuing_network_token_mastercard record {
    # A unique reference ID from MasterCard to represent the card account number.
    @constraint:String {maxLength: 5000}
    string card_reference_id?;
    # The network-unique identifier for the token.
    @constraint:String {maxLength: 5000}
    string token_reference_id;
    # The ID of the entity requesting tokenization, specific to MasterCard.
    @constraint:String {maxLength: 5000}
    string token_requestor_id;
    # The name of the entity requesting tokenization, if known. This is directly provided from MasterCard.
    @constraint:String {maxLength: 5000}
    string token_requestor_name?;
};

# Details about the request forwarded to the destination endpoint.
public type Forwarded_request_details record {
    # The body payload to send to the destination endpoint.
    @constraint:String {maxLength: 5000}
    string body;
    # The headers to include in the forwarded request. Can be omitted if no additional headers (excluding Stripe-generated ones such as the Content-Type header) should be included.
    Forwarded_request_header[] headers;
    # The HTTP method used to call the destination endpoint.
    "POST" http_method;
};

# 
public type ListAccountCapability record {
    Capability[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Invoices_resource_status_transitions record {
    # The time that the invoice draft was finalized.
    int? finalized_at?;
    # The time that the invoice was marked uncollectible.
    int? marked_uncollectible_at?;
    # The time that the invoice was paid.
    int? paid_at?;
    # The time that the invoice was voided.
    int? voided_at?;
};

# Configure actions after a Checkout Session has expired.
public type after_expiration_params record {
    recovery_params recovery?;
};

# Represents the Queries record for the operation: GetWebhookEndpoints
public type GetWebhookEndpointsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetWebhookEndpointsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type subscription_cancel_at int|"";

public type invoices_bodyDefaulttaxratesItemsString string;

# 
public type Invoice_payment_method_options_card record {
    Invoice_installments_card installments?;
    # We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    "any"|"automatic"|"challenge"? request_three_d_secure?;
};

# Represents the Queries record for the operation: GetForwardingRequestsId
public type GetForwardingRequestsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetForwardingRequestsIdQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_transaction_fleet_cardholder_prompt_data record {
    # Driver ID.
    string? driver_id?;
    # Odometer reading.
    int? odometer?;
    # An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type.
    string? unspecified_id?;
    # User ID.
    string? user_id?;
    # Vehicle number.
    string? vehicle_number?;
};
